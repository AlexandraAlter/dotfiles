{
"STP*/A*": "{#Shift_L(a)}",
"STP*/PW*": "{#Shift_L(b)}",
"STP*/KR*": "{#Shift_L(c)}",
"STP*/TK*": "{#Shift_L(d)}",
"STP*/*E": "{#Shift_L(e)}",
"STP*/TP*": "{#Shift_L(f)}",
"STP*/TKPW*": "{#Shift_L(g)}",
"STP*/H*": "{#Shift_L(h)}",
"STP*/*EU": "{#Shift_L(i)}",
"STP*/SKWR*": "{#Shift_L(j)}",
"STP*/K*": "{#Shift_L(k)}",
"STP*/HR*": "{#Shift_L(l)}",
"STP*/PH*": "{#Shift_L(m)}",
"STP*/TPH*": "{#Shift_L(n)}",
"STP*/O*": "{#Shift_L(o)}",
"STP*/P*": "{#Shift_L(p)}",
"STP*/KW*": "{#Shift_L(q)}",
"STP*/R*": "{#Shift_L(r)}",
"STP*/S*": "{#Shift_L(s)}",
"STP*/T*": "{#Shift_L(t)}",
"STP*/*U": "{#Shift_L(u)}",
"STP*/SR*": "{#Shift_L(v)}",
"STP*/W*": "{#Shift_L(w)}",
"STP*/KP*": "{#Shift_L(x)}",
"STP*/KWR*": "{#Shift_L(y)}",
"STP*/STKPW*": "{#Shift_L(z)}",
"STP*/0": "{#Shift_L(0)}",
"STP*/1": "{#Shift_L(1)}",
"STP*/2": "{#Shift_L(2)}",
"STP*/3": "{#Shift_L(3)}",
"STP*/4": "{#Shift_L(4)}",
"STP*/5": "{#Shift_L(5)}",
"STP*/6": "{#Shift_L(6)}",
"STP*/7": "{#Shift_L(7)}",
"STP*/8": "{#Shift_L(8)}",
"STP*/9": "{#Shift_L(9)}",
"STP*/KH-FG": "{#Shift_L(grave)}",
"STP*/KW-BG": "{#Shift_L(comma)}",
"STP*/PR*EPB": "{#Shift_L(parenright)}",
"STP*/PREPB": "{#Shift_L(parenleft)}",
"STP*/PW*FP": "{#Shift_L(BackSpace)}",
"STP*/PWR*BGT": "{#Shift_L(bracketright)}",
"STP*/PWR-BGT": "{#Shift_L(bracketleft)}",
"STP*/R-R": "{#Shift_L(Return)}",
"STP*/S-P": "{#Shift_L(space)}",
"STP*/SP*S": "{#Shift_L()}",
"STP*/SPWHRAERB": "{#Shift_L(backslash)}",
"STP*/STPH-G": "{#Shift_L(Right)}",
"STP*/STPH-B": "{#Shift_L(Down)}",
"STP*/STPH-P": "{#Shift_L(Up)}",
"STP*/STPH-R": "{#Shift_L(Left)}",
"STP*/TA*B": "{#Shift_L(Tab)}",
"STP*/TKHRAO*ET": "{#Shift_L(Delete)}",
"THRA*/STP*/A*": "{#Alt_L(Shift_L(a))}",
"THRA*/STP*/PW*": "{#Alt_L(Shift_L(b))}",
"THRA*/STP*/KR*": "{#Alt_L(Shift_L(c))}",
"THRA*/STP*/TK*": "{#Alt_L(Shift_L(d))}",
"THRA*/STP*/*E": "{#Alt_L(Shift_L(e))}",
"THRA*/STP*/TP*": "{#Alt_L(Shift_L(f))}",
"THRA*/STP*/TKPW*": "{#Alt_L(Shift_L(g))}",
"THRA*/STP*/H*": "{#Alt_L(Shift_L(h))}",
"THRA*/STP*/*EU": "{#Alt_L(Shift_L(i))}",
"THRA*/STP*/SKWR*": "{#Alt_L(Shift_L(j))}",
"THRA*/STP*/K*": "{#Alt_L(Shift_L(k))}",
"THRA*/STP*/HR*": "{#Alt_L(Shift_L(l))}",
"THRA*/STP*/PH*": "{#Alt_L(Shift_L(m))}",
"THRA*/STP*/TPH*": "{#Alt_L(Shift_L(n))}",
"THRA*/STP*/O*": "{#Alt_L(Shift_L(o))}",
"THRA*/STP*/P*": "{#Alt_L(Shift_L(p))}",
"THRA*/STP*/KW*": "{#Alt_L(Shift_L(q))}",
"THRA*/STP*/R*": "{#Alt_L(Shift_L(r))}",
"THRA*/STP*/S*": "{#Alt_L(Shift_L(s))}",
"THRA*/STP*/T*": "{#Alt_L(Shift_L(t))}",
"THRA*/STP*/*U": "{#Alt_L(Shift_L(u))}",
"THRA*/STP*/SR*": "{#Alt_L(Shift_L(v))}",
"THRA*/STP*/W*": "{#Alt_L(Shift_L(w))}",
"THRA*/STP*/KP*": "{#Alt_L(Shift_L(x))}",
"THRA*/STP*/KWR*": "{#Alt_L(Shift_L(y))}",
"THRA*/STP*/STKPW*": "{#Alt_L(Shift_L(z))}",
"THRA*/STP*/0": "{#Alt_L(Shift_L(0))}",
"THRA*/STP*/1": "{#Alt_L(Shift_L(1))}",
"THRA*/STP*/2": "{#Alt_L(Shift_L(2))}",
"THRA*/STP*/3": "{#Alt_L(Shift_L(3))}",
"THRA*/STP*/4": "{#Alt_L(Shift_L(4))}",
"THRA*/STP*/5": "{#Alt_L(Shift_L(5))}",
"THRA*/STP*/6": "{#Alt_L(Shift_L(6))}",
"THRA*/STP*/7": "{#Alt_L(Shift_L(7))}",
"THRA*/STP*/8": "{#Alt_L(Shift_L(8))}",
"THRA*/STP*/9": "{#Alt_L(Shift_L(9))}",
"THRA*/STP*/KH-FG": "{#Alt_L(Shift_L(grave))}",
"THRA*/STP*/KW-BG": "{#Alt_L(Shift_L(comma))}",
"THRA*/STP*/PR*EPB": "{#Alt_L(Shift_L(parenright))}",
"THRA*/STP*/PREPB": "{#Alt_L(Shift_L(parenleft))}",
"THRA*/STP*/PW*FP": "{#Alt_L(Shift_L(BackSpace))}",
"THRA*/STP*/PWR*BGT": "{#Alt_L(Shift_L(bracketright))}",
"THRA*/STP*/PWR-BGT": "{#Alt_L(Shift_L(bracketleft))}",
"THRA*/STP*/R-R": "{#Alt_L(Shift_L(Return))}",
"THRA*/STP*/S-P": "{#Alt_L(Shift_L(space))}",
"THRA*/STP*/SP*S": "{#Alt_L(Shift_L())}",
"THRA*/STP*/SPWHRAERB": "{#Alt_L(Shift_L(backslash))}",
"THRA*/STP*/STPH-G": "{#Alt_L(Shift_L(Right))}",
"THRA*/STP*/STPH-B": "{#Alt_L(Shift_L(Down))}",
"THRA*/STP*/STPH-P": "{#Alt_L(Shift_L(Up))}",
"THRA*/STP*/STPH-R": "{#Alt_L(Shift_L(Left))}",
"THRA*/STP*/TA*B": "{#Alt_L(Shift_L(Tab))}",
"THRA*/STP*/TKHRAO*ET": "{#Alt_L(Shift_L(Delete))}",
"THRA*/A*": "{#Alt_L(a)}",
"THRA*/PW*": "{#Alt_L(b)}",
"THRA*/KR*": "{#Alt_L(c)}",
"THRA*/TK*": "{#Alt_L(d)}",
"THRA*/*E": "{#Alt_L(e)}",
"THRA*/TP*": "{#Alt_L(f)}",
"THRA*/TKPW*": "{#Alt_L(g)}",
"THRA*/H*": "{#Alt_L(h)}",
"THRA*/*EU": "{#Alt_L(i)}",
"THRA*/SKWR*": "{#Alt_L(j)}",
"THRA*/K*": "{#Alt_L(k)}",
"THRA*/HR*": "{#Alt_L(l)}",
"THRA*/PH*": "{#Alt_L(m)}",
"THRA*/TPH*": "{#Alt_L(n)}",
"THRA*/O*": "{#Alt_L(o)}",
"THRA*/P*": "{#Alt_L(p)}",
"THRA*/KW*": "{#Alt_L(q)}",
"THRA*/R*": "{#Alt_L(r)}",
"THRA*/S*": "{#Alt_L(s)}",
"THRA*/T*": "{#Alt_L(t)}",
"THRA*/*U": "{#Alt_L(u)}",
"THRA*/SR*": "{#Alt_L(v)}",
"THRA*/W*": "{#Alt_L(w)}",
"THRA*/KP*": "{#Alt_L(x)}",
"THRA*/KWR*": "{#Alt_L(y)}",
"THRA*/STKPW*": "{#Alt_L(z)}",
"THRA*/0": "{#Alt_L(0)}",
"THRA*/1": "{#Alt_L(1)}",
"THRA*/2": "{#Alt_L(2)}",
"THRA*/3": "{#Alt_L(3)}",
"THRA*/4": "{#Alt_L(4)}",
"THRA*/5": "{#Alt_L(5)}",
"THRA*/6": "{#Alt_L(6)}",
"THRA*/7": "{#Alt_L(7)}",
"THRA*/8": "{#Alt_L(8)}",
"THRA*/9": "{#Alt_L(9)}",
"THRA*/KH-FG": "{#Alt_L(grave)}",
"THRA*/KW-BG": "{#Alt_L(comma)}",
"THRA*/PR*EPB": "{#Alt_L(parenright)}",
"THRA*/PREPB": "{#Alt_L(parenleft)}",
"THRA*/PW*FP": "{#Alt_L(BackSpace)}",
"THRA*/PWR*BGT": "{#Alt_L(bracketright)}",
"THRA*/PWR-BGT": "{#Alt_L(bracketleft)}",
"THRA*/R-R": "{#Alt_L(Return)}",
"THRA*/S-P": "{#Alt_L(space)}",
"THRA*/SP*S": "{#Alt_L()}",
"THRA*/SPWHRAERB": "{#Alt_L(backslash)}",
"THRA*/STPH-G": "{#Alt_L(Right)}",
"THRA*/STPH-B": "{#Alt_L(Down)}",
"THRA*/STPH-P": "{#Alt_L(Up)}",
"THRA*/STPH-R": "{#Alt_L(Left)}",
"THRA*/TA*B": "{#Alt_L(Tab)}",
"THRA*/TKHRAO*ET": "{#Alt_L(Delete)}",
"STP*/THRA*/A*": "{#Shift_L(Alt_L(a))}",
"STP*/THRA*/PW*": "{#Shift_L(Alt_L(b))}",
"STP*/THRA*/KR*": "{#Shift_L(Alt_L(c))}",
"STP*/THRA*/TK*": "{#Shift_L(Alt_L(d))}",
"STP*/THRA*/*E": "{#Shift_L(Alt_L(e))}",
"STP*/THRA*/TP*": "{#Shift_L(Alt_L(f))}",
"STP*/THRA*/TKPW*": "{#Shift_L(Alt_L(g))}",
"STP*/THRA*/H*": "{#Shift_L(Alt_L(h))}",
"STP*/THRA*/*EU": "{#Shift_L(Alt_L(i))}",
"STP*/THRA*/SKWR*": "{#Shift_L(Alt_L(j))}",
"STP*/THRA*/K*": "{#Shift_L(Alt_L(k))}",
"STP*/THRA*/HR*": "{#Shift_L(Alt_L(l))}",
"STP*/THRA*/PH*": "{#Shift_L(Alt_L(m))}",
"STP*/THRA*/TPH*": "{#Shift_L(Alt_L(n))}",
"STP*/THRA*/O*": "{#Shift_L(Alt_L(o))}",
"STP*/THRA*/P*": "{#Shift_L(Alt_L(p))}",
"STP*/THRA*/KW*": "{#Shift_L(Alt_L(q))}",
"STP*/THRA*/R*": "{#Shift_L(Alt_L(r))}",
"STP*/THRA*/S*": "{#Shift_L(Alt_L(s))}",
"STP*/THRA*/T*": "{#Shift_L(Alt_L(t))}",
"STP*/THRA*/*U": "{#Shift_L(Alt_L(u))}",
"STP*/THRA*/SR*": "{#Shift_L(Alt_L(v))}",
"STP*/THRA*/W*": "{#Shift_L(Alt_L(w))}",
"STP*/THRA*/KP*": "{#Shift_L(Alt_L(x))}",
"STP*/THRA*/KWR*": "{#Shift_L(Alt_L(y))}",
"STP*/THRA*/STKPW*": "{#Shift_L(Alt_L(z))}",
"STP*/THRA*/0": "{#Shift_L(Alt_L(0))}",
"STP*/THRA*/1": "{#Shift_L(Alt_L(1))}",
"STP*/THRA*/2": "{#Shift_L(Alt_L(2))}",
"STP*/THRA*/3": "{#Shift_L(Alt_L(3))}",
"STP*/THRA*/4": "{#Shift_L(Alt_L(4))}",
"STP*/THRA*/5": "{#Shift_L(Alt_L(5))}",
"STP*/THRA*/6": "{#Shift_L(Alt_L(6))}",
"STP*/THRA*/7": "{#Shift_L(Alt_L(7))}",
"STP*/THRA*/8": "{#Shift_L(Alt_L(8))}",
"STP*/THRA*/9": "{#Shift_L(Alt_L(9))}",
"STP*/THRA*/KH-FG": "{#Shift_L(Alt_L(grave))}",
"STP*/THRA*/KW-BG": "{#Shift_L(Alt_L(comma))}",
"STP*/THRA*/PR*EPB": "{#Shift_L(Alt_L(parenright))}",
"STP*/THRA*/PREPB": "{#Shift_L(Alt_L(parenleft))}",
"STP*/THRA*/PW*FP": "{#Shift_L(Alt_L(BackSpace))}",
"STP*/THRA*/PWR*BGT": "{#Shift_L(Alt_L(bracketright))}",
"STP*/THRA*/PWR-BGT": "{#Shift_L(Alt_L(bracketleft))}",
"STP*/THRA*/R-R": "{#Shift_L(Alt_L(Return))}",
"STP*/THRA*/S-P": "{#Shift_L(Alt_L(space))}",
"STP*/THRA*/SP*S": "{#Shift_L(Alt_L())}",
"STP*/THRA*/SPWHRAERB": "{#Shift_L(Alt_L(backslash))}",
"STP*/THRA*/STPH-G": "{#Shift_L(Alt_L(Right))}",
"STP*/THRA*/STPH-B": "{#Shift_L(Alt_L(Down))}",
"STP*/THRA*/STPH-P": "{#Shift_L(Alt_L(Up))}",
"STP*/THRA*/STPH-R": "{#Shift_L(Alt_L(Left))}",
"STP*/THRA*/TA*B": "{#Shift_L(Alt_L(Tab))}",
"STP*/THRA*/TKHRAO*ET": "{#Shift_L(Alt_L(Delete))}",
"KPH*/STP*/A*": "{#Super_L(Shift_L(a))}",
"KPH*/STP*/PW*": "{#Super_L(Shift_L(b))}",
"KPH*/STP*/KR*": "{#Super_L(Shift_L(c))}",
"KPH*/STP*/TK*": "{#Super_L(Shift_L(d))}",
"KPH*/STP*/*E": "{#Super_L(Shift_L(e))}",
"KPH*/STP*/TP*": "{#Super_L(Shift_L(f))}",
"KPH*/STP*/TKPW*": "{#Super_L(Shift_L(g))}",
"KPH*/STP*/H*": "{#Super_L(Shift_L(h))}",
"KPH*/STP*/*EU": "{#Super_L(Shift_L(i))}",
"KPH*/STP*/SKWR*": "{#Super_L(Shift_L(j))}",
"KPH*/STP*/K*": "{#Super_L(Shift_L(k))}",
"KPH*/STP*/HR*": "{#Super_L(Shift_L(l))}",
"KPH*/STP*/PH*": "{#Super_L(Shift_L(m))}",
"KPH*/STP*/TPH*": "{#Super_L(Shift_L(n))}",
"KPH*/STP*/O*": "{#Super_L(Shift_L(o))}",
"KPH*/STP*/P*": "{#Super_L(Shift_L(p))}",
"KPH*/STP*/KW*": "{#Super_L(Shift_L(q))}",
"KPH*/STP*/R*": "{#Super_L(Shift_L(r))}",
"KPH*/STP*/S*": "{#Super_L(Shift_L(s))}",
"KPH*/STP*/T*": "{#Super_L(Shift_L(t))}",
"KPH*/STP*/*U": "{#Super_L(Shift_L(u))}",
"KPH*/STP*/SR*": "{#Super_L(Shift_L(v))}",
"KPH*/STP*/W*": "{#Super_L(Shift_L(w))}",
"KPH*/STP*/KP*": "{#Super_L(Shift_L(x))}",
"KPH*/STP*/KWR*": "{#Super_L(Shift_L(y))}",
"KPH*/STP*/STKPW*": "{#Super_L(Shift_L(z))}",
"KPH*/STP*/0": "{#Super_L(Shift_L(0))}",
"KPH*/STP*/1": "{#Super_L(Shift_L(1))}",
"KPH*/STP*/2": "{#Super_L(Shift_L(2))}",
"KPH*/STP*/3": "{#Super_L(Shift_L(3))}",
"KPH*/STP*/4": "{#Super_L(Shift_L(4))}",
"KPH*/STP*/5": "{#Super_L(Shift_L(5))}",
"KPH*/STP*/6": "{#Super_L(Shift_L(6))}",
"KPH*/STP*/7": "{#Super_L(Shift_L(7))}",
"KPH*/STP*/8": "{#Super_L(Shift_L(8))}",
"KPH*/STP*/9": "{#Super_L(Shift_L(9))}",
"KPH*/STP*/KH-FG": "{#Super_L(Shift_L(grave))}",
"KPH*/STP*/KW-BG": "{#Super_L(Shift_L(comma))}",
"KPH*/STP*/PR*EPB": "{#Super_L(Shift_L(parenright))}",
"KPH*/STP*/PREPB": "{#Super_L(Shift_L(parenleft))}",
"KPH*/STP*/PW*FP": "{#Super_L(Shift_L(BackSpace))}",
"KPH*/STP*/PWR*BGT": "{#Super_L(Shift_L(bracketright))}",
"KPH*/STP*/PWR-BGT": "{#Super_L(Shift_L(bracketleft))}",
"KPH*/STP*/R-R": "{#Super_L(Shift_L(Return))}",
"KPH*/STP*/S-P": "{#Super_L(Shift_L(space))}",
"KPH*/STP*/SP*S": "{#Super_L(Shift_L())}",
"KPH*/STP*/SPWHRAERB": "{#Super_L(Shift_L(backslash))}",
"KPH*/STP*/STPH-G": "{#Super_L(Shift_L(Right))}",
"KPH*/STP*/STPH-B": "{#Super_L(Shift_L(Down))}",
"KPH*/STP*/STPH-P": "{#Super_L(Shift_L(Up))}",
"KPH*/STP*/STPH-R": "{#Super_L(Shift_L(Left))}",
"KPH*/STP*/TA*B": "{#Super_L(Shift_L(Tab))}",
"KPH*/STP*/TKHRAO*ET": "{#Super_L(Shift_L(Delete))}",
"KPH*/THRA*/STP*/A*": "{#Super_L(Alt_L(Shift_L(a)))}",
"KPH*/THRA*/STP*/PW*": "{#Super_L(Alt_L(Shift_L(b)))}",
"KPH*/THRA*/STP*/KR*": "{#Super_L(Alt_L(Shift_L(c)))}",
"KPH*/THRA*/STP*/TK*": "{#Super_L(Alt_L(Shift_L(d)))}",
"KPH*/THRA*/STP*/*E": "{#Super_L(Alt_L(Shift_L(e)))}",
"KPH*/THRA*/STP*/TP*": "{#Super_L(Alt_L(Shift_L(f)))}",
"KPH*/THRA*/STP*/TKPW*": "{#Super_L(Alt_L(Shift_L(g)))}",
"KPH*/THRA*/STP*/H*": "{#Super_L(Alt_L(Shift_L(h)))}",
"KPH*/THRA*/STP*/*EU": "{#Super_L(Alt_L(Shift_L(i)))}",
"KPH*/THRA*/STP*/SKWR*": "{#Super_L(Alt_L(Shift_L(j)))}",
"KPH*/THRA*/STP*/K*": "{#Super_L(Alt_L(Shift_L(k)))}",
"KPH*/THRA*/STP*/HR*": "{#Super_L(Alt_L(Shift_L(l)))}",
"KPH*/THRA*/STP*/PH*": "{#Super_L(Alt_L(Shift_L(m)))}",
"KPH*/THRA*/STP*/TPH*": "{#Super_L(Alt_L(Shift_L(n)))}",
"KPH*/THRA*/STP*/O*": "{#Super_L(Alt_L(Shift_L(o)))}",
"KPH*/THRA*/STP*/P*": "{#Super_L(Alt_L(Shift_L(p)))}",
"KPH*/THRA*/STP*/KW*": "{#Super_L(Alt_L(Shift_L(q)))}",
"KPH*/THRA*/STP*/R*": "{#Super_L(Alt_L(Shift_L(r)))}",
"KPH*/THRA*/STP*/S*": "{#Super_L(Alt_L(Shift_L(s)))}",
"KPH*/THRA*/STP*/T*": "{#Super_L(Alt_L(Shift_L(t)))}",
"KPH*/THRA*/STP*/*U": "{#Super_L(Alt_L(Shift_L(u)))}",
"KPH*/THRA*/STP*/SR*": "{#Super_L(Alt_L(Shift_L(v)))}",
"KPH*/THRA*/STP*/W*": "{#Super_L(Alt_L(Shift_L(w)))}",
"KPH*/THRA*/STP*/KP*": "{#Super_L(Alt_L(Shift_L(x)))}",
"KPH*/THRA*/STP*/KWR*": "{#Super_L(Alt_L(Shift_L(y)))}",
"KPH*/THRA*/STP*/STKPW*": "{#Super_L(Alt_L(Shift_L(z)))}",
"KPH*/THRA*/STP*/0": "{#Super_L(Alt_L(Shift_L(0)))}",
"KPH*/THRA*/STP*/1": "{#Super_L(Alt_L(Shift_L(1)))}",
"KPH*/THRA*/STP*/2": "{#Super_L(Alt_L(Shift_L(2)))}",
"KPH*/THRA*/STP*/3": "{#Super_L(Alt_L(Shift_L(3)))}",
"KPH*/THRA*/STP*/4": "{#Super_L(Alt_L(Shift_L(4)))}",
"KPH*/THRA*/STP*/5": "{#Super_L(Alt_L(Shift_L(5)))}",
"KPH*/THRA*/STP*/6": "{#Super_L(Alt_L(Shift_L(6)))}",
"KPH*/THRA*/STP*/7": "{#Super_L(Alt_L(Shift_L(7)))}",
"KPH*/THRA*/STP*/8": "{#Super_L(Alt_L(Shift_L(8)))}",
"KPH*/THRA*/STP*/9": "{#Super_L(Alt_L(Shift_L(9)))}",
"KPH*/THRA*/STP*/KH-FG": "{#Super_L(Alt_L(Shift_L(grave)))}",
"KPH*/THRA*/STP*/KW-BG": "{#Super_L(Alt_L(Shift_L(comma)))}",
"KPH*/THRA*/STP*/PR*EPB": "{#Super_L(Alt_L(Shift_L(parenright)))}",
"KPH*/THRA*/STP*/PREPB": "{#Super_L(Alt_L(Shift_L(parenleft)))}",
"KPH*/THRA*/STP*/PW*FP": "{#Super_L(Alt_L(Shift_L(BackSpace)))}",
"KPH*/THRA*/STP*/PWR*BGT": "{#Super_L(Alt_L(Shift_L(bracketright)))}",
"KPH*/THRA*/STP*/PWR-BGT": "{#Super_L(Alt_L(Shift_L(bracketleft)))}",
"KPH*/THRA*/STP*/R-R": "{#Super_L(Alt_L(Shift_L(Return)))}",
"KPH*/THRA*/STP*/S-P": "{#Super_L(Alt_L(Shift_L(space)))}",
"KPH*/THRA*/STP*/SP*S": "{#Super_L(Alt_L(Shift_L()))}",
"KPH*/THRA*/STP*/SPWHRAERB": "{#Super_L(Alt_L(Shift_L(backslash)))}",
"KPH*/THRA*/STP*/STPH-G": "{#Super_L(Alt_L(Shift_L(Right)))}",
"KPH*/THRA*/STP*/STPH-B": "{#Super_L(Alt_L(Shift_L(Down)))}",
"KPH*/THRA*/STP*/STPH-P": "{#Super_L(Alt_L(Shift_L(Up)))}",
"KPH*/THRA*/STP*/STPH-R": "{#Super_L(Alt_L(Shift_L(Left)))}",
"KPH*/THRA*/STP*/TA*B": "{#Super_L(Alt_L(Shift_L(Tab)))}",
"KPH*/THRA*/STP*/TKHRAO*ET": "{#Super_L(Alt_L(Shift_L(Delete)))}",
"KPH*/THRA*/A*": "{#Super_L(Alt_L(a))}",
"KPH*/THRA*/PW*": "{#Super_L(Alt_L(b))}",
"KPH*/THRA*/KR*": "{#Super_L(Alt_L(c))}",
"KPH*/THRA*/TK*": "{#Super_L(Alt_L(d))}",
"KPH*/THRA*/*E": "{#Super_L(Alt_L(e))}",
"KPH*/THRA*/TP*": "{#Super_L(Alt_L(f))}",
"KPH*/THRA*/TKPW*": "{#Super_L(Alt_L(g))}",
"KPH*/THRA*/H*": "{#Super_L(Alt_L(h))}",
"KPH*/THRA*/*EU": "{#Super_L(Alt_L(i))}",
"KPH*/THRA*/SKWR*": "{#Super_L(Alt_L(j))}",
"KPH*/THRA*/K*": "{#Super_L(Alt_L(k))}",
"KPH*/THRA*/HR*": "{#Super_L(Alt_L(l))}",
"KPH*/THRA*/PH*": "{#Super_L(Alt_L(m))}",
"KPH*/THRA*/TPH*": "{#Super_L(Alt_L(n))}",
"KPH*/THRA*/O*": "{#Super_L(Alt_L(o))}",
"KPH*/THRA*/P*": "{#Super_L(Alt_L(p))}",
"KPH*/THRA*/KW*": "{#Super_L(Alt_L(q))}",
"KPH*/THRA*/R*": "{#Super_L(Alt_L(r))}",
"KPH*/THRA*/S*": "{#Super_L(Alt_L(s))}",
"KPH*/THRA*/T*": "{#Super_L(Alt_L(t))}",
"KPH*/THRA*/*U": "{#Super_L(Alt_L(u))}",
"KPH*/THRA*/SR*": "{#Super_L(Alt_L(v))}",
"KPH*/THRA*/W*": "{#Super_L(Alt_L(w))}",
"KPH*/THRA*/KP*": "{#Super_L(Alt_L(x))}",
"KPH*/THRA*/KWR*": "{#Super_L(Alt_L(y))}",
"KPH*/THRA*/STKPW*": "{#Super_L(Alt_L(z))}",
"KPH*/THRA*/0": "{#Super_L(Alt_L(0))}",
"KPH*/THRA*/1": "{#Super_L(Alt_L(1))}",
"KPH*/THRA*/2": "{#Super_L(Alt_L(2))}",
"KPH*/THRA*/3": "{#Super_L(Alt_L(3))}",
"KPH*/THRA*/4": "{#Super_L(Alt_L(4))}",
"KPH*/THRA*/5": "{#Super_L(Alt_L(5))}",
"KPH*/THRA*/6": "{#Super_L(Alt_L(6))}",
"KPH*/THRA*/7": "{#Super_L(Alt_L(7))}",
"KPH*/THRA*/8": "{#Super_L(Alt_L(8))}",
"KPH*/THRA*/9": "{#Super_L(Alt_L(9))}",
"KPH*/THRA*/KH-FG": "{#Super_L(Alt_L(grave))}",
"KPH*/THRA*/KW-BG": "{#Super_L(Alt_L(comma))}",
"KPH*/THRA*/PR*EPB": "{#Super_L(Alt_L(parenright))}",
"KPH*/THRA*/PREPB": "{#Super_L(Alt_L(parenleft))}",
"KPH*/THRA*/PW*FP": "{#Super_L(Alt_L(BackSpace))}",
"KPH*/THRA*/PWR*BGT": "{#Super_L(Alt_L(bracketright))}",
"KPH*/THRA*/PWR-BGT": "{#Super_L(Alt_L(bracketleft))}",
"KPH*/THRA*/R-R": "{#Super_L(Alt_L(Return))}",
"KPH*/THRA*/S-P": "{#Super_L(Alt_L(space))}",
"KPH*/THRA*/SP*S": "{#Super_L(Alt_L())}",
"KPH*/THRA*/SPWHRAERB": "{#Super_L(Alt_L(backslash))}",
"KPH*/THRA*/STPH-G": "{#Super_L(Alt_L(Right))}",
"KPH*/THRA*/STPH-B": "{#Super_L(Alt_L(Down))}",
"KPH*/THRA*/STPH-P": "{#Super_L(Alt_L(Up))}",
"KPH*/THRA*/STPH-R": "{#Super_L(Alt_L(Left))}",
"KPH*/THRA*/TA*B": "{#Super_L(Alt_L(Tab))}",
"KPH*/THRA*/TKHRAO*ET": "{#Super_L(Alt_L(Delete))}",
"KPH*/STP*/THRA*/A*": "{#Super_L(Shift_L(Alt_L(a)))}",
"KPH*/STP*/THRA*/PW*": "{#Super_L(Shift_L(Alt_L(b)))}",
"KPH*/STP*/THRA*/KR*": "{#Super_L(Shift_L(Alt_L(c)))}",
"KPH*/STP*/THRA*/TK*": "{#Super_L(Shift_L(Alt_L(d)))}",
"KPH*/STP*/THRA*/*E": "{#Super_L(Shift_L(Alt_L(e)))}",
"KPH*/STP*/THRA*/TP*": "{#Super_L(Shift_L(Alt_L(f)))}",
"KPH*/STP*/THRA*/TKPW*": "{#Super_L(Shift_L(Alt_L(g)))}",
"KPH*/STP*/THRA*/H*": "{#Super_L(Shift_L(Alt_L(h)))}",
"KPH*/STP*/THRA*/*EU": "{#Super_L(Shift_L(Alt_L(i)))}",
"KPH*/STP*/THRA*/SKWR*": "{#Super_L(Shift_L(Alt_L(j)))}",
"KPH*/STP*/THRA*/K*": "{#Super_L(Shift_L(Alt_L(k)))}",
"KPH*/STP*/THRA*/HR*": "{#Super_L(Shift_L(Alt_L(l)))}",
"KPH*/STP*/THRA*/PH*": "{#Super_L(Shift_L(Alt_L(m)))}",
"KPH*/STP*/THRA*/TPH*": "{#Super_L(Shift_L(Alt_L(n)))}",
"KPH*/STP*/THRA*/O*": "{#Super_L(Shift_L(Alt_L(o)))}",
"KPH*/STP*/THRA*/P*": "{#Super_L(Shift_L(Alt_L(p)))}",
"KPH*/STP*/THRA*/KW*": "{#Super_L(Shift_L(Alt_L(q)))}",
"KPH*/STP*/THRA*/R*": "{#Super_L(Shift_L(Alt_L(r)))}",
"KPH*/STP*/THRA*/S*": "{#Super_L(Shift_L(Alt_L(s)))}",
"KPH*/STP*/THRA*/T*": "{#Super_L(Shift_L(Alt_L(t)))}",
"KPH*/STP*/THRA*/*U": "{#Super_L(Shift_L(Alt_L(u)))}",
"KPH*/STP*/THRA*/SR*": "{#Super_L(Shift_L(Alt_L(v)))}",
"KPH*/STP*/THRA*/W*": "{#Super_L(Shift_L(Alt_L(w)))}",
"KPH*/STP*/THRA*/KP*": "{#Super_L(Shift_L(Alt_L(x)))}",
"KPH*/STP*/THRA*/KWR*": "{#Super_L(Shift_L(Alt_L(y)))}",
"KPH*/STP*/THRA*/STKPW*": "{#Super_L(Shift_L(Alt_L(z)))}",
"KPH*/STP*/THRA*/0": "{#Super_L(Shift_L(Alt_L(0)))}",
"KPH*/STP*/THRA*/1": "{#Super_L(Shift_L(Alt_L(1)))}",
"KPH*/STP*/THRA*/2": "{#Super_L(Shift_L(Alt_L(2)))}",
"KPH*/STP*/THRA*/3": "{#Super_L(Shift_L(Alt_L(3)))}",
"KPH*/STP*/THRA*/4": "{#Super_L(Shift_L(Alt_L(4)))}",
"KPH*/STP*/THRA*/5": "{#Super_L(Shift_L(Alt_L(5)))}",
"KPH*/STP*/THRA*/6": "{#Super_L(Shift_L(Alt_L(6)))}",
"KPH*/STP*/THRA*/7": "{#Super_L(Shift_L(Alt_L(7)))}",
"KPH*/STP*/THRA*/8": "{#Super_L(Shift_L(Alt_L(8)))}",
"KPH*/STP*/THRA*/9": "{#Super_L(Shift_L(Alt_L(9)))}",
"KPH*/STP*/THRA*/KH-FG": "{#Super_L(Shift_L(Alt_L(grave)))}",
"KPH*/STP*/THRA*/KW-BG": "{#Super_L(Shift_L(Alt_L(comma)))}",
"KPH*/STP*/THRA*/PR*EPB": "{#Super_L(Shift_L(Alt_L(parenright)))}",
"KPH*/STP*/THRA*/PREPB": "{#Super_L(Shift_L(Alt_L(parenleft)))}",
"KPH*/STP*/THRA*/PW*FP": "{#Super_L(Shift_L(Alt_L(BackSpace)))}",
"KPH*/STP*/THRA*/PWR*BGT": "{#Super_L(Shift_L(Alt_L(bracketright)))}",
"KPH*/STP*/THRA*/PWR-BGT": "{#Super_L(Shift_L(Alt_L(bracketleft)))}",
"KPH*/STP*/THRA*/R-R": "{#Super_L(Shift_L(Alt_L(Return)))}",
"KPH*/STP*/THRA*/S-P": "{#Super_L(Shift_L(Alt_L(space)))}",
"KPH*/STP*/THRA*/SP*S": "{#Super_L(Shift_L(Alt_L()))}",
"KPH*/STP*/THRA*/SPWHRAERB": "{#Super_L(Shift_L(Alt_L(backslash)))}",
"KPH*/STP*/THRA*/STPH-G": "{#Super_L(Shift_L(Alt_L(Right)))}",
"KPH*/STP*/THRA*/STPH-B": "{#Super_L(Shift_L(Alt_L(Down)))}",
"KPH*/STP*/THRA*/STPH-P": "{#Super_L(Shift_L(Alt_L(Up)))}",
"KPH*/STP*/THRA*/STPH-R": "{#Super_L(Shift_L(Alt_L(Left)))}",
"KPH*/STP*/THRA*/TA*B": "{#Super_L(Shift_L(Alt_L(Tab)))}",
"KPH*/STP*/THRA*/TKHRAO*ET": "{#Super_L(Shift_L(Alt_L(Delete)))}",
"STP*/A*": "{#Shift_L(a)}",
"STP*/PW*": "{#Shift_L(b)}",
"STP*/KR*": "{#Shift_L(c)}",
"STP*/TK*": "{#Shift_L(d)}",
"STP*/*E": "{#Shift_L(e)}",
"STP*/TP*": "{#Shift_L(f)}",
"STP*/TKPW*": "{#Shift_L(g)}",
"STP*/H*": "{#Shift_L(h)}",
"STP*/*EU": "{#Shift_L(i)}",
"STP*/SKWR*": "{#Shift_L(j)}",
"STP*/K*": "{#Shift_L(k)}",
"STP*/HR*": "{#Shift_L(l)}",
"STP*/PH*": "{#Shift_L(m)}",
"STP*/TPH*": "{#Shift_L(n)}",
"STP*/O*": "{#Shift_L(o)}",
"STP*/P*": "{#Shift_L(p)}",
"STP*/KW*": "{#Shift_L(q)}",
"STP*/R*": "{#Shift_L(r)}",
"STP*/S*": "{#Shift_L(s)}",
"STP*/T*": "{#Shift_L(t)}",
"STP*/*U": "{#Shift_L(u)}",
"STP*/SR*": "{#Shift_L(v)}",
"STP*/W*": "{#Shift_L(w)}",
"STP*/KP*": "{#Shift_L(x)}",
"STP*/KWR*": "{#Shift_L(y)}",
"STP*/STKPW*": "{#Shift_L(z)}",
"STP*/0": "{#Shift_L(0)}",
"STP*/1": "{#Shift_L(1)}",
"STP*/2": "{#Shift_L(2)}",
"STP*/3": "{#Shift_L(3)}",
"STP*/4": "{#Shift_L(4)}",
"STP*/5": "{#Shift_L(5)}",
"STP*/6": "{#Shift_L(6)}",
"STP*/7": "{#Shift_L(7)}",
"STP*/8": "{#Shift_L(8)}",
"STP*/9": "{#Shift_L(9)}",
"STP*/KH-FG": "{#Shift_L(grave)}",
"STP*/KW-BG": "{#Shift_L(comma)}",
"STP*/PR*EPB": "{#Shift_L(parenright)}",
"STP*/PREPB": "{#Shift_L(parenleft)}",
"STP*/PW*FP": "{#Shift_L(BackSpace)}",
"STP*/PWR*BGT": "{#Shift_L(bracketright)}",
"STP*/PWR-BGT": "{#Shift_L(bracketleft)}",
"STP*/R-R": "{#Shift_L(Return)}",
"STP*/S-P": "{#Shift_L(space)}",
"STP*/SP*S": "{#Shift_L()}",
"STP*/SPWHRAERB": "{#Shift_L(backslash)}",
"STP*/STPH-G": "{#Shift_L(Right)}",
"STP*/STPH-B": "{#Shift_L(Down)}",
"STP*/STPH-P": "{#Shift_L(Up)}",
"STP*/STPH-R": "{#Shift_L(Left)}",
"STP*/TA*B": "{#Shift_L(Tab)}",
"STP*/TKHRAO*ET": "{#Shift_L(Delete)}",
"KPH*/STP*/A*": "{#Super_L(Shift_L(a))}",
"KPH*/STP*/PW*": "{#Super_L(Shift_L(b))}",
"KPH*/STP*/KR*": "{#Super_L(Shift_L(c))}",
"KPH*/STP*/TK*": "{#Super_L(Shift_L(d))}",
"KPH*/STP*/*E": "{#Super_L(Shift_L(e))}",
"KPH*/STP*/TP*": "{#Super_L(Shift_L(f))}",
"KPH*/STP*/TKPW*": "{#Super_L(Shift_L(g))}",
"KPH*/STP*/H*": "{#Super_L(Shift_L(h))}",
"KPH*/STP*/*EU": "{#Super_L(Shift_L(i))}",
"KPH*/STP*/SKWR*": "{#Super_L(Shift_L(j))}",
"KPH*/STP*/K*": "{#Super_L(Shift_L(k))}",
"KPH*/STP*/HR*": "{#Super_L(Shift_L(l))}",
"KPH*/STP*/PH*": "{#Super_L(Shift_L(m))}",
"KPH*/STP*/TPH*": "{#Super_L(Shift_L(n))}",
"KPH*/STP*/O*": "{#Super_L(Shift_L(o))}",
"KPH*/STP*/P*": "{#Super_L(Shift_L(p))}",
"KPH*/STP*/KW*": "{#Super_L(Shift_L(q))}",
"KPH*/STP*/R*": "{#Super_L(Shift_L(r))}",
"KPH*/STP*/S*": "{#Super_L(Shift_L(s))}",
"KPH*/STP*/T*": "{#Super_L(Shift_L(t))}",
"KPH*/STP*/*U": "{#Super_L(Shift_L(u))}",
"KPH*/STP*/SR*": "{#Super_L(Shift_L(v))}",
"KPH*/STP*/W*": "{#Super_L(Shift_L(w))}",
"KPH*/STP*/KP*": "{#Super_L(Shift_L(x))}",
"KPH*/STP*/KWR*": "{#Super_L(Shift_L(y))}",
"KPH*/STP*/STKPW*": "{#Super_L(Shift_L(z))}",
"KPH*/STP*/0": "{#Super_L(Shift_L(0))}",
"KPH*/STP*/1": "{#Super_L(Shift_L(1))}",
"KPH*/STP*/2": "{#Super_L(Shift_L(2))}",
"KPH*/STP*/3": "{#Super_L(Shift_L(3))}",
"KPH*/STP*/4": "{#Super_L(Shift_L(4))}",
"KPH*/STP*/5": "{#Super_L(Shift_L(5))}",
"KPH*/STP*/6": "{#Super_L(Shift_L(6))}",
"KPH*/STP*/7": "{#Super_L(Shift_L(7))}",
"KPH*/STP*/8": "{#Super_L(Shift_L(8))}",
"KPH*/STP*/9": "{#Super_L(Shift_L(9))}",
"KPH*/STP*/KH-FG": "{#Super_L(Shift_L(grave))}",
"KPH*/STP*/KW-BG": "{#Super_L(Shift_L(comma))}",
"KPH*/STP*/PR*EPB": "{#Super_L(Shift_L(parenright))}",
"KPH*/STP*/PREPB": "{#Super_L(Shift_L(parenleft))}",
"KPH*/STP*/PW*FP": "{#Super_L(Shift_L(BackSpace))}",
"KPH*/STP*/PWR*BGT": "{#Super_L(Shift_L(bracketright))}",
"KPH*/STP*/PWR-BGT": "{#Super_L(Shift_L(bracketleft))}",
"KPH*/STP*/R-R": "{#Super_L(Shift_L(Return))}",
"KPH*/STP*/S-P": "{#Super_L(Shift_L(space))}",
"KPH*/STP*/SP*S": "{#Super_L(Shift_L())}",
"KPH*/STP*/SPWHRAERB": "{#Super_L(Shift_L(backslash))}",
"KPH*/STP*/STPH-G": "{#Super_L(Shift_L(Right))}",
"KPH*/STP*/STPH-B": "{#Super_L(Shift_L(Down))}",
"KPH*/STP*/STPH-P": "{#Super_L(Shift_L(Up))}",
"KPH*/STP*/STPH-R": "{#Super_L(Shift_L(Left))}",
"KPH*/STP*/TA*B": "{#Super_L(Shift_L(Tab))}",
"KPH*/STP*/TKHRAO*ET": "{#Super_L(Shift_L(Delete))}",
"KPH*/A*": "{#Super_L(a)}",
"KPH*/PW*": "{#Super_L(b)}",
"KPH*/KR*": "{#Super_L(c)}",
"KPH*/TK*": "{#Super_L(d)}",
"KPH*/*E": "{#Super_L(e)}",
"KPH*/TP*": "{#Super_L(f)}",
"KPH*/TKPW*": "{#Super_L(g)}",
"KPH*/H*": "{#Super_L(h)}",
"KPH*/*EU": "{#Super_L(i)}",
"KPH*/SKWR*": "{#Super_L(j)}",
"KPH*/K*": "{#Super_L(k)}",
"KPH*/HR*": "{#Super_L(l)}",
"KPH*/PH*": "{#Super_L(m)}",
"KPH*/TPH*": "{#Super_L(n)}",
"KPH*/O*": "{#Super_L(o)}",
"KPH*/P*": "{#Super_L(p)}",
"KPH*/KW*": "{#Super_L(q)}",
"KPH*/R*": "{#Super_L(r)}",
"KPH*/S*": "{#Super_L(s)}",
"KPH*/T*": "{#Super_L(t)}",
"KPH*/*U": "{#Super_L(u)}",
"KPH*/SR*": "{#Super_L(v)}",
"KPH*/W*": "{#Super_L(w)}",
"KPH*/KP*": "{#Super_L(x)}",
"KPH*/KWR*": "{#Super_L(y)}",
"KPH*/STKPW*": "{#Super_L(z)}",
"KPH*/0": "{#Super_L(0)}",
"KPH*/1": "{#Super_L(1)}",
"KPH*/2": "{#Super_L(2)}",
"KPH*/3": "{#Super_L(3)}",
"KPH*/4": "{#Super_L(4)}",
"KPH*/5": "{#Super_L(5)}",
"KPH*/6": "{#Super_L(6)}",
"KPH*/7": "{#Super_L(7)}",
"KPH*/8": "{#Super_L(8)}",
"KPH*/9": "{#Super_L(9)}",
"KPH*/KH-FG": "{#Super_L(grave)}",
"KPH*/KW-BG": "{#Super_L(comma)}",
"KPH*/PR*EPB": "{#Super_L(parenright)}",
"KPH*/PREPB": "{#Super_L(parenleft)}",
"KPH*/PW*FP": "{#Super_L(BackSpace)}",
"KPH*/PWR*BGT": "{#Super_L(bracketright)}",
"KPH*/PWR-BGT": "{#Super_L(bracketleft)}",
"KPH*/R-R": "{#Super_L(Return)}",
"KPH*/S-P": "{#Super_L(space)}",
"KPH*/SP*S": "{#Super_L()}",
"KPH*/SPWHRAERB": "{#Super_L(backslash)}",
"KPH*/STPH-G": "{#Super_L(Right)}",
"KPH*/STPH-B": "{#Super_L(Down)}",
"KPH*/STPH-P": "{#Super_L(Up)}",
"KPH*/STPH-R": "{#Super_L(Left)}",
"KPH*/TA*B": "{#Super_L(Tab)}",
"KPH*/TKHRAO*ET": "{#Super_L(Delete)}",
"STP*/KPH*/A*": "{#Shift_L(Super_L(a))}",
"STP*/KPH*/PW*": "{#Shift_L(Super_L(b))}",
"STP*/KPH*/KR*": "{#Shift_L(Super_L(c))}",
"STP*/KPH*/TK*": "{#Shift_L(Super_L(d))}",
"STP*/KPH*/*E": "{#Shift_L(Super_L(e))}",
"STP*/KPH*/TP*": "{#Shift_L(Super_L(f))}",
"STP*/KPH*/TKPW*": "{#Shift_L(Super_L(g))}",
"STP*/KPH*/H*": "{#Shift_L(Super_L(h))}",
"STP*/KPH*/*EU": "{#Shift_L(Super_L(i))}",
"STP*/KPH*/SKWR*": "{#Shift_L(Super_L(j))}",
"STP*/KPH*/K*": "{#Shift_L(Super_L(k))}",
"STP*/KPH*/HR*": "{#Shift_L(Super_L(l))}",
"STP*/KPH*/PH*": "{#Shift_L(Super_L(m))}",
"STP*/KPH*/TPH*": "{#Shift_L(Super_L(n))}",
"STP*/KPH*/O*": "{#Shift_L(Super_L(o))}",
"STP*/KPH*/P*": "{#Shift_L(Super_L(p))}",
"STP*/KPH*/KW*": "{#Shift_L(Super_L(q))}",
"STP*/KPH*/R*": "{#Shift_L(Super_L(r))}",
"STP*/KPH*/S*": "{#Shift_L(Super_L(s))}",
"STP*/KPH*/T*": "{#Shift_L(Super_L(t))}",
"STP*/KPH*/*U": "{#Shift_L(Super_L(u))}",
"STP*/KPH*/SR*": "{#Shift_L(Super_L(v))}",
"STP*/KPH*/W*": "{#Shift_L(Super_L(w))}",
"STP*/KPH*/KP*": "{#Shift_L(Super_L(x))}",
"STP*/KPH*/KWR*": "{#Shift_L(Super_L(y))}",
"STP*/KPH*/STKPW*": "{#Shift_L(Super_L(z))}",
"STP*/KPH*/0": "{#Shift_L(Super_L(0))}",
"STP*/KPH*/1": "{#Shift_L(Super_L(1))}",
"STP*/KPH*/2": "{#Shift_L(Super_L(2))}",
"STP*/KPH*/3": "{#Shift_L(Super_L(3))}",
"STP*/KPH*/4": "{#Shift_L(Super_L(4))}",
"STP*/KPH*/5": "{#Shift_L(Super_L(5))}",
"STP*/KPH*/6": "{#Shift_L(Super_L(6))}",
"STP*/KPH*/7": "{#Shift_L(Super_L(7))}",
"STP*/KPH*/8": "{#Shift_L(Super_L(8))}",
"STP*/KPH*/9": "{#Shift_L(Super_L(9))}",
"STP*/KPH*/KH-FG": "{#Shift_L(Super_L(grave))}",
"STP*/KPH*/KW-BG": "{#Shift_L(Super_L(comma))}",
"STP*/KPH*/PR*EPB": "{#Shift_L(Super_L(parenright))}",
"STP*/KPH*/PREPB": "{#Shift_L(Super_L(parenleft))}",
"STP*/KPH*/PW*FP": "{#Shift_L(Super_L(BackSpace))}",
"STP*/KPH*/PWR*BGT": "{#Shift_L(Super_L(bracketright))}",
"STP*/KPH*/PWR-BGT": "{#Shift_L(Super_L(bracketleft))}",
"STP*/KPH*/R-R": "{#Shift_L(Super_L(Return))}",
"STP*/KPH*/S-P": "{#Shift_L(Super_L(space))}",
"STP*/KPH*/SP*S": "{#Shift_L(Super_L())}",
"STP*/KPH*/SPWHRAERB": "{#Shift_L(Super_L(backslash))}",
"STP*/KPH*/STPH-G": "{#Shift_L(Super_L(Right))}",
"STP*/KPH*/STPH-B": "{#Shift_L(Super_L(Down))}",
"STP*/KPH*/STPH-P": "{#Shift_L(Super_L(Up))}",
"STP*/KPH*/STPH-R": "{#Shift_L(Super_L(Left))}",
"STP*/KPH*/TA*B": "{#Shift_L(Super_L(Tab))}",
"STP*/KPH*/TKHRAO*ET": "{#Shift_L(Super_L(Delete))}",
"THRA*/STP*/A*": "{#Alt_L(Shift_L(a))}",
"THRA*/STP*/PW*": "{#Alt_L(Shift_L(b))}",
"THRA*/STP*/KR*": "{#Alt_L(Shift_L(c))}",
"THRA*/STP*/TK*": "{#Alt_L(Shift_L(d))}",
"THRA*/STP*/*E": "{#Alt_L(Shift_L(e))}",
"THRA*/STP*/TP*": "{#Alt_L(Shift_L(f))}",
"THRA*/STP*/TKPW*": "{#Alt_L(Shift_L(g))}",
"THRA*/STP*/H*": "{#Alt_L(Shift_L(h))}",
"THRA*/STP*/*EU": "{#Alt_L(Shift_L(i))}",
"THRA*/STP*/SKWR*": "{#Alt_L(Shift_L(j))}",
"THRA*/STP*/K*": "{#Alt_L(Shift_L(k))}",
"THRA*/STP*/HR*": "{#Alt_L(Shift_L(l))}",
"THRA*/STP*/PH*": "{#Alt_L(Shift_L(m))}",
"THRA*/STP*/TPH*": "{#Alt_L(Shift_L(n))}",
"THRA*/STP*/O*": "{#Alt_L(Shift_L(o))}",
"THRA*/STP*/P*": "{#Alt_L(Shift_L(p))}",
"THRA*/STP*/KW*": "{#Alt_L(Shift_L(q))}",
"THRA*/STP*/R*": "{#Alt_L(Shift_L(r))}",
"THRA*/STP*/S*": "{#Alt_L(Shift_L(s))}",
"THRA*/STP*/T*": "{#Alt_L(Shift_L(t))}",
"THRA*/STP*/*U": "{#Alt_L(Shift_L(u))}",
"THRA*/STP*/SR*": "{#Alt_L(Shift_L(v))}",
"THRA*/STP*/W*": "{#Alt_L(Shift_L(w))}",
"THRA*/STP*/KP*": "{#Alt_L(Shift_L(x))}",
"THRA*/STP*/KWR*": "{#Alt_L(Shift_L(y))}",
"THRA*/STP*/STKPW*": "{#Alt_L(Shift_L(z))}",
"THRA*/STP*/0": "{#Alt_L(Shift_L(0))}",
"THRA*/STP*/1": "{#Alt_L(Shift_L(1))}",
"THRA*/STP*/2": "{#Alt_L(Shift_L(2))}",
"THRA*/STP*/3": "{#Alt_L(Shift_L(3))}",
"THRA*/STP*/4": "{#Alt_L(Shift_L(4))}",
"THRA*/STP*/5": "{#Alt_L(Shift_L(5))}",
"THRA*/STP*/6": "{#Alt_L(Shift_L(6))}",
"THRA*/STP*/7": "{#Alt_L(Shift_L(7))}",
"THRA*/STP*/8": "{#Alt_L(Shift_L(8))}",
"THRA*/STP*/9": "{#Alt_L(Shift_L(9))}",
"THRA*/STP*/KH-FG": "{#Alt_L(Shift_L(grave))}",
"THRA*/STP*/KW-BG": "{#Alt_L(Shift_L(comma))}",
"THRA*/STP*/PR*EPB": "{#Alt_L(Shift_L(parenright))}",
"THRA*/STP*/PREPB": "{#Alt_L(Shift_L(parenleft))}",
"THRA*/STP*/PW*FP": "{#Alt_L(Shift_L(BackSpace))}",
"THRA*/STP*/PWR*BGT": "{#Alt_L(Shift_L(bracketright))}",
"THRA*/STP*/PWR-BGT": "{#Alt_L(Shift_L(bracketleft))}",
"THRA*/STP*/R-R": "{#Alt_L(Shift_L(Return))}",
"THRA*/STP*/S-P": "{#Alt_L(Shift_L(space))}",
"THRA*/STP*/SP*S": "{#Alt_L(Shift_L())}",
"THRA*/STP*/SPWHRAERB": "{#Alt_L(Shift_L(backslash))}",
"THRA*/STP*/STPH-G": "{#Alt_L(Shift_L(Right))}",
"THRA*/STP*/STPH-B": "{#Alt_L(Shift_L(Down))}",
"THRA*/STP*/STPH-P": "{#Alt_L(Shift_L(Up))}",
"THRA*/STP*/STPH-R": "{#Alt_L(Shift_L(Left))}",
"THRA*/STP*/TA*B": "{#Alt_L(Shift_L(Tab))}",
"THRA*/STP*/TKHRAO*ET": "{#Alt_L(Shift_L(Delete))}",
"THRA*/KPH*/STP*/A*": "{#Alt_L(Super_L(Shift_L(a)))}",
"THRA*/KPH*/STP*/PW*": "{#Alt_L(Super_L(Shift_L(b)))}",
"THRA*/KPH*/STP*/KR*": "{#Alt_L(Super_L(Shift_L(c)))}",
"THRA*/KPH*/STP*/TK*": "{#Alt_L(Super_L(Shift_L(d)))}",
"THRA*/KPH*/STP*/*E": "{#Alt_L(Super_L(Shift_L(e)))}",
"THRA*/KPH*/STP*/TP*": "{#Alt_L(Super_L(Shift_L(f)))}",
"THRA*/KPH*/STP*/TKPW*": "{#Alt_L(Super_L(Shift_L(g)))}",
"THRA*/KPH*/STP*/H*": "{#Alt_L(Super_L(Shift_L(h)))}",
"THRA*/KPH*/STP*/*EU": "{#Alt_L(Super_L(Shift_L(i)))}",
"THRA*/KPH*/STP*/SKWR*": "{#Alt_L(Super_L(Shift_L(j)))}",
"THRA*/KPH*/STP*/K*": "{#Alt_L(Super_L(Shift_L(k)))}",
"THRA*/KPH*/STP*/HR*": "{#Alt_L(Super_L(Shift_L(l)))}",
"THRA*/KPH*/STP*/PH*": "{#Alt_L(Super_L(Shift_L(m)))}",
"THRA*/KPH*/STP*/TPH*": "{#Alt_L(Super_L(Shift_L(n)))}",
"THRA*/KPH*/STP*/O*": "{#Alt_L(Super_L(Shift_L(o)))}",
"THRA*/KPH*/STP*/P*": "{#Alt_L(Super_L(Shift_L(p)))}",
"THRA*/KPH*/STP*/KW*": "{#Alt_L(Super_L(Shift_L(q)))}",
"THRA*/KPH*/STP*/R*": "{#Alt_L(Super_L(Shift_L(r)))}",
"THRA*/KPH*/STP*/S*": "{#Alt_L(Super_L(Shift_L(s)))}",
"THRA*/KPH*/STP*/T*": "{#Alt_L(Super_L(Shift_L(t)))}",
"THRA*/KPH*/STP*/*U": "{#Alt_L(Super_L(Shift_L(u)))}",
"THRA*/KPH*/STP*/SR*": "{#Alt_L(Super_L(Shift_L(v)))}",
"THRA*/KPH*/STP*/W*": "{#Alt_L(Super_L(Shift_L(w)))}",
"THRA*/KPH*/STP*/KP*": "{#Alt_L(Super_L(Shift_L(x)))}",
"THRA*/KPH*/STP*/KWR*": "{#Alt_L(Super_L(Shift_L(y)))}",
"THRA*/KPH*/STP*/STKPW*": "{#Alt_L(Super_L(Shift_L(z)))}",
"THRA*/KPH*/STP*/0": "{#Alt_L(Super_L(Shift_L(0)))}",
"THRA*/KPH*/STP*/1": "{#Alt_L(Super_L(Shift_L(1)))}",
"THRA*/KPH*/STP*/2": "{#Alt_L(Super_L(Shift_L(2)))}",
"THRA*/KPH*/STP*/3": "{#Alt_L(Super_L(Shift_L(3)))}",
"THRA*/KPH*/STP*/4": "{#Alt_L(Super_L(Shift_L(4)))}",
"THRA*/KPH*/STP*/5": "{#Alt_L(Super_L(Shift_L(5)))}",
"THRA*/KPH*/STP*/6": "{#Alt_L(Super_L(Shift_L(6)))}",
"THRA*/KPH*/STP*/7": "{#Alt_L(Super_L(Shift_L(7)))}",
"THRA*/KPH*/STP*/8": "{#Alt_L(Super_L(Shift_L(8)))}",
"THRA*/KPH*/STP*/9": "{#Alt_L(Super_L(Shift_L(9)))}",
"THRA*/KPH*/STP*/KH-FG": "{#Alt_L(Super_L(Shift_L(grave)))}",
"THRA*/KPH*/STP*/KW-BG": "{#Alt_L(Super_L(Shift_L(comma)))}",
"THRA*/KPH*/STP*/PR*EPB": "{#Alt_L(Super_L(Shift_L(parenright)))}",
"THRA*/KPH*/STP*/PREPB": "{#Alt_L(Super_L(Shift_L(parenleft)))}",
"THRA*/KPH*/STP*/PW*FP": "{#Alt_L(Super_L(Shift_L(BackSpace)))}",
"THRA*/KPH*/STP*/PWR*BGT": "{#Alt_L(Super_L(Shift_L(bracketright)))}",
"THRA*/KPH*/STP*/PWR-BGT": "{#Alt_L(Super_L(Shift_L(bracketleft)))}",
"THRA*/KPH*/STP*/R-R": "{#Alt_L(Super_L(Shift_L(Return)))}",
"THRA*/KPH*/STP*/S-P": "{#Alt_L(Super_L(Shift_L(space)))}",
"THRA*/KPH*/STP*/SP*S": "{#Alt_L(Super_L(Shift_L()))}",
"THRA*/KPH*/STP*/SPWHRAERB": "{#Alt_L(Super_L(Shift_L(backslash)))}",
"THRA*/KPH*/STP*/STPH-G": "{#Alt_L(Super_L(Shift_L(Right)))}",
"THRA*/KPH*/STP*/STPH-B": "{#Alt_L(Super_L(Shift_L(Down)))}",
"THRA*/KPH*/STP*/STPH-P": "{#Alt_L(Super_L(Shift_L(Up)))}",
"THRA*/KPH*/STP*/STPH-R": "{#Alt_L(Super_L(Shift_L(Left)))}",
"THRA*/KPH*/STP*/TA*B": "{#Alt_L(Super_L(Shift_L(Tab)))}",
"THRA*/KPH*/STP*/TKHRAO*ET": "{#Alt_L(Super_L(Shift_L(Delete)))}",
"THRA*/KPH*/A*": "{#Alt_L(Super_L(a))}",
"THRA*/KPH*/PW*": "{#Alt_L(Super_L(b))}",
"THRA*/KPH*/KR*": "{#Alt_L(Super_L(c))}",
"THRA*/KPH*/TK*": "{#Alt_L(Super_L(d))}",
"THRA*/KPH*/*E": "{#Alt_L(Super_L(e))}",
"THRA*/KPH*/TP*": "{#Alt_L(Super_L(f))}",
"THRA*/KPH*/TKPW*": "{#Alt_L(Super_L(g))}",
"THRA*/KPH*/H*": "{#Alt_L(Super_L(h))}",
"THRA*/KPH*/*EU": "{#Alt_L(Super_L(i))}",
"THRA*/KPH*/SKWR*": "{#Alt_L(Super_L(j))}",
"THRA*/KPH*/K*": "{#Alt_L(Super_L(k))}",
"THRA*/KPH*/HR*": "{#Alt_L(Super_L(l))}",
"THRA*/KPH*/PH*": "{#Alt_L(Super_L(m))}",
"THRA*/KPH*/TPH*": "{#Alt_L(Super_L(n))}",
"THRA*/KPH*/O*": "{#Alt_L(Super_L(o))}",
"THRA*/KPH*/P*": "{#Alt_L(Super_L(p))}",
"THRA*/KPH*/KW*": "{#Alt_L(Super_L(q))}",
"THRA*/KPH*/R*": "{#Alt_L(Super_L(r))}",
"THRA*/KPH*/S*": "{#Alt_L(Super_L(s))}",
"THRA*/KPH*/T*": "{#Alt_L(Super_L(t))}",
"THRA*/KPH*/*U": "{#Alt_L(Super_L(u))}",
"THRA*/KPH*/SR*": "{#Alt_L(Super_L(v))}",
"THRA*/KPH*/W*": "{#Alt_L(Super_L(w))}",
"THRA*/KPH*/KP*": "{#Alt_L(Super_L(x))}",
"THRA*/KPH*/KWR*": "{#Alt_L(Super_L(y))}",
"THRA*/KPH*/STKPW*": "{#Alt_L(Super_L(z))}",
"THRA*/KPH*/0": "{#Alt_L(Super_L(0))}",
"THRA*/KPH*/1": "{#Alt_L(Super_L(1))}",
"THRA*/KPH*/2": "{#Alt_L(Super_L(2))}",
"THRA*/KPH*/3": "{#Alt_L(Super_L(3))}",
"THRA*/KPH*/4": "{#Alt_L(Super_L(4))}",
"THRA*/KPH*/5": "{#Alt_L(Super_L(5))}",
"THRA*/KPH*/6": "{#Alt_L(Super_L(6))}",
"THRA*/KPH*/7": "{#Alt_L(Super_L(7))}",
"THRA*/KPH*/8": "{#Alt_L(Super_L(8))}",
"THRA*/KPH*/9": "{#Alt_L(Super_L(9))}",
"THRA*/KPH*/KH-FG": "{#Alt_L(Super_L(grave))}",
"THRA*/KPH*/KW-BG": "{#Alt_L(Super_L(comma))}",
"THRA*/KPH*/PR*EPB": "{#Alt_L(Super_L(parenright))}",
"THRA*/KPH*/PREPB": "{#Alt_L(Super_L(parenleft))}",
"THRA*/KPH*/PW*FP": "{#Alt_L(Super_L(BackSpace))}",
"THRA*/KPH*/PWR*BGT": "{#Alt_L(Super_L(bracketright))}",
"THRA*/KPH*/PWR-BGT": "{#Alt_L(Super_L(bracketleft))}",
"THRA*/KPH*/R-R": "{#Alt_L(Super_L(Return))}",
"THRA*/KPH*/S-P": "{#Alt_L(Super_L(space))}",
"THRA*/KPH*/SP*S": "{#Alt_L(Super_L())}",
"THRA*/KPH*/SPWHRAERB": "{#Alt_L(Super_L(backslash))}",
"THRA*/KPH*/STPH-G": "{#Alt_L(Super_L(Right))}",
"THRA*/KPH*/STPH-B": "{#Alt_L(Super_L(Down))}",
"THRA*/KPH*/STPH-P": "{#Alt_L(Super_L(Up))}",
"THRA*/KPH*/STPH-R": "{#Alt_L(Super_L(Left))}",
"THRA*/KPH*/TA*B": "{#Alt_L(Super_L(Tab))}",
"THRA*/KPH*/TKHRAO*ET": "{#Alt_L(Super_L(Delete))}",
"THRA*/STP*/KPH*/A*": "{#Alt_L(Shift_L(Super_L(a)))}",
"THRA*/STP*/KPH*/PW*": "{#Alt_L(Shift_L(Super_L(b)))}",
"THRA*/STP*/KPH*/KR*": "{#Alt_L(Shift_L(Super_L(c)))}",
"THRA*/STP*/KPH*/TK*": "{#Alt_L(Shift_L(Super_L(d)))}",
"THRA*/STP*/KPH*/*E": "{#Alt_L(Shift_L(Super_L(e)))}",
"THRA*/STP*/KPH*/TP*": "{#Alt_L(Shift_L(Super_L(f)))}",
"THRA*/STP*/KPH*/TKPW*": "{#Alt_L(Shift_L(Super_L(g)))}",
"THRA*/STP*/KPH*/H*": "{#Alt_L(Shift_L(Super_L(h)))}",
"THRA*/STP*/KPH*/*EU": "{#Alt_L(Shift_L(Super_L(i)))}",
"THRA*/STP*/KPH*/SKWR*": "{#Alt_L(Shift_L(Super_L(j)))}",
"THRA*/STP*/KPH*/K*": "{#Alt_L(Shift_L(Super_L(k)))}",
"THRA*/STP*/KPH*/HR*": "{#Alt_L(Shift_L(Super_L(l)))}",
"THRA*/STP*/KPH*/PH*": "{#Alt_L(Shift_L(Super_L(m)))}",
"THRA*/STP*/KPH*/TPH*": "{#Alt_L(Shift_L(Super_L(n)))}",
"THRA*/STP*/KPH*/O*": "{#Alt_L(Shift_L(Super_L(o)))}",
"THRA*/STP*/KPH*/P*": "{#Alt_L(Shift_L(Super_L(p)))}",
"THRA*/STP*/KPH*/KW*": "{#Alt_L(Shift_L(Super_L(q)))}",
"THRA*/STP*/KPH*/R*": "{#Alt_L(Shift_L(Super_L(r)))}",
"THRA*/STP*/KPH*/S*": "{#Alt_L(Shift_L(Super_L(s)))}",
"THRA*/STP*/KPH*/T*": "{#Alt_L(Shift_L(Super_L(t)))}",
"THRA*/STP*/KPH*/*U": "{#Alt_L(Shift_L(Super_L(u)))}",
"THRA*/STP*/KPH*/SR*": "{#Alt_L(Shift_L(Super_L(v)))}",
"THRA*/STP*/KPH*/W*": "{#Alt_L(Shift_L(Super_L(w)))}",
"THRA*/STP*/KPH*/KP*": "{#Alt_L(Shift_L(Super_L(x)))}",
"THRA*/STP*/KPH*/KWR*": "{#Alt_L(Shift_L(Super_L(y)))}",
"THRA*/STP*/KPH*/STKPW*": "{#Alt_L(Shift_L(Super_L(z)))}",
"THRA*/STP*/KPH*/0": "{#Alt_L(Shift_L(Super_L(0)))}",
"THRA*/STP*/KPH*/1": "{#Alt_L(Shift_L(Super_L(1)))}",
"THRA*/STP*/KPH*/2": "{#Alt_L(Shift_L(Super_L(2)))}",
"THRA*/STP*/KPH*/3": "{#Alt_L(Shift_L(Super_L(3)))}",
"THRA*/STP*/KPH*/4": "{#Alt_L(Shift_L(Super_L(4)))}",
"THRA*/STP*/KPH*/5": "{#Alt_L(Shift_L(Super_L(5)))}",
"THRA*/STP*/KPH*/6": "{#Alt_L(Shift_L(Super_L(6)))}",
"THRA*/STP*/KPH*/7": "{#Alt_L(Shift_L(Super_L(7)))}",
"THRA*/STP*/KPH*/8": "{#Alt_L(Shift_L(Super_L(8)))}",
"THRA*/STP*/KPH*/9": "{#Alt_L(Shift_L(Super_L(9)))}",
"THRA*/STP*/KPH*/KH-FG": "{#Alt_L(Shift_L(Super_L(grave)))}",
"THRA*/STP*/KPH*/KW-BG": "{#Alt_L(Shift_L(Super_L(comma)))}",
"THRA*/STP*/KPH*/PR*EPB": "{#Alt_L(Shift_L(Super_L(parenright)))}",
"THRA*/STP*/KPH*/PREPB": "{#Alt_L(Shift_L(Super_L(parenleft)))}",
"THRA*/STP*/KPH*/PW*FP": "{#Alt_L(Shift_L(Super_L(BackSpace)))}",
"THRA*/STP*/KPH*/PWR*BGT": "{#Alt_L(Shift_L(Super_L(bracketright)))}",
"THRA*/STP*/KPH*/PWR-BGT": "{#Alt_L(Shift_L(Super_L(bracketleft)))}",
"THRA*/STP*/KPH*/R-R": "{#Alt_L(Shift_L(Super_L(Return)))}",
"THRA*/STP*/KPH*/S-P": "{#Alt_L(Shift_L(Super_L(space)))}",
"THRA*/STP*/KPH*/SP*S": "{#Alt_L(Shift_L(Super_L()))}",
"THRA*/STP*/KPH*/SPWHRAERB": "{#Alt_L(Shift_L(Super_L(backslash)))}",
"THRA*/STP*/KPH*/STPH-G": "{#Alt_L(Shift_L(Super_L(Right)))}",
"THRA*/STP*/KPH*/STPH-B": "{#Alt_L(Shift_L(Super_L(Down)))}",
"THRA*/STP*/KPH*/STPH-P": "{#Alt_L(Shift_L(Super_L(Up)))}",
"THRA*/STP*/KPH*/STPH-R": "{#Alt_L(Shift_L(Super_L(Left)))}",
"THRA*/STP*/KPH*/TA*B": "{#Alt_L(Shift_L(Super_L(Tab)))}",
"THRA*/STP*/KPH*/TKHRAO*ET": "{#Alt_L(Shift_L(Super_L(Delete)))}",
"THRA*/A*": "{#Alt_L(a)}",
"THRA*/PW*": "{#Alt_L(b)}",
"THRA*/KR*": "{#Alt_L(c)}",
"THRA*/TK*": "{#Alt_L(d)}",
"THRA*/*E": "{#Alt_L(e)}",
"THRA*/TP*": "{#Alt_L(f)}",
"THRA*/TKPW*": "{#Alt_L(g)}",
"THRA*/H*": "{#Alt_L(h)}",
"THRA*/*EU": "{#Alt_L(i)}",
"THRA*/SKWR*": "{#Alt_L(j)}",
"THRA*/K*": "{#Alt_L(k)}",
"THRA*/HR*": "{#Alt_L(l)}",
"THRA*/PH*": "{#Alt_L(m)}",
"THRA*/TPH*": "{#Alt_L(n)}",
"THRA*/O*": "{#Alt_L(o)}",
"THRA*/P*": "{#Alt_L(p)}",
"THRA*/KW*": "{#Alt_L(q)}",
"THRA*/R*": "{#Alt_L(r)}",
"THRA*/S*": "{#Alt_L(s)}",
"THRA*/T*": "{#Alt_L(t)}",
"THRA*/*U": "{#Alt_L(u)}",
"THRA*/SR*": "{#Alt_L(v)}",
"THRA*/W*": "{#Alt_L(w)}",
"THRA*/KP*": "{#Alt_L(x)}",
"THRA*/KWR*": "{#Alt_L(y)}",
"THRA*/STKPW*": "{#Alt_L(z)}",
"THRA*/0": "{#Alt_L(0)}",
"THRA*/1": "{#Alt_L(1)}",
"THRA*/2": "{#Alt_L(2)}",
"THRA*/3": "{#Alt_L(3)}",
"THRA*/4": "{#Alt_L(4)}",
"THRA*/5": "{#Alt_L(5)}",
"THRA*/6": "{#Alt_L(6)}",
"THRA*/7": "{#Alt_L(7)}",
"THRA*/8": "{#Alt_L(8)}",
"THRA*/9": "{#Alt_L(9)}",
"THRA*/KH-FG": "{#Alt_L(grave)}",
"THRA*/KW-BG": "{#Alt_L(comma)}",
"THRA*/PR*EPB": "{#Alt_L(parenright)}",
"THRA*/PREPB": "{#Alt_L(parenleft)}",
"THRA*/PW*FP": "{#Alt_L(BackSpace)}",
"THRA*/PWR*BGT": "{#Alt_L(bracketright)}",
"THRA*/PWR-BGT": "{#Alt_L(bracketleft)}",
"THRA*/R-R": "{#Alt_L(Return)}",
"THRA*/S-P": "{#Alt_L(space)}",
"THRA*/SP*S": "{#Alt_L()}",
"THRA*/SPWHRAERB": "{#Alt_L(backslash)}",
"THRA*/STPH-G": "{#Alt_L(Right)}",
"THRA*/STPH-B": "{#Alt_L(Down)}",
"THRA*/STPH-P": "{#Alt_L(Up)}",
"THRA*/STPH-R": "{#Alt_L(Left)}",
"THRA*/TA*B": "{#Alt_L(Tab)}",
"THRA*/TKHRAO*ET": "{#Alt_L(Delete)}",
"KPH*/THRA*/A*": "{#Super_L(Alt_L(a))}",
"KPH*/THRA*/PW*": "{#Super_L(Alt_L(b))}",
"KPH*/THRA*/KR*": "{#Super_L(Alt_L(c))}",
"KPH*/THRA*/TK*": "{#Super_L(Alt_L(d))}",
"KPH*/THRA*/*E": "{#Super_L(Alt_L(e))}",
"KPH*/THRA*/TP*": "{#Super_L(Alt_L(f))}",
"KPH*/THRA*/TKPW*": "{#Super_L(Alt_L(g))}",
"KPH*/THRA*/H*": "{#Super_L(Alt_L(h))}",
"KPH*/THRA*/*EU": "{#Super_L(Alt_L(i))}",
"KPH*/THRA*/SKWR*": "{#Super_L(Alt_L(j))}",
"KPH*/THRA*/K*": "{#Super_L(Alt_L(k))}",
"KPH*/THRA*/HR*": "{#Super_L(Alt_L(l))}",
"KPH*/THRA*/PH*": "{#Super_L(Alt_L(m))}",
"KPH*/THRA*/TPH*": "{#Super_L(Alt_L(n))}",
"KPH*/THRA*/O*": "{#Super_L(Alt_L(o))}",
"KPH*/THRA*/P*": "{#Super_L(Alt_L(p))}",
"KPH*/THRA*/KW*": "{#Super_L(Alt_L(q))}",
"KPH*/THRA*/R*": "{#Super_L(Alt_L(r))}",
"KPH*/THRA*/S*": "{#Super_L(Alt_L(s))}",
"KPH*/THRA*/T*": "{#Super_L(Alt_L(t))}",
"KPH*/THRA*/*U": "{#Super_L(Alt_L(u))}",
"KPH*/THRA*/SR*": "{#Super_L(Alt_L(v))}",
"KPH*/THRA*/W*": "{#Super_L(Alt_L(w))}",
"KPH*/THRA*/KP*": "{#Super_L(Alt_L(x))}",
"KPH*/THRA*/KWR*": "{#Super_L(Alt_L(y))}",
"KPH*/THRA*/STKPW*": "{#Super_L(Alt_L(z))}",
"KPH*/THRA*/0": "{#Super_L(Alt_L(0))}",
"KPH*/THRA*/1": "{#Super_L(Alt_L(1))}",
"KPH*/THRA*/2": "{#Super_L(Alt_L(2))}",
"KPH*/THRA*/3": "{#Super_L(Alt_L(3))}",
"KPH*/THRA*/4": "{#Super_L(Alt_L(4))}",
"KPH*/THRA*/5": "{#Super_L(Alt_L(5))}",
"KPH*/THRA*/6": "{#Super_L(Alt_L(6))}",
"KPH*/THRA*/7": "{#Super_L(Alt_L(7))}",
"KPH*/THRA*/8": "{#Super_L(Alt_L(8))}",
"KPH*/THRA*/9": "{#Super_L(Alt_L(9))}",
"KPH*/THRA*/KH-FG": "{#Super_L(Alt_L(grave))}",
"KPH*/THRA*/KW-BG": "{#Super_L(Alt_L(comma))}",
"KPH*/THRA*/PR*EPB": "{#Super_L(Alt_L(parenright))}",
"KPH*/THRA*/PREPB": "{#Super_L(Alt_L(parenleft))}",
"KPH*/THRA*/PW*FP": "{#Super_L(Alt_L(BackSpace))}",
"KPH*/THRA*/PWR*BGT": "{#Super_L(Alt_L(bracketright))}",
"KPH*/THRA*/PWR-BGT": "{#Super_L(Alt_L(bracketleft))}",
"KPH*/THRA*/R-R": "{#Super_L(Alt_L(Return))}",
"KPH*/THRA*/S-P": "{#Super_L(Alt_L(space))}",
"KPH*/THRA*/SP*S": "{#Super_L(Alt_L())}",
"KPH*/THRA*/SPWHRAERB": "{#Super_L(Alt_L(backslash))}",
"KPH*/THRA*/STPH-G": "{#Super_L(Alt_L(Right))}",
"KPH*/THRA*/STPH-B": "{#Super_L(Alt_L(Down))}",
"KPH*/THRA*/STPH-P": "{#Super_L(Alt_L(Up))}",
"KPH*/THRA*/STPH-R": "{#Super_L(Alt_L(Left))}",
"KPH*/THRA*/TA*B": "{#Super_L(Alt_L(Tab))}",
"KPH*/THRA*/TKHRAO*ET": "{#Super_L(Alt_L(Delete))}",
"KPH*/A*": "{#Super_L(a)}",
"KPH*/PW*": "{#Super_L(b)}",
"KPH*/KR*": "{#Super_L(c)}",
"KPH*/TK*": "{#Super_L(d)}",
"KPH*/*E": "{#Super_L(e)}",
"KPH*/TP*": "{#Super_L(f)}",
"KPH*/TKPW*": "{#Super_L(g)}",
"KPH*/H*": "{#Super_L(h)}",
"KPH*/*EU": "{#Super_L(i)}",
"KPH*/SKWR*": "{#Super_L(j)}",
"KPH*/K*": "{#Super_L(k)}",
"KPH*/HR*": "{#Super_L(l)}",
"KPH*/PH*": "{#Super_L(m)}",
"KPH*/TPH*": "{#Super_L(n)}",
"KPH*/O*": "{#Super_L(o)}",
"KPH*/P*": "{#Super_L(p)}",
"KPH*/KW*": "{#Super_L(q)}",
"KPH*/R*": "{#Super_L(r)}",
"KPH*/S*": "{#Super_L(s)}",
"KPH*/T*": "{#Super_L(t)}",
"KPH*/*U": "{#Super_L(u)}",
"KPH*/SR*": "{#Super_L(v)}",
"KPH*/W*": "{#Super_L(w)}",
"KPH*/KP*": "{#Super_L(x)}",
"KPH*/KWR*": "{#Super_L(y)}",
"KPH*/STKPW*": "{#Super_L(z)}",
"KPH*/0": "{#Super_L(0)}",
"KPH*/1": "{#Super_L(1)}",
"KPH*/2": "{#Super_L(2)}",
"KPH*/3": "{#Super_L(3)}",
"KPH*/4": "{#Super_L(4)}",
"KPH*/5": "{#Super_L(5)}",
"KPH*/6": "{#Super_L(6)}",
"KPH*/7": "{#Super_L(7)}",
"KPH*/8": "{#Super_L(8)}",
"KPH*/9": "{#Super_L(9)}",
"KPH*/KH-FG": "{#Super_L(grave)}",
"KPH*/KW-BG": "{#Super_L(comma)}",
"KPH*/PR*EPB": "{#Super_L(parenright)}",
"KPH*/PREPB": "{#Super_L(parenleft)}",
"KPH*/PW*FP": "{#Super_L(BackSpace)}",
"KPH*/PWR*BGT": "{#Super_L(bracketright)}",
"KPH*/PWR-BGT": "{#Super_L(bracketleft)}",
"KPH*/R-R": "{#Super_L(Return)}",
"KPH*/S-P": "{#Super_L(space)}",
"KPH*/SP*S": "{#Super_L()}",
"KPH*/SPWHRAERB": "{#Super_L(backslash)}",
"KPH*/STPH-G": "{#Super_L(Right)}",
"KPH*/STPH-B": "{#Super_L(Down)}",
"KPH*/STPH-P": "{#Super_L(Up)}",
"KPH*/STPH-R": "{#Super_L(Left)}",
"KPH*/TA*B": "{#Super_L(Tab)}",
"KPH*/TKHRAO*ET": "{#Super_L(Delete)}",
"THRA*/KPH*/A*": "{#Alt_L(Super_L(a))}",
"THRA*/KPH*/PW*": "{#Alt_L(Super_L(b))}",
"THRA*/KPH*/KR*": "{#Alt_L(Super_L(c))}",
"THRA*/KPH*/TK*": "{#Alt_L(Super_L(d))}",
"THRA*/KPH*/*E": "{#Alt_L(Super_L(e))}",
"THRA*/KPH*/TP*": "{#Alt_L(Super_L(f))}",
"THRA*/KPH*/TKPW*": "{#Alt_L(Super_L(g))}",
"THRA*/KPH*/H*": "{#Alt_L(Super_L(h))}",
"THRA*/KPH*/*EU": "{#Alt_L(Super_L(i))}",
"THRA*/KPH*/SKWR*": "{#Alt_L(Super_L(j))}",
"THRA*/KPH*/K*": "{#Alt_L(Super_L(k))}",
"THRA*/KPH*/HR*": "{#Alt_L(Super_L(l))}",
"THRA*/KPH*/PH*": "{#Alt_L(Super_L(m))}",
"THRA*/KPH*/TPH*": "{#Alt_L(Super_L(n))}",
"THRA*/KPH*/O*": "{#Alt_L(Super_L(o))}",
"THRA*/KPH*/P*": "{#Alt_L(Super_L(p))}",
"THRA*/KPH*/KW*": "{#Alt_L(Super_L(q))}",
"THRA*/KPH*/R*": "{#Alt_L(Super_L(r))}",
"THRA*/KPH*/S*": "{#Alt_L(Super_L(s))}",
"THRA*/KPH*/T*": "{#Alt_L(Super_L(t))}",
"THRA*/KPH*/*U": "{#Alt_L(Super_L(u))}",
"THRA*/KPH*/SR*": "{#Alt_L(Super_L(v))}",
"THRA*/KPH*/W*": "{#Alt_L(Super_L(w))}",
"THRA*/KPH*/KP*": "{#Alt_L(Super_L(x))}",
"THRA*/KPH*/KWR*": "{#Alt_L(Super_L(y))}",
"THRA*/KPH*/STKPW*": "{#Alt_L(Super_L(z))}",
"THRA*/KPH*/0": "{#Alt_L(Super_L(0))}",
"THRA*/KPH*/1": "{#Alt_L(Super_L(1))}",
"THRA*/KPH*/2": "{#Alt_L(Super_L(2))}",
"THRA*/KPH*/3": "{#Alt_L(Super_L(3))}",
"THRA*/KPH*/4": "{#Alt_L(Super_L(4))}",
"THRA*/KPH*/5": "{#Alt_L(Super_L(5))}",
"THRA*/KPH*/6": "{#Alt_L(Super_L(6))}",
"THRA*/KPH*/7": "{#Alt_L(Super_L(7))}",
"THRA*/KPH*/8": "{#Alt_L(Super_L(8))}",
"THRA*/KPH*/9": "{#Alt_L(Super_L(9))}",
"THRA*/KPH*/KH-FG": "{#Alt_L(Super_L(grave))}",
"THRA*/KPH*/KW-BG": "{#Alt_L(Super_L(comma))}",
"THRA*/KPH*/PR*EPB": "{#Alt_L(Super_L(parenright))}",
"THRA*/KPH*/PREPB": "{#Alt_L(Super_L(parenleft))}",
"THRA*/KPH*/PW*FP": "{#Alt_L(Super_L(BackSpace))}",
"THRA*/KPH*/PWR*BGT": "{#Alt_L(Super_L(bracketright))}",
"THRA*/KPH*/PWR-BGT": "{#Alt_L(Super_L(bracketleft))}",
"THRA*/KPH*/R-R": "{#Alt_L(Super_L(Return))}",
"THRA*/KPH*/S-P": "{#Alt_L(Super_L(space))}",
"THRA*/KPH*/SP*S": "{#Alt_L(Super_L())}",
"THRA*/KPH*/SPWHRAERB": "{#Alt_L(Super_L(backslash))}",
"THRA*/KPH*/STPH-G": "{#Alt_L(Super_L(Right))}",
"THRA*/KPH*/STPH-B": "{#Alt_L(Super_L(Down))}",
"THRA*/KPH*/STPH-P": "{#Alt_L(Super_L(Up))}",
"THRA*/KPH*/STPH-R": "{#Alt_L(Super_L(Left))}",
"THRA*/KPH*/TA*B": "{#Alt_L(Super_L(Tab))}",
"THRA*/KPH*/TKHRAO*ET": "{#Alt_L(Super_L(Delete))}",
"STP*/THRA*/A*": "{#Shift_L(Alt_L(a))}",
"STP*/THRA*/PW*": "{#Shift_L(Alt_L(b))}",
"STP*/THRA*/KR*": "{#Shift_L(Alt_L(c))}",
"STP*/THRA*/TK*": "{#Shift_L(Alt_L(d))}",
"STP*/THRA*/*E": "{#Shift_L(Alt_L(e))}",
"STP*/THRA*/TP*": "{#Shift_L(Alt_L(f))}",
"STP*/THRA*/TKPW*": "{#Shift_L(Alt_L(g))}",
"STP*/THRA*/H*": "{#Shift_L(Alt_L(h))}",
"STP*/THRA*/*EU": "{#Shift_L(Alt_L(i))}",
"STP*/THRA*/SKWR*": "{#Shift_L(Alt_L(j))}",
"STP*/THRA*/K*": "{#Shift_L(Alt_L(k))}",
"STP*/THRA*/HR*": "{#Shift_L(Alt_L(l))}",
"STP*/THRA*/PH*": "{#Shift_L(Alt_L(m))}",
"STP*/THRA*/TPH*": "{#Shift_L(Alt_L(n))}",
"STP*/THRA*/O*": "{#Shift_L(Alt_L(o))}",
"STP*/THRA*/P*": "{#Shift_L(Alt_L(p))}",
"STP*/THRA*/KW*": "{#Shift_L(Alt_L(q))}",
"STP*/THRA*/R*": "{#Shift_L(Alt_L(r))}",
"STP*/THRA*/S*": "{#Shift_L(Alt_L(s))}",
"STP*/THRA*/T*": "{#Shift_L(Alt_L(t))}",
"STP*/THRA*/*U": "{#Shift_L(Alt_L(u))}",
"STP*/THRA*/SR*": "{#Shift_L(Alt_L(v))}",
"STP*/THRA*/W*": "{#Shift_L(Alt_L(w))}",
"STP*/THRA*/KP*": "{#Shift_L(Alt_L(x))}",
"STP*/THRA*/KWR*": "{#Shift_L(Alt_L(y))}",
"STP*/THRA*/STKPW*": "{#Shift_L(Alt_L(z))}",
"STP*/THRA*/0": "{#Shift_L(Alt_L(0))}",
"STP*/THRA*/1": "{#Shift_L(Alt_L(1))}",
"STP*/THRA*/2": "{#Shift_L(Alt_L(2))}",
"STP*/THRA*/3": "{#Shift_L(Alt_L(3))}",
"STP*/THRA*/4": "{#Shift_L(Alt_L(4))}",
"STP*/THRA*/5": "{#Shift_L(Alt_L(5))}",
"STP*/THRA*/6": "{#Shift_L(Alt_L(6))}",
"STP*/THRA*/7": "{#Shift_L(Alt_L(7))}",
"STP*/THRA*/8": "{#Shift_L(Alt_L(8))}",
"STP*/THRA*/9": "{#Shift_L(Alt_L(9))}",
"STP*/THRA*/KH-FG": "{#Shift_L(Alt_L(grave))}",
"STP*/THRA*/KW-BG": "{#Shift_L(Alt_L(comma))}",
"STP*/THRA*/PR*EPB": "{#Shift_L(Alt_L(parenright))}",
"STP*/THRA*/PREPB": "{#Shift_L(Alt_L(parenleft))}",
"STP*/THRA*/PW*FP": "{#Shift_L(Alt_L(BackSpace))}",
"STP*/THRA*/PWR*BGT": "{#Shift_L(Alt_L(bracketright))}",
"STP*/THRA*/PWR-BGT": "{#Shift_L(Alt_L(bracketleft))}",
"STP*/THRA*/R-R": "{#Shift_L(Alt_L(Return))}",
"STP*/THRA*/S-P": "{#Shift_L(Alt_L(space))}",
"STP*/THRA*/SP*S": "{#Shift_L(Alt_L())}",
"STP*/THRA*/SPWHRAERB": "{#Shift_L(Alt_L(backslash))}",
"STP*/THRA*/STPH-G": "{#Shift_L(Alt_L(Right))}",
"STP*/THRA*/STPH-B": "{#Shift_L(Alt_L(Down))}",
"STP*/THRA*/STPH-P": "{#Shift_L(Alt_L(Up))}",
"STP*/THRA*/STPH-R": "{#Shift_L(Alt_L(Left))}",
"STP*/THRA*/TA*B": "{#Shift_L(Alt_L(Tab))}",
"STP*/THRA*/TKHRAO*ET": "{#Shift_L(Alt_L(Delete))}",
"STP*/KPH*/THRA*/A*": "{#Shift_L(Super_L(Alt_L(a)))}",
"STP*/KPH*/THRA*/PW*": "{#Shift_L(Super_L(Alt_L(b)))}",
"STP*/KPH*/THRA*/KR*": "{#Shift_L(Super_L(Alt_L(c)))}",
"STP*/KPH*/THRA*/TK*": "{#Shift_L(Super_L(Alt_L(d)))}",
"STP*/KPH*/THRA*/*E": "{#Shift_L(Super_L(Alt_L(e)))}",
"STP*/KPH*/THRA*/TP*": "{#Shift_L(Super_L(Alt_L(f)))}",
"STP*/KPH*/THRA*/TKPW*": "{#Shift_L(Super_L(Alt_L(g)))}",
"STP*/KPH*/THRA*/H*": "{#Shift_L(Super_L(Alt_L(h)))}",
"STP*/KPH*/THRA*/*EU": "{#Shift_L(Super_L(Alt_L(i)))}",
"STP*/KPH*/THRA*/SKWR*": "{#Shift_L(Super_L(Alt_L(j)))}",
"STP*/KPH*/THRA*/K*": "{#Shift_L(Super_L(Alt_L(k)))}",
"STP*/KPH*/THRA*/HR*": "{#Shift_L(Super_L(Alt_L(l)))}",
"STP*/KPH*/THRA*/PH*": "{#Shift_L(Super_L(Alt_L(m)))}",
"STP*/KPH*/THRA*/TPH*": "{#Shift_L(Super_L(Alt_L(n)))}",
"STP*/KPH*/THRA*/O*": "{#Shift_L(Super_L(Alt_L(o)))}",
"STP*/KPH*/THRA*/P*": "{#Shift_L(Super_L(Alt_L(p)))}",
"STP*/KPH*/THRA*/KW*": "{#Shift_L(Super_L(Alt_L(q)))}",
"STP*/KPH*/THRA*/R*": "{#Shift_L(Super_L(Alt_L(r)))}",
"STP*/KPH*/THRA*/S*": "{#Shift_L(Super_L(Alt_L(s)))}",
"STP*/KPH*/THRA*/T*": "{#Shift_L(Super_L(Alt_L(t)))}",
"STP*/KPH*/THRA*/*U": "{#Shift_L(Super_L(Alt_L(u)))}",
"STP*/KPH*/THRA*/SR*": "{#Shift_L(Super_L(Alt_L(v)))}",
"STP*/KPH*/THRA*/W*": "{#Shift_L(Super_L(Alt_L(w)))}",
"STP*/KPH*/THRA*/KP*": "{#Shift_L(Super_L(Alt_L(x)))}",
"STP*/KPH*/THRA*/KWR*": "{#Shift_L(Super_L(Alt_L(y)))}",
"STP*/KPH*/THRA*/STKPW*": "{#Shift_L(Super_L(Alt_L(z)))}",
"STP*/KPH*/THRA*/0": "{#Shift_L(Super_L(Alt_L(0)))}",
"STP*/KPH*/THRA*/1": "{#Shift_L(Super_L(Alt_L(1)))}",
"STP*/KPH*/THRA*/2": "{#Shift_L(Super_L(Alt_L(2)))}",
"STP*/KPH*/THRA*/3": "{#Shift_L(Super_L(Alt_L(3)))}",
"STP*/KPH*/THRA*/4": "{#Shift_L(Super_L(Alt_L(4)))}",
"STP*/KPH*/THRA*/5": "{#Shift_L(Super_L(Alt_L(5)))}",
"STP*/KPH*/THRA*/6": "{#Shift_L(Super_L(Alt_L(6)))}",
"STP*/KPH*/THRA*/7": "{#Shift_L(Super_L(Alt_L(7)))}",
"STP*/KPH*/THRA*/8": "{#Shift_L(Super_L(Alt_L(8)))}",
"STP*/KPH*/THRA*/9": "{#Shift_L(Super_L(Alt_L(9)))}",
"STP*/KPH*/THRA*/KH-FG": "{#Shift_L(Super_L(Alt_L(grave)))}",
"STP*/KPH*/THRA*/KW-BG": "{#Shift_L(Super_L(Alt_L(comma)))}",
"STP*/KPH*/THRA*/PR*EPB": "{#Shift_L(Super_L(Alt_L(parenright)))}",
"STP*/KPH*/THRA*/PREPB": "{#Shift_L(Super_L(Alt_L(parenleft)))}",
"STP*/KPH*/THRA*/PW*FP": "{#Shift_L(Super_L(Alt_L(BackSpace)))}",
"STP*/KPH*/THRA*/PWR*BGT": "{#Shift_L(Super_L(Alt_L(bracketright)))}",
"STP*/KPH*/THRA*/PWR-BGT": "{#Shift_L(Super_L(Alt_L(bracketleft)))}",
"STP*/KPH*/THRA*/R-R": "{#Shift_L(Super_L(Alt_L(Return)))}",
"STP*/KPH*/THRA*/S-P": "{#Shift_L(Super_L(Alt_L(space)))}",
"STP*/KPH*/THRA*/SP*S": "{#Shift_L(Super_L(Alt_L()))}",
"STP*/KPH*/THRA*/SPWHRAERB": "{#Shift_L(Super_L(Alt_L(backslash)))}",
"STP*/KPH*/THRA*/STPH-G": "{#Shift_L(Super_L(Alt_L(Right)))}",
"STP*/KPH*/THRA*/STPH-B": "{#Shift_L(Super_L(Alt_L(Down)))}",
"STP*/KPH*/THRA*/STPH-P": "{#Shift_L(Super_L(Alt_L(Up)))}",
"STP*/KPH*/THRA*/STPH-R": "{#Shift_L(Super_L(Alt_L(Left)))}",
"STP*/KPH*/THRA*/TA*B": "{#Shift_L(Super_L(Alt_L(Tab)))}",
"STP*/KPH*/THRA*/TKHRAO*ET": "{#Shift_L(Super_L(Alt_L(Delete)))}",
"STP*/KPH*/A*": "{#Shift_L(Super_L(a))}",
"STP*/KPH*/PW*": "{#Shift_L(Super_L(b))}",
"STP*/KPH*/KR*": "{#Shift_L(Super_L(c))}",
"STP*/KPH*/TK*": "{#Shift_L(Super_L(d))}",
"STP*/KPH*/*E": "{#Shift_L(Super_L(e))}",
"STP*/KPH*/TP*": "{#Shift_L(Super_L(f))}",
"STP*/KPH*/TKPW*": "{#Shift_L(Super_L(g))}",
"STP*/KPH*/H*": "{#Shift_L(Super_L(h))}",
"STP*/KPH*/*EU": "{#Shift_L(Super_L(i))}",
"STP*/KPH*/SKWR*": "{#Shift_L(Super_L(j))}",
"STP*/KPH*/K*": "{#Shift_L(Super_L(k))}",
"STP*/KPH*/HR*": "{#Shift_L(Super_L(l))}",
"STP*/KPH*/PH*": "{#Shift_L(Super_L(m))}",
"STP*/KPH*/TPH*": "{#Shift_L(Super_L(n))}",
"STP*/KPH*/O*": "{#Shift_L(Super_L(o))}",
"STP*/KPH*/P*": "{#Shift_L(Super_L(p))}",
"STP*/KPH*/KW*": "{#Shift_L(Super_L(q))}",
"STP*/KPH*/R*": "{#Shift_L(Super_L(r))}",
"STP*/KPH*/S*": "{#Shift_L(Super_L(s))}",
"STP*/KPH*/T*": "{#Shift_L(Super_L(t))}",
"STP*/KPH*/*U": "{#Shift_L(Super_L(u))}",
"STP*/KPH*/SR*": "{#Shift_L(Super_L(v))}",
"STP*/KPH*/W*": "{#Shift_L(Super_L(w))}",
"STP*/KPH*/KP*": "{#Shift_L(Super_L(x))}",
"STP*/KPH*/KWR*": "{#Shift_L(Super_L(y))}",
"STP*/KPH*/STKPW*": "{#Shift_L(Super_L(z))}",
"STP*/KPH*/0": "{#Shift_L(Super_L(0))}",
"STP*/KPH*/1": "{#Shift_L(Super_L(1))}",
"STP*/KPH*/2": "{#Shift_L(Super_L(2))}",
"STP*/KPH*/3": "{#Shift_L(Super_L(3))}",
"STP*/KPH*/4": "{#Shift_L(Super_L(4))}",
"STP*/KPH*/5": "{#Shift_L(Super_L(5))}",
"STP*/KPH*/6": "{#Shift_L(Super_L(6))}",
"STP*/KPH*/7": "{#Shift_L(Super_L(7))}",
"STP*/KPH*/8": "{#Shift_L(Super_L(8))}",
"STP*/KPH*/9": "{#Shift_L(Super_L(9))}",
"STP*/KPH*/KH-FG": "{#Shift_L(Super_L(grave))}",
"STP*/KPH*/KW-BG": "{#Shift_L(Super_L(comma))}",
"STP*/KPH*/PR*EPB": "{#Shift_L(Super_L(parenright))}",
"STP*/KPH*/PREPB": "{#Shift_L(Super_L(parenleft))}",
"STP*/KPH*/PW*FP": "{#Shift_L(Super_L(BackSpace))}",
"STP*/KPH*/PWR*BGT": "{#Shift_L(Super_L(bracketright))}",
"STP*/KPH*/PWR-BGT": "{#Shift_L(Super_L(bracketleft))}",
"STP*/KPH*/R-R": "{#Shift_L(Super_L(Return))}",
"STP*/KPH*/S-P": "{#Shift_L(Super_L(space))}",
"STP*/KPH*/SP*S": "{#Shift_L(Super_L())}",
"STP*/KPH*/SPWHRAERB": "{#Shift_L(Super_L(backslash))}",
"STP*/KPH*/STPH-G": "{#Shift_L(Super_L(Right))}",
"STP*/KPH*/STPH-B": "{#Shift_L(Super_L(Down))}",
"STP*/KPH*/STPH-P": "{#Shift_L(Super_L(Up))}",
"STP*/KPH*/STPH-R": "{#Shift_L(Super_L(Left))}",
"STP*/KPH*/TA*B": "{#Shift_L(Super_L(Tab))}",
"STP*/KPH*/TKHRAO*ET": "{#Shift_L(Super_L(Delete))}",
"STP*/THRA*/KPH*/A*": "{#Shift_L(Alt_L(Super_L(a)))}",
"STP*/THRA*/KPH*/PW*": "{#Shift_L(Alt_L(Super_L(b)))}",
"STP*/THRA*/KPH*/KR*": "{#Shift_L(Alt_L(Super_L(c)))}",
"STP*/THRA*/KPH*/TK*": "{#Shift_L(Alt_L(Super_L(d)))}",
"STP*/THRA*/KPH*/*E": "{#Shift_L(Alt_L(Super_L(e)))}",
"STP*/THRA*/KPH*/TP*": "{#Shift_L(Alt_L(Super_L(f)))}",
"STP*/THRA*/KPH*/TKPW*": "{#Shift_L(Alt_L(Super_L(g)))}",
"STP*/THRA*/KPH*/H*": "{#Shift_L(Alt_L(Super_L(h)))}",
"STP*/THRA*/KPH*/*EU": "{#Shift_L(Alt_L(Super_L(i)))}",
"STP*/THRA*/KPH*/SKWR*": "{#Shift_L(Alt_L(Super_L(j)))}",
"STP*/THRA*/KPH*/K*": "{#Shift_L(Alt_L(Super_L(k)))}",
"STP*/THRA*/KPH*/HR*": "{#Shift_L(Alt_L(Super_L(l)))}",
"STP*/THRA*/KPH*/PH*": "{#Shift_L(Alt_L(Super_L(m)))}",
"STP*/THRA*/KPH*/TPH*": "{#Shift_L(Alt_L(Super_L(n)))}",
"STP*/THRA*/KPH*/O*": "{#Shift_L(Alt_L(Super_L(o)))}",
"STP*/THRA*/KPH*/P*": "{#Shift_L(Alt_L(Super_L(p)))}",
"STP*/THRA*/KPH*/KW*": "{#Shift_L(Alt_L(Super_L(q)))}",
"STP*/THRA*/KPH*/R*": "{#Shift_L(Alt_L(Super_L(r)))}",
"STP*/THRA*/KPH*/S*": "{#Shift_L(Alt_L(Super_L(s)))}",
"STP*/THRA*/KPH*/T*": "{#Shift_L(Alt_L(Super_L(t)))}",
"STP*/THRA*/KPH*/*U": "{#Shift_L(Alt_L(Super_L(u)))}",
"STP*/THRA*/KPH*/SR*": "{#Shift_L(Alt_L(Super_L(v)))}",
"STP*/THRA*/KPH*/W*": "{#Shift_L(Alt_L(Super_L(w)))}",
"STP*/THRA*/KPH*/KP*": "{#Shift_L(Alt_L(Super_L(x)))}",
"STP*/THRA*/KPH*/KWR*": "{#Shift_L(Alt_L(Super_L(y)))}",
"STP*/THRA*/KPH*/STKPW*": "{#Shift_L(Alt_L(Super_L(z)))}",
"STP*/THRA*/KPH*/0": "{#Shift_L(Alt_L(Super_L(0)))}",
"STP*/THRA*/KPH*/1": "{#Shift_L(Alt_L(Super_L(1)))}",
"STP*/THRA*/KPH*/2": "{#Shift_L(Alt_L(Super_L(2)))}",
"STP*/THRA*/KPH*/3": "{#Shift_L(Alt_L(Super_L(3)))}",
"STP*/THRA*/KPH*/4": "{#Shift_L(Alt_L(Super_L(4)))}",
"STP*/THRA*/KPH*/5": "{#Shift_L(Alt_L(Super_L(5)))}",
"STP*/THRA*/KPH*/6": "{#Shift_L(Alt_L(Super_L(6)))}",
"STP*/THRA*/KPH*/7": "{#Shift_L(Alt_L(Super_L(7)))}",
"STP*/THRA*/KPH*/8": "{#Shift_L(Alt_L(Super_L(8)))}",
"STP*/THRA*/KPH*/9": "{#Shift_L(Alt_L(Super_L(9)))}",
"STP*/THRA*/KPH*/KH-FG": "{#Shift_L(Alt_L(Super_L(grave)))}",
"STP*/THRA*/KPH*/KW-BG": "{#Shift_L(Alt_L(Super_L(comma)))}",
"STP*/THRA*/KPH*/PR*EPB": "{#Shift_L(Alt_L(Super_L(parenright)))}",
"STP*/THRA*/KPH*/PREPB": "{#Shift_L(Alt_L(Super_L(parenleft)))}",
"STP*/THRA*/KPH*/PW*FP": "{#Shift_L(Alt_L(Super_L(BackSpace)))}",
"STP*/THRA*/KPH*/PWR*BGT": "{#Shift_L(Alt_L(Super_L(bracketright)))}",
"STP*/THRA*/KPH*/PWR-BGT": "{#Shift_L(Alt_L(Super_L(bracketleft)))}",
"STP*/THRA*/KPH*/R-R": "{#Shift_L(Alt_L(Super_L(Return)))}",
"STP*/THRA*/KPH*/S-P": "{#Shift_L(Alt_L(Super_L(space)))}",
"STP*/THRA*/KPH*/SP*S": "{#Shift_L(Alt_L(Super_L()))}",
"STP*/THRA*/KPH*/SPWHRAERB": "{#Shift_L(Alt_L(Super_L(backslash)))}",
"STP*/THRA*/KPH*/STPH-G": "{#Shift_L(Alt_L(Super_L(Right)))}",
"STP*/THRA*/KPH*/STPH-B": "{#Shift_L(Alt_L(Super_L(Down)))}",
"STP*/THRA*/KPH*/STPH-P": "{#Shift_L(Alt_L(Super_L(Up)))}",
"STP*/THRA*/KPH*/STPH-R": "{#Shift_L(Alt_L(Super_L(Left)))}",
"STP*/THRA*/KPH*/TA*B": "{#Shift_L(Alt_L(Super_L(Tab)))}",
"STP*/THRA*/KPH*/TKHRAO*ET": "{#Shift_L(Alt_L(Super_L(Delete)))}",
"KHR*/STP*/A*": "{#Control_L(Shift_L(a))}",
"KHR*/STP*/PW*": "{#Control_L(Shift_L(b))}",
"KHR*/STP*/KR*": "{#Control_L(Shift_L(c))}",
"KHR*/STP*/TK*": "{#Control_L(Shift_L(d))}",
"KHR*/STP*/*E": "{#Control_L(Shift_L(e))}",
"KHR*/STP*/TP*": "{#Control_L(Shift_L(f))}",
"KHR*/STP*/TKPW*": "{#Control_L(Shift_L(g))}",
"KHR*/STP*/H*": "{#Control_L(Shift_L(h))}",
"KHR*/STP*/*EU": "{#Control_L(Shift_L(i))}",
"KHR*/STP*/SKWR*": "{#Control_L(Shift_L(j))}",
"KHR*/STP*/K*": "{#Control_L(Shift_L(k))}",
"KHR*/STP*/HR*": "{#Control_L(Shift_L(l))}",
"KHR*/STP*/PH*": "{#Control_L(Shift_L(m))}",
"KHR*/STP*/TPH*": "{#Control_L(Shift_L(n))}",
"KHR*/STP*/O*": "{#Control_L(Shift_L(o))}",
"KHR*/STP*/P*": "{#Control_L(Shift_L(p))}",
"KHR*/STP*/KW*": "{#Control_L(Shift_L(q))}",
"KHR*/STP*/R*": "{#Control_L(Shift_L(r))}",
"KHR*/STP*/S*": "{#Control_L(Shift_L(s))}",
"KHR*/STP*/T*": "{#Control_L(Shift_L(t))}",
"KHR*/STP*/*U": "{#Control_L(Shift_L(u))}",
"KHR*/STP*/SR*": "{#Control_L(Shift_L(v))}",
"KHR*/STP*/W*": "{#Control_L(Shift_L(w))}",
"KHR*/STP*/KP*": "{#Control_L(Shift_L(x))}",
"KHR*/STP*/KWR*": "{#Control_L(Shift_L(y))}",
"KHR*/STP*/STKPW*": "{#Control_L(Shift_L(z))}",
"KHR*/STP*/0": "{#Control_L(Shift_L(0))}",
"KHR*/STP*/1": "{#Control_L(Shift_L(1))}",
"KHR*/STP*/2": "{#Control_L(Shift_L(2))}",
"KHR*/STP*/3": "{#Control_L(Shift_L(3))}",
"KHR*/STP*/4": "{#Control_L(Shift_L(4))}",
"KHR*/STP*/5": "{#Control_L(Shift_L(5))}",
"KHR*/STP*/6": "{#Control_L(Shift_L(6))}",
"KHR*/STP*/7": "{#Control_L(Shift_L(7))}",
"KHR*/STP*/8": "{#Control_L(Shift_L(8))}",
"KHR*/STP*/9": "{#Control_L(Shift_L(9))}",
"KHR*/STP*/KH-FG": "{#Control_L(Shift_L(grave))}",
"KHR*/STP*/KW-BG": "{#Control_L(Shift_L(comma))}",
"KHR*/STP*/PR*EPB": "{#Control_L(Shift_L(parenright))}",
"KHR*/STP*/PREPB": "{#Control_L(Shift_L(parenleft))}",
"KHR*/STP*/PW*FP": "{#Control_L(Shift_L(BackSpace))}",
"KHR*/STP*/PWR*BGT": "{#Control_L(Shift_L(bracketright))}",
"KHR*/STP*/PWR-BGT": "{#Control_L(Shift_L(bracketleft))}",
"KHR*/STP*/R-R": "{#Control_L(Shift_L(Return))}",
"KHR*/STP*/S-P": "{#Control_L(Shift_L(space))}",
"KHR*/STP*/SP*S": "{#Control_L(Shift_L())}",
"KHR*/STP*/SPWHRAERB": "{#Control_L(Shift_L(backslash))}",
"KHR*/STP*/STPH-G": "{#Control_L(Shift_L(Right))}",
"KHR*/STP*/STPH-B": "{#Control_L(Shift_L(Down))}",
"KHR*/STP*/STPH-P": "{#Control_L(Shift_L(Up))}",
"KHR*/STP*/STPH-R": "{#Control_L(Shift_L(Left))}",
"KHR*/STP*/TA*B": "{#Control_L(Shift_L(Tab))}",
"KHR*/STP*/TKHRAO*ET": "{#Control_L(Shift_L(Delete))}",
"KHR*/THRA*/STP*/A*": "{#Control_L(Alt_L(Shift_L(a)))}",
"KHR*/THRA*/STP*/PW*": "{#Control_L(Alt_L(Shift_L(b)))}",
"KHR*/THRA*/STP*/KR*": "{#Control_L(Alt_L(Shift_L(c)))}",
"KHR*/THRA*/STP*/TK*": "{#Control_L(Alt_L(Shift_L(d)))}",
"KHR*/THRA*/STP*/*E": "{#Control_L(Alt_L(Shift_L(e)))}",
"KHR*/THRA*/STP*/TP*": "{#Control_L(Alt_L(Shift_L(f)))}",
"KHR*/THRA*/STP*/TKPW*": "{#Control_L(Alt_L(Shift_L(g)))}",
"KHR*/THRA*/STP*/H*": "{#Control_L(Alt_L(Shift_L(h)))}",
"KHR*/THRA*/STP*/*EU": "{#Control_L(Alt_L(Shift_L(i)))}",
"KHR*/THRA*/STP*/SKWR*": "{#Control_L(Alt_L(Shift_L(j)))}",
"KHR*/THRA*/STP*/K*": "{#Control_L(Alt_L(Shift_L(k)))}",
"KHR*/THRA*/STP*/HR*": "{#Control_L(Alt_L(Shift_L(l)))}",
"KHR*/THRA*/STP*/PH*": "{#Control_L(Alt_L(Shift_L(m)))}",
"KHR*/THRA*/STP*/TPH*": "{#Control_L(Alt_L(Shift_L(n)))}",
"KHR*/THRA*/STP*/O*": "{#Control_L(Alt_L(Shift_L(o)))}",
"KHR*/THRA*/STP*/P*": "{#Control_L(Alt_L(Shift_L(p)))}",
"KHR*/THRA*/STP*/KW*": "{#Control_L(Alt_L(Shift_L(q)))}",
"KHR*/THRA*/STP*/R*": "{#Control_L(Alt_L(Shift_L(r)))}",
"KHR*/THRA*/STP*/S*": "{#Control_L(Alt_L(Shift_L(s)))}",
"KHR*/THRA*/STP*/T*": "{#Control_L(Alt_L(Shift_L(t)))}",
"KHR*/THRA*/STP*/*U": "{#Control_L(Alt_L(Shift_L(u)))}",
"KHR*/THRA*/STP*/SR*": "{#Control_L(Alt_L(Shift_L(v)))}",
"KHR*/THRA*/STP*/W*": "{#Control_L(Alt_L(Shift_L(w)))}",
"KHR*/THRA*/STP*/KP*": "{#Control_L(Alt_L(Shift_L(x)))}",
"KHR*/THRA*/STP*/KWR*": "{#Control_L(Alt_L(Shift_L(y)))}",
"KHR*/THRA*/STP*/STKPW*": "{#Control_L(Alt_L(Shift_L(z)))}",
"KHR*/THRA*/STP*/0": "{#Control_L(Alt_L(Shift_L(0)))}",
"KHR*/THRA*/STP*/1": "{#Control_L(Alt_L(Shift_L(1)))}",
"KHR*/THRA*/STP*/2": "{#Control_L(Alt_L(Shift_L(2)))}",
"KHR*/THRA*/STP*/3": "{#Control_L(Alt_L(Shift_L(3)))}",
"KHR*/THRA*/STP*/4": "{#Control_L(Alt_L(Shift_L(4)))}",
"KHR*/THRA*/STP*/5": "{#Control_L(Alt_L(Shift_L(5)))}",
"KHR*/THRA*/STP*/6": "{#Control_L(Alt_L(Shift_L(6)))}",
"KHR*/THRA*/STP*/7": "{#Control_L(Alt_L(Shift_L(7)))}",
"KHR*/THRA*/STP*/8": "{#Control_L(Alt_L(Shift_L(8)))}",
"KHR*/THRA*/STP*/9": "{#Control_L(Alt_L(Shift_L(9)))}",
"KHR*/THRA*/STP*/KH-FG": "{#Control_L(Alt_L(Shift_L(grave)))}",
"KHR*/THRA*/STP*/KW-BG": "{#Control_L(Alt_L(Shift_L(comma)))}",
"KHR*/THRA*/STP*/PR*EPB": "{#Control_L(Alt_L(Shift_L(parenright)))}",
"KHR*/THRA*/STP*/PREPB": "{#Control_L(Alt_L(Shift_L(parenleft)))}",
"KHR*/THRA*/STP*/PW*FP": "{#Control_L(Alt_L(Shift_L(BackSpace)))}",
"KHR*/THRA*/STP*/PWR*BGT": "{#Control_L(Alt_L(Shift_L(bracketright)))}",
"KHR*/THRA*/STP*/PWR-BGT": "{#Control_L(Alt_L(Shift_L(bracketleft)))}",
"KHR*/THRA*/STP*/R-R": "{#Control_L(Alt_L(Shift_L(Return)))}",
"KHR*/THRA*/STP*/S-P": "{#Control_L(Alt_L(Shift_L(space)))}",
"KHR*/THRA*/STP*/SP*S": "{#Control_L(Alt_L(Shift_L()))}",
"KHR*/THRA*/STP*/SPWHRAERB": "{#Control_L(Alt_L(Shift_L(backslash)))}",
"KHR*/THRA*/STP*/STPH-G": "{#Control_L(Alt_L(Shift_L(Right)))}",
"KHR*/THRA*/STP*/STPH-B": "{#Control_L(Alt_L(Shift_L(Down)))}",
"KHR*/THRA*/STP*/STPH-P": "{#Control_L(Alt_L(Shift_L(Up)))}",
"KHR*/THRA*/STP*/STPH-R": "{#Control_L(Alt_L(Shift_L(Left)))}",
"KHR*/THRA*/STP*/TA*B": "{#Control_L(Alt_L(Shift_L(Tab)))}",
"KHR*/THRA*/STP*/TKHRAO*ET": "{#Control_L(Alt_L(Shift_L(Delete)))}",
"KHR*/THRA*/A*": "{#Control_L(Alt_L(a))}",
"KHR*/THRA*/PW*": "{#Control_L(Alt_L(b))}",
"KHR*/THRA*/KR*": "{#Control_L(Alt_L(c))}",
"KHR*/THRA*/TK*": "{#Control_L(Alt_L(d))}",
"KHR*/THRA*/*E": "{#Control_L(Alt_L(e))}",
"KHR*/THRA*/TP*": "{#Control_L(Alt_L(f))}",
"KHR*/THRA*/TKPW*": "{#Control_L(Alt_L(g))}",
"KHR*/THRA*/H*": "{#Control_L(Alt_L(h))}",
"KHR*/THRA*/*EU": "{#Control_L(Alt_L(i))}",
"KHR*/THRA*/SKWR*": "{#Control_L(Alt_L(j))}",
"KHR*/THRA*/K*": "{#Control_L(Alt_L(k))}",
"KHR*/THRA*/HR*": "{#Control_L(Alt_L(l))}",
"KHR*/THRA*/PH*": "{#Control_L(Alt_L(m))}",
"KHR*/THRA*/TPH*": "{#Control_L(Alt_L(n))}",
"KHR*/THRA*/O*": "{#Control_L(Alt_L(o))}",
"KHR*/THRA*/P*": "{#Control_L(Alt_L(p))}",
"KHR*/THRA*/KW*": "{#Control_L(Alt_L(q))}",
"KHR*/THRA*/R*": "{#Control_L(Alt_L(r))}",
"KHR*/THRA*/S*": "{#Control_L(Alt_L(s))}",
"KHR*/THRA*/T*": "{#Control_L(Alt_L(t))}",
"KHR*/THRA*/*U": "{#Control_L(Alt_L(u))}",
"KHR*/THRA*/SR*": "{#Control_L(Alt_L(v))}",
"KHR*/THRA*/W*": "{#Control_L(Alt_L(w))}",
"KHR*/THRA*/KP*": "{#Control_L(Alt_L(x))}",
"KHR*/THRA*/KWR*": "{#Control_L(Alt_L(y))}",
"KHR*/THRA*/STKPW*": "{#Control_L(Alt_L(z))}",
"KHR*/THRA*/0": "{#Control_L(Alt_L(0))}",
"KHR*/THRA*/1": "{#Control_L(Alt_L(1))}",
"KHR*/THRA*/2": "{#Control_L(Alt_L(2))}",
"KHR*/THRA*/3": "{#Control_L(Alt_L(3))}",
"KHR*/THRA*/4": "{#Control_L(Alt_L(4))}",
"KHR*/THRA*/5": "{#Control_L(Alt_L(5))}",
"KHR*/THRA*/6": "{#Control_L(Alt_L(6))}",
"KHR*/THRA*/7": "{#Control_L(Alt_L(7))}",
"KHR*/THRA*/8": "{#Control_L(Alt_L(8))}",
"KHR*/THRA*/9": "{#Control_L(Alt_L(9))}",
"KHR*/THRA*/KH-FG": "{#Control_L(Alt_L(grave))}",
"KHR*/THRA*/KW-BG": "{#Control_L(Alt_L(comma))}",
"KHR*/THRA*/PR*EPB": "{#Control_L(Alt_L(parenright))}",
"KHR*/THRA*/PREPB": "{#Control_L(Alt_L(parenleft))}",
"KHR*/THRA*/PW*FP": "{#Control_L(Alt_L(BackSpace))}",
"KHR*/THRA*/PWR*BGT": "{#Control_L(Alt_L(bracketright))}",
"KHR*/THRA*/PWR-BGT": "{#Control_L(Alt_L(bracketleft))}",
"KHR*/THRA*/R-R": "{#Control_L(Alt_L(Return))}",
"KHR*/THRA*/S-P": "{#Control_L(Alt_L(space))}",
"KHR*/THRA*/SP*S": "{#Control_L(Alt_L())}",
"KHR*/THRA*/SPWHRAERB": "{#Control_L(Alt_L(backslash))}",
"KHR*/THRA*/STPH-G": "{#Control_L(Alt_L(Right))}",
"KHR*/THRA*/STPH-B": "{#Control_L(Alt_L(Down))}",
"KHR*/THRA*/STPH-P": "{#Control_L(Alt_L(Up))}",
"KHR*/THRA*/STPH-R": "{#Control_L(Alt_L(Left))}",
"KHR*/THRA*/TA*B": "{#Control_L(Alt_L(Tab))}",
"KHR*/THRA*/TKHRAO*ET": "{#Control_L(Alt_L(Delete))}",
"KHR*/STP*/THRA*/A*": "{#Control_L(Shift_L(Alt_L(a)))}",
"KHR*/STP*/THRA*/PW*": "{#Control_L(Shift_L(Alt_L(b)))}",
"KHR*/STP*/THRA*/KR*": "{#Control_L(Shift_L(Alt_L(c)))}",
"KHR*/STP*/THRA*/TK*": "{#Control_L(Shift_L(Alt_L(d)))}",
"KHR*/STP*/THRA*/*E": "{#Control_L(Shift_L(Alt_L(e)))}",
"KHR*/STP*/THRA*/TP*": "{#Control_L(Shift_L(Alt_L(f)))}",
"KHR*/STP*/THRA*/TKPW*": "{#Control_L(Shift_L(Alt_L(g)))}",
"KHR*/STP*/THRA*/H*": "{#Control_L(Shift_L(Alt_L(h)))}",
"KHR*/STP*/THRA*/*EU": "{#Control_L(Shift_L(Alt_L(i)))}",
"KHR*/STP*/THRA*/SKWR*": "{#Control_L(Shift_L(Alt_L(j)))}",
"KHR*/STP*/THRA*/K*": "{#Control_L(Shift_L(Alt_L(k)))}",
"KHR*/STP*/THRA*/HR*": "{#Control_L(Shift_L(Alt_L(l)))}",
"KHR*/STP*/THRA*/PH*": "{#Control_L(Shift_L(Alt_L(m)))}",
"KHR*/STP*/THRA*/TPH*": "{#Control_L(Shift_L(Alt_L(n)))}",
"KHR*/STP*/THRA*/O*": "{#Control_L(Shift_L(Alt_L(o)))}",
"KHR*/STP*/THRA*/P*": "{#Control_L(Shift_L(Alt_L(p)))}",
"KHR*/STP*/THRA*/KW*": "{#Control_L(Shift_L(Alt_L(q)))}",
"KHR*/STP*/THRA*/R*": "{#Control_L(Shift_L(Alt_L(r)))}",
"KHR*/STP*/THRA*/S*": "{#Control_L(Shift_L(Alt_L(s)))}",
"KHR*/STP*/THRA*/T*": "{#Control_L(Shift_L(Alt_L(t)))}",
"KHR*/STP*/THRA*/*U": "{#Control_L(Shift_L(Alt_L(u)))}",
"KHR*/STP*/THRA*/SR*": "{#Control_L(Shift_L(Alt_L(v)))}",
"KHR*/STP*/THRA*/W*": "{#Control_L(Shift_L(Alt_L(w)))}",
"KHR*/STP*/THRA*/KP*": "{#Control_L(Shift_L(Alt_L(x)))}",
"KHR*/STP*/THRA*/KWR*": "{#Control_L(Shift_L(Alt_L(y)))}",
"KHR*/STP*/THRA*/STKPW*": "{#Control_L(Shift_L(Alt_L(z)))}",
"KHR*/STP*/THRA*/0": "{#Control_L(Shift_L(Alt_L(0)))}",
"KHR*/STP*/THRA*/1": "{#Control_L(Shift_L(Alt_L(1)))}",
"KHR*/STP*/THRA*/2": "{#Control_L(Shift_L(Alt_L(2)))}",
"KHR*/STP*/THRA*/3": "{#Control_L(Shift_L(Alt_L(3)))}",
"KHR*/STP*/THRA*/4": "{#Control_L(Shift_L(Alt_L(4)))}",
"KHR*/STP*/THRA*/5": "{#Control_L(Shift_L(Alt_L(5)))}",
"KHR*/STP*/THRA*/6": "{#Control_L(Shift_L(Alt_L(6)))}",
"KHR*/STP*/THRA*/7": "{#Control_L(Shift_L(Alt_L(7)))}",
"KHR*/STP*/THRA*/8": "{#Control_L(Shift_L(Alt_L(8)))}",
"KHR*/STP*/THRA*/9": "{#Control_L(Shift_L(Alt_L(9)))}",
"KHR*/STP*/THRA*/KH-FG": "{#Control_L(Shift_L(Alt_L(grave)))}",
"KHR*/STP*/THRA*/KW-BG": "{#Control_L(Shift_L(Alt_L(comma)))}",
"KHR*/STP*/THRA*/PR*EPB": "{#Control_L(Shift_L(Alt_L(parenright)))}",
"KHR*/STP*/THRA*/PREPB": "{#Control_L(Shift_L(Alt_L(parenleft)))}",
"KHR*/STP*/THRA*/PW*FP": "{#Control_L(Shift_L(Alt_L(BackSpace)))}",
"KHR*/STP*/THRA*/PWR*BGT": "{#Control_L(Shift_L(Alt_L(bracketright)))}",
"KHR*/STP*/THRA*/PWR-BGT": "{#Control_L(Shift_L(Alt_L(bracketleft)))}",
"KHR*/STP*/THRA*/R-R": "{#Control_L(Shift_L(Alt_L(Return)))}",
"KHR*/STP*/THRA*/S-P": "{#Control_L(Shift_L(Alt_L(space)))}",
"KHR*/STP*/THRA*/SP*S": "{#Control_L(Shift_L(Alt_L()))}",
"KHR*/STP*/THRA*/SPWHRAERB": "{#Control_L(Shift_L(Alt_L(backslash)))}",
"KHR*/STP*/THRA*/STPH-G": "{#Control_L(Shift_L(Alt_L(Right)))}",
"KHR*/STP*/THRA*/STPH-B": "{#Control_L(Shift_L(Alt_L(Down)))}",
"KHR*/STP*/THRA*/STPH-P": "{#Control_L(Shift_L(Alt_L(Up)))}",
"KHR*/STP*/THRA*/STPH-R": "{#Control_L(Shift_L(Alt_L(Left)))}",
"KHR*/STP*/THRA*/TA*B": "{#Control_L(Shift_L(Alt_L(Tab)))}",
"KHR*/STP*/THRA*/TKHRAO*ET": "{#Control_L(Shift_L(Alt_L(Delete)))}",
"KHR*/KPH*/STP*/A*": "{#Control_L(Super_L(Shift_L(a)))}",
"KHR*/KPH*/STP*/PW*": "{#Control_L(Super_L(Shift_L(b)))}",
"KHR*/KPH*/STP*/KR*": "{#Control_L(Super_L(Shift_L(c)))}",
"KHR*/KPH*/STP*/TK*": "{#Control_L(Super_L(Shift_L(d)))}",
"KHR*/KPH*/STP*/*E": "{#Control_L(Super_L(Shift_L(e)))}",
"KHR*/KPH*/STP*/TP*": "{#Control_L(Super_L(Shift_L(f)))}",
"KHR*/KPH*/STP*/TKPW*": "{#Control_L(Super_L(Shift_L(g)))}",
"KHR*/KPH*/STP*/H*": "{#Control_L(Super_L(Shift_L(h)))}",
"KHR*/KPH*/STP*/*EU": "{#Control_L(Super_L(Shift_L(i)))}",
"KHR*/KPH*/STP*/SKWR*": "{#Control_L(Super_L(Shift_L(j)))}",
"KHR*/KPH*/STP*/K*": "{#Control_L(Super_L(Shift_L(k)))}",
"KHR*/KPH*/STP*/HR*": "{#Control_L(Super_L(Shift_L(l)))}",
"KHR*/KPH*/STP*/PH*": "{#Control_L(Super_L(Shift_L(m)))}",
"KHR*/KPH*/STP*/TPH*": "{#Control_L(Super_L(Shift_L(n)))}",
"KHR*/KPH*/STP*/O*": "{#Control_L(Super_L(Shift_L(o)))}",
"KHR*/KPH*/STP*/P*": "{#Control_L(Super_L(Shift_L(p)))}",
"KHR*/KPH*/STP*/KW*": "{#Control_L(Super_L(Shift_L(q)))}",
"KHR*/KPH*/STP*/R*": "{#Control_L(Super_L(Shift_L(r)))}",
"KHR*/KPH*/STP*/S*": "{#Control_L(Super_L(Shift_L(s)))}",
"KHR*/KPH*/STP*/T*": "{#Control_L(Super_L(Shift_L(t)))}",
"KHR*/KPH*/STP*/*U": "{#Control_L(Super_L(Shift_L(u)))}",
"KHR*/KPH*/STP*/SR*": "{#Control_L(Super_L(Shift_L(v)))}",
"KHR*/KPH*/STP*/W*": "{#Control_L(Super_L(Shift_L(w)))}",
"KHR*/KPH*/STP*/KP*": "{#Control_L(Super_L(Shift_L(x)))}",
"KHR*/KPH*/STP*/KWR*": "{#Control_L(Super_L(Shift_L(y)))}",
"KHR*/KPH*/STP*/STKPW*": "{#Control_L(Super_L(Shift_L(z)))}",
"KHR*/KPH*/STP*/0": "{#Control_L(Super_L(Shift_L(0)))}",
"KHR*/KPH*/STP*/1": "{#Control_L(Super_L(Shift_L(1)))}",
"KHR*/KPH*/STP*/2": "{#Control_L(Super_L(Shift_L(2)))}",
"KHR*/KPH*/STP*/3": "{#Control_L(Super_L(Shift_L(3)))}",
"KHR*/KPH*/STP*/4": "{#Control_L(Super_L(Shift_L(4)))}",
"KHR*/KPH*/STP*/5": "{#Control_L(Super_L(Shift_L(5)))}",
"KHR*/KPH*/STP*/6": "{#Control_L(Super_L(Shift_L(6)))}",
"KHR*/KPH*/STP*/7": "{#Control_L(Super_L(Shift_L(7)))}",
"KHR*/KPH*/STP*/8": "{#Control_L(Super_L(Shift_L(8)))}",
"KHR*/KPH*/STP*/9": "{#Control_L(Super_L(Shift_L(9)))}",
"KHR*/KPH*/STP*/KH-FG": "{#Control_L(Super_L(Shift_L(grave)))}",
"KHR*/KPH*/STP*/KW-BG": "{#Control_L(Super_L(Shift_L(comma)))}",
"KHR*/KPH*/STP*/PR*EPB": "{#Control_L(Super_L(Shift_L(parenright)))}",
"KHR*/KPH*/STP*/PREPB": "{#Control_L(Super_L(Shift_L(parenleft)))}",
"KHR*/KPH*/STP*/PW*FP": "{#Control_L(Super_L(Shift_L(BackSpace)))}",
"KHR*/KPH*/STP*/PWR*BGT": "{#Control_L(Super_L(Shift_L(bracketright)))}",
"KHR*/KPH*/STP*/PWR-BGT": "{#Control_L(Super_L(Shift_L(bracketleft)))}",
"KHR*/KPH*/STP*/R-R": "{#Control_L(Super_L(Shift_L(Return)))}",
"KHR*/KPH*/STP*/S-P": "{#Control_L(Super_L(Shift_L(space)))}",
"KHR*/KPH*/STP*/SP*S": "{#Control_L(Super_L(Shift_L()))}",
"KHR*/KPH*/STP*/SPWHRAERB": "{#Control_L(Super_L(Shift_L(backslash)))}",
"KHR*/KPH*/STP*/STPH-G": "{#Control_L(Super_L(Shift_L(Right)))}",
"KHR*/KPH*/STP*/STPH-B": "{#Control_L(Super_L(Shift_L(Down)))}",
"KHR*/KPH*/STP*/STPH-P": "{#Control_L(Super_L(Shift_L(Up)))}",
"KHR*/KPH*/STP*/STPH-R": "{#Control_L(Super_L(Shift_L(Left)))}",
"KHR*/KPH*/STP*/TA*B": "{#Control_L(Super_L(Shift_L(Tab)))}",
"KHR*/KPH*/STP*/TKHRAO*ET": "{#Control_L(Super_L(Shift_L(Delete)))}",
"KHR*/KPH*/THRA*/STP*/A*": "{#Control_L(Super_L(Alt_L(Shift_L(a))))}",
"KHR*/KPH*/THRA*/STP*/PW*": "{#Control_L(Super_L(Alt_L(Shift_L(b))))}",
"KHR*/KPH*/THRA*/STP*/KR*": "{#Control_L(Super_L(Alt_L(Shift_L(c))))}",
"KHR*/KPH*/THRA*/STP*/TK*": "{#Control_L(Super_L(Alt_L(Shift_L(d))))}",
"KHR*/KPH*/THRA*/STP*/*E": "{#Control_L(Super_L(Alt_L(Shift_L(e))))}",
"KHR*/KPH*/THRA*/STP*/TP*": "{#Control_L(Super_L(Alt_L(Shift_L(f))))}",
"KHR*/KPH*/THRA*/STP*/TKPW*": "{#Control_L(Super_L(Alt_L(Shift_L(g))))}",
"KHR*/KPH*/THRA*/STP*/H*": "{#Control_L(Super_L(Alt_L(Shift_L(h))))}",
"KHR*/KPH*/THRA*/STP*/*EU": "{#Control_L(Super_L(Alt_L(Shift_L(i))))}",
"KHR*/KPH*/THRA*/STP*/SKWR*": "{#Control_L(Super_L(Alt_L(Shift_L(j))))}",
"KHR*/KPH*/THRA*/STP*/K*": "{#Control_L(Super_L(Alt_L(Shift_L(k))))}",
"KHR*/KPH*/THRA*/STP*/HR*": "{#Control_L(Super_L(Alt_L(Shift_L(l))))}",
"KHR*/KPH*/THRA*/STP*/PH*": "{#Control_L(Super_L(Alt_L(Shift_L(m))))}",
"KHR*/KPH*/THRA*/STP*/TPH*": "{#Control_L(Super_L(Alt_L(Shift_L(n))))}",
"KHR*/KPH*/THRA*/STP*/O*": "{#Control_L(Super_L(Alt_L(Shift_L(o))))}",
"KHR*/KPH*/THRA*/STP*/P*": "{#Control_L(Super_L(Alt_L(Shift_L(p))))}",
"KHR*/KPH*/THRA*/STP*/KW*": "{#Control_L(Super_L(Alt_L(Shift_L(q))))}",
"KHR*/KPH*/THRA*/STP*/R*": "{#Control_L(Super_L(Alt_L(Shift_L(r))))}",
"KHR*/KPH*/THRA*/STP*/S*": "{#Control_L(Super_L(Alt_L(Shift_L(s))))}",
"KHR*/KPH*/THRA*/STP*/T*": "{#Control_L(Super_L(Alt_L(Shift_L(t))))}",
"KHR*/KPH*/THRA*/STP*/*U": "{#Control_L(Super_L(Alt_L(Shift_L(u))))}",
"KHR*/KPH*/THRA*/STP*/SR*": "{#Control_L(Super_L(Alt_L(Shift_L(v))))}",
"KHR*/KPH*/THRA*/STP*/W*": "{#Control_L(Super_L(Alt_L(Shift_L(w))))}",
"KHR*/KPH*/THRA*/STP*/KP*": "{#Control_L(Super_L(Alt_L(Shift_L(x))))}",
"KHR*/KPH*/THRA*/STP*/KWR*": "{#Control_L(Super_L(Alt_L(Shift_L(y))))}",
"KHR*/KPH*/THRA*/STP*/STKPW*": "{#Control_L(Super_L(Alt_L(Shift_L(z))))}",
"KHR*/KPH*/THRA*/STP*/0": "{#Control_L(Super_L(Alt_L(Shift_L(0))))}",
"KHR*/KPH*/THRA*/STP*/1": "{#Control_L(Super_L(Alt_L(Shift_L(1))))}",
"KHR*/KPH*/THRA*/STP*/2": "{#Control_L(Super_L(Alt_L(Shift_L(2))))}",
"KHR*/KPH*/THRA*/STP*/3": "{#Control_L(Super_L(Alt_L(Shift_L(3))))}",
"KHR*/KPH*/THRA*/STP*/4": "{#Control_L(Super_L(Alt_L(Shift_L(4))))}",
"KHR*/KPH*/THRA*/STP*/5": "{#Control_L(Super_L(Alt_L(Shift_L(5))))}",
"KHR*/KPH*/THRA*/STP*/6": "{#Control_L(Super_L(Alt_L(Shift_L(6))))}",
"KHR*/KPH*/THRA*/STP*/7": "{#Control_L(Super_L(Alt_L(Shift_L(7))))}",
"KHR*/KPH*/THRA*/STP*/8": "{#Control_L(Super_L(Alt_L(Shift_L(8))))}",
"KHR*/KPH*/THRA*/STP*/9": "{#Control_L(Super_L(Alt_L(Shift_L(9))))}",
"KHR*/KPH*/THRA*/STP*/KH-FG": "{#Control_L(Super_L(Alt_L(Shift_L(grave))))}",
"KHR*/KPH*/THRA*/STP*/KW-BG": "{#Control_L(Super_L(Alt_L(Shift_L(comma))))}",
"KHR*/KPH*/THRA*/STP*/PR*EPB": "{#Control_L(Super_L(Alt_L(Shift_L(parenright))))}",
"KHR*/KPH*/THRA*/STP*/PREPB": "{#Control_L(Super_L(Alt_L(Shift_L(parenleft))))}",
"KHR*/KPH*/THRA*/STP*/PW*FP": "{#Control_L(Super_L(Alt_L(Shift_L(BackSpace))))}",
"KHR*/KPH*/THRA*/STP*/PWR*BGT": "{#Control_L(Super_L(Alt_L(Shift_L(bracketright))))}",
"KHR*/KPH*/THRA*/STP*/PWR-BGT": "{#Control_L(Super_L(Alt_L(Shift_L(bracketleft))))}",
"KHR*/KPH*/THRA*/STP*/R-R": "{#Control_L(Super_L(Alt_L(Shift_L(Return))))}",
"KHR*/KPH*/THRA*/STP*/S-P": "{#Control_L(Super_L(Alt_L(Shift_L(space))))}",
"KHR*/KPH*/THRA*/STP*/SP*S": "{#Control_L(Super_L(Alt_L(Shift_L())))}",
"KHR*/KPH*/THRA*/STP*/SPWHRAERB": "{#Control_L(Super_L(Alt_L(Shift_L(backslash))))}",
"KHR*/KPH*/THRA*/STP*/STPH-G": "{#Control_L(Super_L(Alt_L(Shift_L(Right))))}",
"KHR*/KPH*/THRA*/STP*/STPH-B": "{#Control_L(Super_L(Alt_L(Shift_L(Down))))}",
"KHR*/KPH*/THRA*/STP*/STPH-P": "{#Control_L(Super_L(Alt_L(Shift_L(Up))))}",
"KHR*/KPH*/THRA*/STP*/STPH-R": "{#Control_L(Super_L(Alt_L(Shift_L(Left))))}",
"KHR*/KPH*/THRA*/STP*/TA*B": "{#Control_L(Super_L(Alt_L(Shift_L(Tab))))}",
"KHR*/KPH*/THRA*/STP*/TKHRAO*ET": "{#Control_L(Super_L(Alt_L(Shift_L(Delete))))}",
"KHR*/KPH*/THRA*/A*": "{#Control_L(Super_L(Alt_L(a)))}",
"KHR*/KPH*/THRA*/PW*": "{#Control_L(Super_L(Alt_L(b)))}",
"KHR*/KPH*/THRA*/KR*": "{#Control_L(Super_L(Alt_L(c)))}",
"KHR*/KPH*/THRA*/TK*": "{#Control_L(Super_L(Alt_L(d)))}",
"KHR*/KPH*/THRA*/*E": "{#Control_L(Super_L(Alt_L(e)))}",
"KHR*/KPH*/THRA*/TP*": "{#Control_L(Super_L(Alt_L(f)))}",
"KHR*/KPH*/THRA*/TKPW*": "{#Control_L(Super_L(Alt_L(g)))}",
"KHR*/KPH*/THRA*/H*": "{#Control_L(Super_L(Alt_L(h)))}",
"KHR*/KPH*/THRA*/*EU": "{#Control_L(Super_L(Alt_L(i)))}",
"KHR*/KPH*/THRA*/SKWR*": "{#Control_L(Super_L(Alt_L(j)))}",
"KHR*/KPH*/THRA*/K*": "{#Control_L(Super_L(Alt_L(k)))}",
"KHR*/KPH*/THRA*/HR*": "{#Control_L(Super_L(Alt_L(l)))}",
"KHR*/KPH*/THRA*/PH*": "{#Control_L(Super_L(Alt_L(m)))}",
"KHR*/KPH*/THRA*/TPH*": "{#Control_L(Super_L(Alt_L(n)))}",
"KHR*/KPH*/THRA*/O*": "{#Control_L(Super_L(Alt_L(o)))}",
"KHR*/KPH*/THRA*/P*": "{#Control_L(Super_L(Alt_L(p)))}",
"KHR*/KPH*/THRA*/KW*": "{#Control_L(Super_L(Alt_L(q)))}",
"KHR*/KPH*/THRA*/R*": "{#Control_L(Super_L(Alt_L(r)))}",
"KHR*/KPH*/THRA*/S*": "{#Control_L(Super_L(Alt_L(s)))}",
"KHR*/KPH*/THRA*/T*": "{#Control_L(Super_L(Alt_L(t)))}",
"KHR*/KPH*/THRA*/*U": "{#Control_L(Super_L(Alt_L(u)))}",
"KHR*/KPH*/THRA*/SR*": "{#Control_L(Super_L(Alt_L(v)))}",
"KHR*/KPH*/THRA*/W*": "{#Control_L(Super_L(Alt_L(w)))}",
"KHR*/KPH*/THRA*/KP*": "{#Control_L(Super_L(Alt_L(x)))}",
"KHR*/KPH*/THRA*/KWR*": "{#Control_L(Super_L(Alt_L(y)))}",
"KHR*/KPH*/THRA*/STKPW*": "{#Control_L(Super_L(Alt_L(z)))}",
"KHR*/KPH*/THRA*/0": "{#Control_L(Super_L(Alt_L(0)))}",
"KHR*/KPH*/THRA*/1": "{#Control_L(Super_L(Alt_L(1)))}",
"KHR*/KPH*/THRA*/2": "{#Control_L(Super_L(Alt_L(2)))}",
"KHR*/KPH*/THRA*/3": "{#Control_L(Super_L(Alt_L(3)))}",
"KHR*/KPH*/THRA*/4": "{#Control_L(Super_L(Alt_L(4)))}",
"KHR*/KPH*/THRA*/5": "{#Control_L(Super_L(Alt_L(5)))}",
"KHR*/KPH*/THRA*/6": "{#Control_L(Super_L(Alt_L(6)))}",
"KHR*/KPH*/THRA*/7": "{#Control_L(Super_L(Alt_L(7)))}",
"KHR*/KPH*/THRA*/8": "{#Control_L(Super_L(Alt_L(8)))}",
"KHR*/KPH*/THRA*/9": "{#Control_L(Super_L(Alt_L(9)))}",
"KHR*/KPH*/THRA*/KH-FG": "{#Control_L(Super_L(Alt_L(grave)))}",
"KHR*/KPH*/THRA*/KW-BG": "{#Control_L(Super_L(Alt_L(comma)))}",
"KHR*/KPH*/THRA*/PR*EPB": "{#Control_L(Super_L(Alt_L(parenright)))}",
"KHR*/KPH*/THRA*/PREPB": "{#Control_L(Super_L(Alt_L(parenleft)))}",
"KHR*/KPH*/THRA*/PW*FP": "{#Control_L(Super_L(Alt_L(BackSpace)))}",
"KHR*/KPH*/THRA*/PWR*BGT": "{#Control_L(Super_L(Alt_L(bracketright)))}",
"KHR*/KPH*/THRA*/PWR-BGT": "{#Control_L(Super_L(Alt_L(bracketleft)))}",
"KHR*/KPH*/THRA*/R-R": "{#Control_L(Super_L(Alt_L(Return)))}",
"KHR*/KPH*/THRA*/S-P": "{#Control_L(Super_L(Alt_L(space)))}",
"KHR*/KPH*/THRA*/SP*S": "{#Control_L(Super_L(Alt_L()))}",
"KHR*/KPH*/THRA*/SPWHRAERB": "{#Control_L(Super_L(Alt_L(backslash)))}",
"KHR*/KPH*/THRA*/STPH-G": "{#Control_L(Super_L(Alt_L(Right)))}",
"KHR*/KPH*/THRA*/STPH-B": "{#Control_L(Super_L(Alt_L(Down)))}",
"KHR*/KPH*/THRA*/STPH-P": "{#Control_L(Super_L(Alt_L(Up)))}",
"KHR*/KPH*/THRA*/STPH-R": "{#Control_L(Super_L(Alt_L(Left)))}",
"KHR*/KPH*/THRA*/TA*B": "{#Control_L(Super_L(Alt_L(Tab)))}",
"KHR*/KPH*/THRA*/TKHRAO*ET": "{#Control_L(Super_L(Alt_L(Delete)))}",
"KHR*/KPH*/STP*/THRA*/A*": "{#Control_L(Super_L(Shift_L(Alt_L(a))))}",
"KHR*/KPH*/STP*/THRA*/PW*": "{#Control_L(Super_L(Shift_L(Alt_L(b))))}",
"KHR*/KPH*/STP*/THRA*/KR*": "{#Control_L(Super_L(Shift_L(Alt_L(c))))}",
"KHR*/KPH*/STP*/THRA*/TK*": "{#Control_L(Super_L(Shift_L(Alt_L(d))))}",
"KHR*/KPH*/STP*/THRA*/*E": "{#Control_L(Super_L(Shift_L(Alt_L(e))))}",
"KHR*/KPH*/STP*/THRA*/TP*": "{#Control_L(Super_L(Shift_L(Alt_L(f))))}",
"KHR*/KPH*/STP*/THRA*/TKPW*": "{#Control_L(Super_L(Shift_L(Alt_L(g))))}",
"KHR*/KPH*/STP*/THRA*/H*": "{#Control_L(Super_L(Shift_L(Alt_L(h))))}",
"KHR*/KPH*/STP*/THRA*/*EU": "{#Control_L(Super_L(Shift_L(Alt_L(i))))}",
"KHR*/KPH*/STP*/THRA*/SKWR*": "{#Control_L(Super_L(Shift_L(Alt_L(j))))}",
"KHR*/KPH*/STP*/THRA*/K*": "{#Control_L(Super_L(Shift_L(Alt_L(k))))}",
"KHR*/KPH*/STP*/THRA*/HR*": "{#Control_L(Super_L(Shift_L(Alt_L(l))))}",
"KHR*/KPH*/STP*/THRA*/PH*": "{#Control_L(Super_L(Shift_L(Alt_L(m))))}",
"KHR*/KPH*/STP*/THRA*/TPH*": "{#Control_L(Super_L(Shift_L(Alt_L(n))))}",
"KHR*/KPH*/STP*/THRA*/O*": "{#Control_L(Super_L(Shift_L(Alt_L(o))))}",
"KHR*/KPH*/STP*/THRA*/P*": "{#Control_L(Super_L(Shift_L(Alt_L(p))))}",
"KHR*/KPH*/STP*/THRA*/KW*": "{#Control_L(Super_L(Shift_L(Alt_L(q))))}",
"KHR*/KPH*/STP*/THRA*/R*": "{#Control_L(Super_L(Shift_L(Alt_L(r))))}",
"KHR*/KPH*/STP*/THRA*/S*": "{#Control_L(Super_L(Shift_L(Alt_L(s))))}",
"KHR*/KPH*/STP*/THRA*/T*": "{#Control_L(Super_L(Shift_L(Alt_L(t))))}",
"KHR*/KPH*/STP*/THRA*/*U": "{#Control_L(Super_L(Shift_L(Alt_L(u))))}",
"KHR*/KPH*/STP*/THRA*/SR*": "{#Control_L(Super_L(Shift_L(Alt_L(v))))}",
"KHR*/KPH*/STP*/THRA*/W*": "{#Control_L(Super_L(Shift_L(Alt_L(w))))}",
"KHR*/KPH*/STP*/THRA*/KP*": "{#Control_L(Super_L(Shift_L(Alt_L(x))))}",
"KHR*/KPH*/STP*/THRA*/KWR*": "{#Control_L(Super_L(Shift_L(Alt_L(y))))}",
"KHR*/KPH*/STP*/THRA*/STKPW*": "{#Control_L(Super_L(Shift_L(Alt_L(z))))}",
"KHR*/KPH*/STP*/THRA*/0": "{#Control_L(Super_L(Shift_L(Alt_L(0))))}",
"KHR*/KPH*/STP*/THRA*/1": "{#Control_L(Super_L(Shift_L(Alt_L(1))))}",
"KHR*/KPH*/STP*/THRA*/2": "{#Control_L(Super_L(Shift_L(Alt_L(2))))}",
"KHR*/KPH*/STP*/THRA*/3": "{#Control_L(Super_L(Shift_L(Alt_L(3))))}",
"KHR*/KPH*/STP*/THRA*/4": "{#Control_L(Super_L(Shift_L(Alt_L(4))))}",
"KHR*/KPH*/STP*/THRA*/5": "{#Control_L(Super_L(Shift_L(Alt_L(5))))}",
"KHR*/KPH*/STP*/THRA*/6": "{#Control_L(Super_L(Shift_L(Alt_L(6))))}",
"KHR*/KPH*/STP*/THRA*/7": "{#Control_L(Super_L(Shift_L(Alt_L(7))))}",
"KHR*/KPH*/STP*/THRA*/8": "{#Control_L(Super_L(Shift_L(Alt_L(8))))}",
"KHR*/KPH*/STP*/THRA*/9": "{#Control_L(Super_L(Shift_L(Alt_L(9))))}",
"KHR*/KPH*/STP*/THRA*/KH-FG": "{#Control_L(Super_L(Shift_L(Alt_L(grave))))}",
"KHR*/KPH*/STP*/THRA*/KW-BG": "{#Control_L(Super_L(Shift_L(Alt_L(comma))))}",
"KHR*/KPH*/STP*/THRA*/PR*EPB": "{#Control_L(Super_L(Shift_L(Alt_L(parenright))))}",
"KHR*/KPH*/STP*/THRA*/PREPB": "{#Control_L(Super_L(Shift_L(Alt_L(parenleft))))}",
"KHR*/KPH*/STP*/THRA*/PW*FP": "{#Control_L(Super_L(Shift_L(Alt_L(BackSpace))))}",
"KHR*/KPH*/STP*/THRA*/PWR*BGT": "{#Control_L(Super_L(Shift_L(Alt_L(bracketright))))}",
"KHR*/KPH*/STP*/THRA*/PWR-BGT": "{#Control_L(Super_L(Shift_L(Alt_L(bracketleft))))}",
"KHR*/KPH*/STP*/THRA*/R-R": "{#Control_L(Super_L(Shift_L(Alt_L(Return))))}",
"KHR*/KPH*/STP*/THRA*/S-P": "{#Control_L(Super_L(Shift_L(Alt_L(space))))}",
"KHR*/KPH*/STP*/THRA*/SP*S": "{#Control_L(Super_L(Shift_L(Alt_L())))}",
"KHR*/KPH*/STP*/THRA*/SPWHRAERB": "{#Control_L(Super_L(Shift_L(Alt_L(backslash))))}",
"KHR*/KPH*/STP*/THRA*/STPH-G": "{#Control_L(Super_L(Shift_L(Alt_L(Right))))}",
"KHR*/KPH*/STP*/THRA*/STPH-B": "{#Control_L(Super_L(Shift_L(Alt_L(Down))))}",
"KHR*/KPH*/STP*/THRA*/STPH-P": "{#Control_L(Super_L(Shift_L(Alt_L(Up))))}",
"KHR*/KPH*/STP*/THRA*/STPH-R": "{#Control_L(Super_L(Shift_L(Alt_L(Left))))}",
"KHR*/KPH*/STP*/THRA*/TA*B": "{#Control_L(Super_L(Shift_L(Alt_L(Tab))))}",
"KHR*/KPH*/STP*/THRA*/TKHRAO*ET": "{#Control_L(Super_L(Shift_L(Alt_L(Delete))))}",
"KHR*/STP*/A*": "{#Control_L(Shift_L(a))}",
"KHR*/STP*/PW*": "{#Control_L(Shift_L(b))}",
"KHR*/STP*/KR*": "{#Control_L(Shift_L(c))}",
"KHR*/STP*/TK*": "{#Control_L(Shift_L(d))}",
"KHR*/STP*/*E": "{#Control_L(Shift_L(e))}",
"KHR*/STP*/TP*": "{#Control_L(Shift_L(f))}",
"KHR*/STP*/TKPW*": "{#Control_L(Shift_L(g))}",
"KHR*/STP*/H*": "{#Control_L(Shift_L(h))}",
"KHR*/STP*/*EU": "{#Control_L(Shift_L(i))}",
"KHR*/STP*/SKWR*": "{#Control_L(Shift_L(j))}",
"KHR*/STP*/K*": "{#Control_L(Shift_L(k))}",
"KHR*/STP*/HR*": "{#Control_L(Shift_L(l))}",
"KHR*/STP*/PH*": "{#Control_L(Shift_L(m))}",
"KHR*/STP*/TPH*": "{#Control_L(Shift_L(n))}",
"KHR*/STP*/O*": "{#Control_L(Shift_L(o))}",
"KHR*/STP*/P*": "{#Control_L(Shift_L(p))}",
"KHR*/STP*/KW*": "{#Control_L(Shift_L(q))}",
"KHR*/STP*/R*": "{#Control_L(Shift_L(r))}",
"KHR*/STP*/S*": "{#Control_L(Shift_L(s))}",
"KHR*/STP*/T*": "{#Control_L(Shift_L(t))}",
"KHR*/STP*/*U": "{#Control_L(Shift_L(u))}",
"KHR*/STP*/SR*": "{#Control_L(Shift_L(v))}",
"KHR*/STP*/W*": "{#Control_L(Shift_L(w))}",
"KHR*/STP*/KP*": "{#Control_L(Shift_L(x))}",
"KHR*/STP*/KWR*": "{#Control_L(Shift_L(y))}",
"KHR*/STP*/STKPW*": "{#Control_L(Shift_L(z))}",
"KHR*/STP*/0": "{#Control_L(Shift_L(0))}",
"KHR*/STP*/1": "{#Control_L(Shift_L(1))}",
"KHR*/STP*/2": "{#Control_L(Shift_L(2))}",
"KHR*/STP*/3": "{#Control_L(Shift_L(3))}",
"KHR*/STP*/4": "{#Control_L(Shift_L(4))}",
"KHR*/STP*/5": "{#Control_L(Shift_L(5))}",
"KHR*/STP*/6": "{#Control_L(Shift_L(6))}",
"KHR*/STP*/7": "{#Control_L(Shift_L(7))}",
"KHR*/STP*/8": "{#Control_L(Shift_L(8))}",
"KHR*/STP*/9": "{#Control_L(Shift_L(9))}",
"KHR*/STP*/KH-FG": "{#Control_L(Shift_L(grave))}",
"KHR*/STP*/KW-BG": "{#Control_L(Shift_L(comma))}",
"KHR*/STP*/PR*EPB": "{#Control_L(Shift_L(parenright))}",
"KHR*/STP*/PREPB": "{#Control_L(Shift_L(parenleft))}",
"KHR*/STP*/PW*FP": "{#Control_L(Shift_L(BackSpace))}",
"KHR*/STP*/PWR*BGT": "{#Control_L(Shift_L(bracketright))}",
"KHR*/STP*/PWR-BGT": "{#Control_L(Shift_L(bracketleft))}",
"KHR*/STP*/R-R": "{#Control_L(Shift_L(Return))}",
"KHR*/STP*/S-P": "{#Control_L(Shift_L(space))}",
"KHR*/STP*/SP*S": "{#Control_L(Shift_L())}",
"KHR*/STP*/SPWHRAERB": "{#Control_L(Shift_L(backslash))}",
"KHR*/STP*/STPH-G": "{#Control_L(Shift_L(Right))}",
"KHR*/STP*/STPH-B": "{#Control_L(Shift_L(Down))}",
"KHR*/STP*/STPH-P": "{#Control_L(Shift_L(Up))}",
"KHR*/STP*/STPH-R": "{#Control_L(Shift_L(Left))}",
"KHR*/STP*/TA*B": "{#Control_L(Shift_L(Tab))}",
"KHR*/STP*/TKHRAO*ET": "{#Control_L(Shift_L(Delete))}",
"KHR*/KPH*/STP*/A*": "{#Control_L(Super_L(Shift_L(a)))}",
"KHR*/KPH*/STP*/PW*": "{#Control_L(Super_L(Shift_L(b)))}",
"KHR*/KPH*/STP*/KR*": "{#Control_L(Super_L(Shift_L(c)))}",
"KHR*/KPH*/STP*/TK*": "{#Control_L(Super_L(Shift_L(d)))}",
"KHR*/KPH*/STP*/*E": "{#Control_L(Super_L(Shift_L(e)))}",
"KHR*/KPH*/STP*/TP*": "{#Control_L(Super_L(Shift_L(f)))}",
"KHR*/KPH*/STP*/TKPW*": "{#Control_L(Super_L(Shift_L(g)))}",
"KHR*/KPH*/STP*/H*": "{#Control_L(Super_L(Shift_L(h)))}",
"KHR*/KPH*/STP*/*EU": "{#Control_L(Super_L(Shift_L(i)))}",
"KHR*/KPH*/STP*/SKWR*": "{#Control_L(Super_L(Shift_L(j)))}",
"KHR*/KPH*/STP*/K*": "{#Control_L(Super_L(Shift_L(k)))}",
"KHR*/KPH*/STP*/HR*": "{#Control_L(Super_L(Shift_L(l)))}",
"KHR*/KPH*/STP*/PH*": "{#Control_L(Super_L(Shift_L(m)))}",
"KHR*/KPH*/STP*/TPH*": "{#Control_L(Super_L(Shift_L(n)))}",
"KHR*/KPH*/STP*/O*": "{#Control_L(Super_L(Shift_L(o)))}",
"KHR*/KPH*/STP*/P*": "{#Control_L(Super_L(Shift_L(p)))}",
"KHR*/KPH*/STP*/KW*": "{#Control_L(Super_L(Shift_L(q)))}",
"KHR*/KPH*/STP*/R*": "{#Control_L(Super_L(Shift_L(r)))}",
"KHR*/KPH*/STP*/S*": "{#Control_L(Super_L(Shift_L(s)))}",
"KHR*/KPH*/STP*/T*": "{#Control_L(Super_L(Shift_L(t)))}",
"KHR*/KPH*/STP*/*U": "{#Control_L(Super_L(Shift_L(u)))}",
"KHR*/KPH*/STP*/SR*": "{#Control_L(Super_L(Shift_L(v)))}",
"KHR*/KPH*/STP*/W*": "{#Control_L(Super_L(Shift_L(w)))}",
"KHR*/KPH*/STP*/KP*": "{#Control_L(Super_L(Shift_L(x)))}",
"KHR*/KPH*/STP*/KWR*": "{#Control_L(Super_L(Shift_L(y)))}",
"KHR*/KPH*/STP*/STKPW*": "{#Control_L(Super_L(Shift_L(z)))}",
"KHR*/KPH*/STP*/0": "{#Control_L(Super_L(Shift_L(0)))}",
"KHR*/KPH*/STP*/1": "{#Control_L(Super_L(Shift_L(1)))}",
"KHR*/KPH*/STP*/2": "{#Control_L(Super_L(Shift_L(2)))}",
"KHR*/KPH*/STP*/3": "{#Control_L(Super_L(Shift_L(3)))}",
"KHR*/KPH*/STP*/4": "{#Control_L(Super_L(Shift_L(4)))}",
"KHR*/KPH*/STP*/5": "{#Control_L(Super_L(Shift_L(5)))}",
"KHR*/KPH*/STP*/6": "{#Control_L(Super_L(Shift_L(6)))}",
"KHR*/KPH*/STP*/7": "{#Control_L(Super_L(Shift_L(7)))}",
"KHR*/KPH*/STP*/8": "{#Control_L(Super_L(Shift_L(8)))}",
"KHR*/KPH*/STP*/9": "{#Control_L(Super_L(Shift_L(9)))}",
"KHR*/KPH*/STP*/KH-FG": "{#Control_L(Super_L(Shift_L(grave)))}",
"KHR*/KPH*/STP*/KW-BG": "{#Control_L(Super_L(Shift_L(comma)))}",
"KHR*/KPH*/STP*/PR*EPB": "{#Control_L(Super_L(Shift_L(parenright)))}",
"KHR*/KPH*/STP*/PREPB": "{#Control_L(Super_L(Shift_L(parenleft)))}",
"KHR*/KPH*/STP*/PW*FP": "{#Control_L(Super_L(Shift_L(BackSpace)))}",
"KHR*/KPH*/STP*/PWR*BGT": "{#Control_L(Super_L(Shift_L(bracketright)))}",
"KHR*/KPH*/STP*/PWR-BGT": "{#Control_L(Super_L(Shift_L(bracketleft)))}",
"KHR*/KPH*/STP*/R-R": "{#Control_L(Super_L(Shift_L(Return)))}",
"KHR*/KPH*/STP*/S-P": "{#Control_L(Super_L(Shift_L(space)))}",
"KHR*/KPH*/STP*/SP*S": "{#Control_L(Super_L(Shift_L()))}",
"KHR*/KPH*/STP*/SPWHRAERB": "{#Control_L(Super_L(Shift_L(backslash)))}",
"KHR*/KPH*/STP*/STPH-G": "{#Control_L(Super_L(Shift_L(Right)))}",
"KHR*/KPH*/STP*/STPH-B": "{#Control_L(Super_L(Shift_L(Down)))}",
"KHR*/KPH*/STP*/STPH-P": "{#Control_L(Super_L(Shift_L(Up)))}",
"KHR*/KPH*/STP*/STPH-R": "{#Control_L(Super_L(Shift_L(Left)))}",
"KHR*/KPH*/STP*/TA*B": "{#Control_L(Super_L(Shift_L(Tab)))}",
"KHR*/KPH*/STP*/TKHRAO*ET": "{#Control_L(Super_L(Shift_L(Delete)))}",
"KHR*/KPH*/A*": "{#Control_L(Super_L(a))}",
"KHR*/KPH*/PW*": "{#Control_L(Super_L(b))}",
"KHR*/KPH*/KR*": "{#Control_L(Super_L(c))}",
"KHR*/KPH*/TK*": "{#Control_L(Super_L(d))}",
"KHR*/KPH*/*E": "{#Control_L(Super_L(e))}",
"KHR*/KPH*/TP*": "{#Control_L(Super_L(f))}",
"KHR*/KPH*/TKPW*": "{#Control_L(Super_L(g))}",
"KHR*/KPH*/H*": "{#Control_L(Super_L(h))}",
"KHR*/KPH*/*EU": "{#Control_L(Super_L(i))}",
"KHR*/KPH*/SKWR*": "{#Control_L(Super_L(j))}",
"KHR*/KPH*/K*": "{#Control_L(Super_L(k))}",
"KHR*/KPH*/HR*": "{#Control_L(Super_L(l))}",
"KHR*/KPH*/PH*": "{#Control_L(Super_L(m))}",
"KHR*/KPH*/TPH*": "{#Control_L(Super_L(n))}",
"KHR*/KPH*/O*": "{#Control_L(Super_L(o))}",
"KHR*/KPH*/P*": "{#Control_L(Super_L(p))}",
"KHR*/KPH*/KW*": "{#Control_L(Super_L(q))}",
"KHR*/KPH*/R*": "{#Control_L(Super_L(r))}",
"KHR*/KPH*/S*": "{#Control_L(Super_L(s))}",
"KHR*/KPH*/T*": "{#Control_L(Super_L(t))}",
"KHR*/KPH*/*U": "{#Control_L(Super_L(u))}",
"KHR*/KPH*/SR*": "{#Control_L(Super_L(v))}",
"KHR*/KPH*/W*": "{#Control_L(Super_L(w))}",
"KHR*/KPH*/KP*": "{#Control_L(Super_L(x))}",
"KHR*/KPH*/KWR*": "{#Control_L(Super_L(y))}",
"KHR*/KPH*/STKPW*": "{#Control_L(Super_L(z))}",
"KHR*/KPH*/0": "{#Control_L(Super_L(0))}",
"KHR*/KPH*/1": "{#Control_L(Super_L(1))}",
"KHR*/KPH*/2": "{#Control_L(Super_L(2))}",
"KHR*/KPH*/3": "{#Control_L(Super_L(3))}",
"KHR*/KPH*/4": "{#Control_L(Super_L(4))}",
"KHR*/KPH*/5": "{#Control_L(Super_L(5))}",
"KHR*/KPH*/6": "{#Control_L(Super_L(6))}",
"KHR*/KPH*/7": "{#Control_L(Super_L(7))}",
"KHR*/KPH*/8": "{#Control_L(Super_L(8))}",
"KHR*/KPH*/9": "{#Control_L(Super_L(9))}",
"KHR*/KPH*/KH-FG": "{#Control_L(Super_L(grave))}",
"KHR*/KPH*/KW-BG": "{#Control_L(Super_L(comma))}",
"KHR*/KPH*/PR*EPB": "{#Control_L(Super_L(parenright))}",
"KHR*/KPH*/PREPB": "{#Control_L(Super_L(parenleft))}",
"KHR*/KPH*/PW*FP": "{#Control_L(Super_L(BackSpace))}",
"KHR*/KPH*/PWR*BGT": "{#Control_L(Super_L(bracketright))}",
"KHR*/KPH*/PWR-BGT": "{#Control_L(Super_L(bracketleft))}",
"KHR*/KPH*/R-R": "{#Control_L(Super_L(Return))}",
"KHR*/KPH*/S-P": "{#Control_L(Super_L(space))}",
"KHR*/KPH*/SP*S": "{#Control_L(Super_L())}",
"KHR*/KPH*/SPWHRAERB": "{#Control_L(Super_L(backslash))}",
"KHR*/KPH*/STPH-G": "{#Control_L(Super_L(Right))}",
"KHR*/KPH*/STPH-B": "{#Control_L(Super_L(Down))}",
"KHR*/KPH*/STPH-P": "{#Control_L(Super_L(Up))}",
"KHR*/KPH*/STPH-R": "{#Control_L(Super_L(Left))}",
"KHR*/KPH*/TA*B": "{#Control_L(Super_L(Tab))}",
"KHR*/KPH*/TKHRAO*ET": "{#Control_L(Super_L(Delete))}",
"KHR*/STP*/KPH*/A*": "{#Control_L(Shift_L(Super_L(a)))}",
"KHR*/STP*/KPH*/PW*": "{#Control_L(Shift_L(Super_L(b)))}",
"KHR*/STP*/KPH*/KR*": "{#Control_L(Shift_L(Super_L(c)))}",
"KHR*/STP*/KPH*/TK*": "{#Control_L(Shift_L(Super_L(d)))}",
"KHR*/STP*/KPH*/*E": "{#Control_L(Shift_L(Super_L(e)))}",
"KHR*/STP*/KPH*/TP*": "{#Control_L(Shift_L(Super_L(f)))}",
"KHR*/STP*/KPH*/TKPW*": "{#Control_L(Shift_L(Super_L(g)))}",
"KHR*/STP*/KPH*/H*": "{#Control_L(Shift_L(Super_L(h)))}",
"KHR*/STP*/KPH*/*EU": "{#Control_L(Shift_L(Super_L(i)))}",
"KHR*/STP*/KPH*/SKWR*": "{#Control_L(Shift_L(Super_L(j)))}",
"KHR*/STP*/KPH*/K*": "{#Control_L(Shift_L(Super_L(k)))}",
"KHR*/STP*/KPH*/HR*": "{#Control_L(Shift_L(Super_L(l)))}",
"KHR*/STP*/KPH*/PH*": "{#Control_L(Shift_L(Super_L(m)))}",
"KHR*/STP*/KPH*/TPH*": "{#Control_L(Shift_L(Super_L(n)))}",
"KHR*/STP*/KPH*/O*": "{#Control_L(Shift_L(Super_L(o)))}",
"KHR*/STP*/KPH*/P*": "{#Control_L(Shift_L(Super_L(p)))}",
"KHR*/STP*/KPH*/KW*": "{#Control_L(Shift_L(Super_L(q)))}",
"KHR*/STP*/KPH*/R*": "{#Control_L(Shift_L(Super_L(r)))}",
"KHR*/STP*/KPH*/S*": "{#Control_L(Shift_L(Super_L(s)))}",
"KHR*/STP*/KPH*/T*": "{#Control_L(Shift_L(Super_L(t)))}",
"KHR*/STP*/KPH*/*U": "{#Control_L(Shift_L(Super_L(u)))}",
"KHR*/STP*/KPH*/SR*": "{#Control_L(Shift_L(Super_L(v)))}",
"KHR*/STP*/KPH*/W*": "{#Control_L(Shift_L(Super_L(w)))}",
"KHR*/STP*/KPH*/KP*": "{#Control_L(Shift_L(Super_L(x)))}",
"KHR*/STP*/KPH*/KWR*": "{#Control_L(Shift_L(Super_L(y)))}",
"KHR*/STP*/KPH*/STKPW*": "{#Control_L(Shift_L(Super_L(z)))}",
"KHR*/STP*/KPH*/0": "{#Control_L(Shift_L(Super_L(0)))}",
"KHR*/STP*/KPH*/1": "{#Control_L(Shift_L(Super_L(1)))}",
"KHR*/STP*/KPH*/2": "{#Control_L(Shift_L(Super_L(2)))}",
"KHR*/STP*/KPH*/3": "{#Control_L(Shift_L(Super_L(3)))}",
"KHR*/STP*/KPH*/4": "{#Control_L(Shift_L(Super_L(4)))}",
"KHR*/STP*/KPH*/5": "{#Control_L(Shift_L(Super_L(5)))}",
"KHR*/STP*/KPH*/6": "{#Control_L(Shift_L(Super_L(6)))}",
"KHR*/STP*/KPH*/7": "{#Control_L(Shift_L(Super_L(7)))}",
"KHR*/STP*/KPH*/8": "{#Control_L(Shift_L(Super_L(8)))}",
"KHR*/STP*/KPH*/9": "{#Control_L(Shift_L(Super_L(9)))}",
"KHR*/STP*/KPH*/KH-FG": "{#Control_L(Shift_L(Super_L(grave)))}",
"KHR*/STP*/KPH*/KW-BG": "{#Control_L(Shift_L(Super_L(comma)))}",
"KHR*/STP*/KPH*/PR*EPB": "{#Control_L(Shift_L(Super_L(parenright)))}",
"KHR*/STP*/KPH*/PREPB": "{#Control_L(Shift_L(Super_L(parenleft)))}",
"KHR*/STP*/KPH*/PW*FP": "{#Control_L(Shift_L(Super_L(BackSpace)))}",
"KHR*/STP*/KPH*/PWR*BGT": "{#Control_L(Shift_L(Super_L(bracketright)))}",
"KHR*/STP*/KPH*/PWR-BGT": "{#Control_L(Shift_L(Super_L(bracketleft)))}",
"KHR*/STP*/KPH*/R-R": "{#Control_L(Shift_L(Super_L(Return)))}",
"KHR*/STP*/KPH*/S-P": "{#Control_L(Shift_L(Super_L(space)))}",
"KHR*/STP*/KPH*/SP*S": "{#Control_L(Shift_L(Super_L()))}",
"KHR*/STP*/KPH*/SPWHRAERB": "{#Control_L(Shift_L(Super_L(backslash)))}",
"KHR*/STP*/KPH*/STPH-G": "{#Control_L(Shift_L(Super_L(Right)))}",
"KHR*/STP*/KPH*/STPH-B": "{#Control_L(Shift_L(Super_L(Down)))}",
"KHR*/STP*/KPH*/STPH-P": "{#Control_L(Shift_L(Super_L(Up)))}",
"KHR*/STP*/KPH*/STPH-R": "{#Control_L(Shift_L(Super_L(Left)))}",
"KHR*/STP*/KPH*/TA*B": "{#Control_L(Shift_L(Super_L(Tab)))}",
"KHR*/STP*/KPH*/TKHRAO*ET": "{#Control_L(Shift_L(Super_L(Delete)))}",
"KHR*/THRA*/STP*/A*": "{#Control_L(Alt_L(Shift_L(a)))}",
"KHR*/THRA*/STP*/PW*": "{#Control_L(Alt_L(Shift_L(b)))}",
"KHR*/THRA*/STP*/KR*": "{#Control_L(Alt_L(Shift_L(c)))}",
"KHR*/THRA*/STP*/TK*": "{#Control_L(Alt_L(Shift_L(d)))}",
"KHR*/THRA*/STP*/*E": "{#Control_L(Alt_L(Shift_L(e)))}",
"KHR*/THRA*/STP*/TP*": "{#Control_L(Alt_L(Shift_L(f)))}",
"KHR*/THRA*/STP*/TKPW*": "{#Control_L(Alt_L(Shift_L(g)))}",
"KHR*/THRA*/STP*/H*": "{#Control_L(Alt_L(Shift_L(h)))}",
"KHR*/THRA*/STP*/*EU": "{#Control_L(Alt_L(Shift_L(i)))}",
"KHR*/THRA*/STP*/SKWR*": "{#Control_L(Alt_L(Shift_L(j)))}",
"KHR*/THRA*/STP*/K*": "{#Control_L(Alt_L(Shift_L(k)))}",
"KHR*/THRA*/STP*/HR*": "{#Control_L(Alt_L(Shift_L(l)))}",
"KHR*/THRA*/STP*/PH*": "{#Control_L(Alt_L(Shift_L(m)))}",
"KHR*/THRA*/STP*/TPH*": "{#Control_L(Alt_L(Shift_L(n)))}",
"KHR*/THRA*/STP*/O*": "{#Control_L(Alt_L(Shift_L(o)))}",
"KHR*/THRA*/STP*/P*": "{#Control_L(Alt_L(Shift_L(p)))}",
"KHR*/THRA*/STP*/KW*": "{#Control_L(Alt_L(Shift_L(q)))}",
"KHR*/THRA*/STP*/R*": "{#Control_L(Alt_L(Shift_L(r)))}",
"KHR*/THRA*/STP*/S*": "{#Control_L(Alt_L(Shift_L(s)))}",
"KHR*/THRA*/STP*/T*": "{#Control_L(Alt_L(Shift_L(t)))}",
"KHR*/THRA*/STP*/*U": "{#Control_L(Alt_L(Shift_L(u)))}",
"KHR*/THRA*/STP*/SR*": "{#Control_L(Alt_L(Shift_L(v)))}",
"KHR*/THRA*/STP*/W*": "{#Control_L(Alt_L(Shift_L(w)))}",
"KHR*/THRA*/STP*/KP*": "{#Control_L(Alt_L(Shift_L(x)))}",
"KHR*/THRA*/STP*/KWR*": "{#Control_L(Alt_L(Shift_L(y)))}",
"KHR*/THRA*/STP*/STKPW*": "{#Control_L(Alt_L(Shift_L(z)))}",
"KHR*/THRA*/STP*/0": "{#Control_L(Alt_L(Shift_L(0)))}",
"KHR*/THRA*/STP*/1": "{#Control_L(Alt_L(Shift_L(1)))}",
"KHR*/THRA*/STP*/2": "{#Control_L(Alt_L(Shift_L(2)))}",
"KHR*/THRA*/STP*/3": "{#Control_L(Alt_L(Shift_L(3)))}",
"KHR*/THRA*/STP*/4": "{#Control_L(Alt_L(Shift_L(4)))}",
"KHR*/THRA*/STP*/5": "{#Control_L(Alt_L(Shift_L(5)))}",
"KHR*/THRA*/STP*/6": "{#Control_L(Alt_L(Shift_L(6)))}",
"KHR*/THRA*/STP*/7": "{#Control_L(Alt_L(Shift_L(7)))}",
"KHR*/THRA*/STP*/8": "{#Control_L(Alt_L(Shift_L(8)))}",
"KHR*/THRA*/STP*/9": "{#Control_L(Alt_L(Shift_L(9)))}",
"KHR*/THRA*/STP*/KH-FG": "{#Control_L(Alt_L(Shift_L(grave)))}",
"KHR*/THRA*/STP*/KW-BG": "{#Control_L(Alt_L(Shift_L(comma)))}",
"KHR*/THRA*/STP*/PR*EPB": "{#Control_L(Alt_L(Shift_L(parenright)))}",
"KHR*/THRA*/STP*/PREPB": "{#Control_L(Alt_L(Shift_L(parenleft)))}",
"KHR*/THRA*/STP*/PW*FP": "{#Control_L(Alt_L(Shift_L(BackSpace)))}",
"KHR*/THRA*/STP*/PWR*BGT": "{#Control_L(Alt_L(Shift_L(bracketright)))}",
"KHR*/THRA*/STP*/PWR-BGT": "{#Control_L(Alt_L(Shift_L(bracketleft)))}",
"KHR*/THRA*/STP*/R-R": "{#Control_L(Alt_L(Shift_L(Return)))}",
"KHR*/THRA*/STP*/S-P": "{#Control_L(Alt_L(Shift_L(space)))}",
"KHR*/THRA*/STP*/SP*S": "{#Control_L(Alt_L(Shift_L()))}",
"KHR*/THRA*/STP*/SPWHRAERB": "{#Control_L(Alt_L(Shift_L(backslash)))}",
"KHR*/THRA*/STP*/STPH-G": "{#Control_L(Alt_L(Shift_L(Right)))}",
"KHR*/THRA*/STP*/STPH-B": "{#Control_L(Alt_L(Shift_L(Down)))}",
"KHR*/THRA*/STP*/STPH-P": "{#Control_L(Alt_L(Shift_L(Up)))}",
"KHR*/THRA*/STP*/STPH-R": "{#Control_L(Alt_L(Shift_L(Left)))}",
"KHR*/THRA*/STP*/TA*B": "{#Control_L(Alt_L(Shift_L(Tab)))}",
"KHR*/THRA*/STP*/TKHRAO*ET": "{#Control_L(Alt_L(Shift_L(Delete)))}",
"KHR*/THRA*/KPH*/STP*/A*": "{#Control_L(Alt_L(Super_L(Shift_L(a))))}",
"KHR*/THRA*/KPH*/STP*/PW*": "{#Control_L(Alt_L(Super_L(Shift_L(b))))}",
"KHR*/THRA*/KPH*/STP*/KR*": "{#Control_L(Alt_L(Super_L(Shift_L(c))))}",
"KHR*/THRA*/KPH*/STP*/TK*": "{#Control_L(Alt_L(Super_L(Shift_L(d))))}",
"KHR*/THRA*/KPH*/STP*/*E": "{#Control_L(Alt_L(Super_L(Shift_L(e))))}",
"KHR*/THRA*/KPH*/STP*/TP*": "{#Control_L(Alt_L(Super_L(Shift_L(f))))}",
"KHR*/THRA*/KPH*/STP*/TKPW*": "{#Control_L(Alt_L(Super_L(Shift_L(g))))}",
"KHR*/THRA*/KPH*/STP*/H*": "{#Control_L(Alt_L(Super_L(Shift_L(h))))}",
"KHR*/THRA*/KPH*/STP*/*EU": "{#Control_L(Alt_L(Super_L(Shift_L(i))))}",
"KHR*/THRA*/KPH*/STP*/SKWR*": "{#Control_L(Alt_L(Super_L(Shift_L(j))))}",
"KHR*/THRA*/KPH*/STP*/K*": "{#Control_L(Alt_L(Super_L(Shift_L(k))))}",
"KHR*/THRA*/KPH*/STP*/HR*": "{#Control_L(Alt_L(Super_L(Shift_L(l))))}",
"KHR*/THRA*/KPH*/STP*/PH*": "{#Control_L(Alt_L(Super_L(Shift_L(m))))}",
"KHR*/THRA*/KPH*/STP*/TPH*": "{#Control_L(Alt_L(Super_L(Shift_L(n))))}",
"KHR*/THRA*/KPH*/STP*/O*": "{#Control_L(Alt_L(Super_L(Shift_L(o))))}",
"KHR*/THRA*/KPH*/STP*/P*": "{#Control_L(Alt_L(Super_L(Shift_L(p))))}",
"KHR*/THRA*/KPH*/STP*/KW*": "{#Control_L(Alt_L(Super_L(Shift_L(q))))}",
"KHR*/THRA*/KPH*/STP*/R*": "{#Control_L(Alt_L(Super_L(Shift_L(r))))}",
"KHR*/THRA*/KPH*/STP*/S*": "{#Control_L(Alt_L(Super_L(Shift_L(s))))}",
"KHR*/THRA*/KPH*/STP*/T*": "{#Control_L(Alt_L(Super_L(Shift_L(t))))}",
"KHR*/THRA*/KPH*/STP*/*U": "{#Control_L(Alt_L(Super_L(Shift_L(u))))}",
"KHR*/THRA*/KPH*/STP*/SR*": "{#Control_L(Alt_L(Super_L(Shift_L(v))))}",
"KHR*/THRA*/KPH*/STP*/W*": "{#Control_L(Alt_L(Super_L(Shift_L(w))))}",
"KHR*/THRA*/KPH*/STP*/KP*": "{#Control_L(Alt_L(Super_L(Shift_L(x))))}",
"KHR*/THRA*/KPH*/STP*/KWR*": "{#Control_L(Alt_L(Super_L(Shift_L(y))))}",
"KHR*/THRA*/KPH*/STP*/STKPW*": "{#Control_L(Alt_L(Super_L(Shift_L(z))))}",
"KHR*/THRA*/KPH*/STP*/0": "{#Control_L(Alt_L(Super_L(Shift_L(0))))}",
"KHR*/THRA*/KPH*/STP*/1": "{#Control_L(Alt_L(Super_L(Shift_L(1))))}",
"KHR*/THRA*/KPH*/STP*/2": "{#Control_L(Alt_L(Super_L(Shift_L(2))))}",
"KHR*/THRA*/KPH*/STP*/3": "{#Control_L(Alt_L(Super_L(Shift_L(3))))}",
"KHR*/THRA*/KPH*/STP*/4": "{#Control_L(Alt_L(Super_L(Shift_L(4))))}",
"KHR*/THRA*/KPH*/STP*/5": "{#Control_L(Alt_L(Super_L(Shift_L(5))))}",
"KHR*/THRA*/KPH*/STP*/6": "{#Control_L(Alt_L(Super_L(Shift_L(6))))}",
"KHR*/THRA*/KPH*/STP*/7": "{#Control_L(Alt_L(Super_L(Shift_L(7))))}",
"KHR*/THRA*/KPH*/STP*/8": "{#Control_L(Alt_L(Super_L(Shift_L(8))))}",
"KHR*/THRA*/KPH*/STP*/9": "{#Control_L(Alt_L(Super_L(Shift_L(9))))}",
"KHR*/THRA*/KPH*/STP*/KH-FG": "{#Control_L(Alt_L(Super_L(Shift_L(grave))))}",
"KHR*/THRA*/KPH*/STP*/KW-BG": "{#Control_L(Alt_L(Super_L(Shift_L(comma))))}",
"KHR*/THRA*/KPH*/STP*/PR*EPB": "{#Control_L(Alt_L(Super_L(Shift_L(parenright))))}",
"KHR*/THRA*/KPH*/STP*/PREPB": "{#Control_L(Alt_L(Super_L(Shift_L(parenleft))))}",
"KHR*/THRA*/KPH*/STP*/PW*FP": "{#Control_L(Alt_L(Super_L(Shift_L(BackSpace))))}",
"KHR*/THRA*/KPH*/STP*/PWR*BGT": "{#Control_L(Alt_L(Super_L(Shift_L(bracketright))))}",
"KHR*/THRA*/KPH*/STP*/PWR-BGT": "{#Control_L(Alt_L(Super_L(Shift_L(bracketleft))))}",
"KHR*/THRA*/KPH*/STP*/R-R": "{#Control_L(Alt_L(Super_L(Shift_L(Return))))}",
"KHR*/THRA*/KPH*/STP*/S-P": "{#Control_L(Alt_L(Super_L(Shift_L(space))))}",
"KHR*/THRA*/KPH*/STP*/SP*S": "{#Control_L(Alt_L(Super_L(Shift_L())))}",
"KHR*/THRA*/KPH*/STP*/SPWHRAERB": "{#Control_L(Alt_L(Super_L(Shift_L(backslash))))}",
"KHR*/THRA*/KPH*/STP*/STPH-G": "{#Control_L(Alt_L(Super_L(Shift_L(Right))))}",
"KHR*/THRA*/KPH*/STP*/STPH-B": "{#Control_L(Alt_L(Super_L(Shift_L(Down))))}",
"KHR*/THRA*/KPH*/STP*/STPH-P": "{#Control_L(Alt_L(Super_L(Shift_L(Up))))}",
"KHR*/THRA*/KPH*/STP*/STPH-R": "{#Control_L(Alt_L(Super_L(Shift_L(Left))))}",
"KHR*/THRA*/KPH*/STP*/TA*B": "{#Control_L(Alt_L(Super_L(Shift_L(Tab))))}",
"KHR*/THRA*/KPH*/STP*/TKHRAO*ET": "{#Control_L(Alt_L(Super_L(Shift_L(Delete))))}",
"KHR*/THRA*/KPH*/A*": "{#Control_L(Alt_L(Super_L(a)))}",
"KHR*/THRA*/KPH*/PW*": "{#Control_L(Alt_L(Super_L(b)))}",
"KHR*/THRA*/KPH*/KR*": "{#Control_L(Alt_L(Super_L(c)))}",
"KHR*/THRA*/KPH*/TK*": "{#Control_L(Alt_L(Super_L(d)))}",
"KHR*/THRA*/KPH*/*E": "{#Control_L(Alt_L(Super_L(e)))}",
"KHR*/THRA*/KPH*/TP*": "{#Control_L(Alt_L(Super_L(f)))}",
"KHR*/THRA*/KPH*/TKPW*": "{#Control_L(Alt_L(Super_L(g)))}",
"KHR*/THRA*/KPH*/H*": "{#Control_L(Alt_L(Super_L(h)))}",
"KHR*/THRA*/KPH*/*EU": "{#Control_L(Alt_L(Super_L(i)))}",
"KHR*/THRA*/KPH*/SKWR*": "{#Control_L(Alt_L(Super_L(j)))}",
"KHR*/THRA*/KPH*/K*": "{#Control_L(Alt_L(Super_L(k)))}",
"KHR*/THRA*/KPH*/HR*": "{#Control_L(Alt_L(Super_L(l)))}",
"KHR*/THRA*/KPH*/PH*": "{#Control_L(Alt_L(Super_L(m)))}",
"KHR*/THRA*/KPH*/TPH*": "{#Control_L(Alt_L(Super_L(n)))}",
"KHR*/THRA*/KPH*/O*": "{#Control_L(Alt_L(Super_L(o)))}",
"KHR*/THRA*/KPH*/P*": "{#Control_L(Alt_L(Super_L(p)))}",
"KHR*/THRA*/KPH*/KW*": "{#Control_L(Alt_L(Super_L(q)))}",
"KHR*/THRA*/KPH*/R*": "{#Control_L(Alt_L(Super_L(r)))}",
"KHR*/THRA*/KPH*/S*": "{#Control_L(Alt_L(Super_L(s)))}",
"KHR*/THRA*/KPH*/T*": "{#Control_L(Alt_L(Super_L(t)))}",
"KHR*/THRA*/KPH*/*U": "{#Control_L(Alt_L(Super_L(u)))}",
"KHR*/THRA*/KPH*/SR*": "{#Control_L(Alt_L(Super_L(v)))}",
"KHR*/THRA*/KPH*/W*": "{#Control_L(Alt_L(Super_L(w)))}",
"KHR*/THRA*/KPH*/KP*": "{#Control_L(Alt_L(Super_L(x)))}",
"KHR*/THRA*/KPH*/KWR*": "{#Control_L(Alt_L(Super_L(y)))}",
"KHR*/THRA*/KPH*/STKPW*": "{#Control_L(Alt_L(Super_L(z)))}",
"KHR*/THRA*/KPH*/0": "{#Control_L(Alt_L(Super_L(0)))}",
"KHR*/THRA*/KPH*/1": "{#Control_L(Alt_L(Super_L(1)))}",
"KHR*/THRA*/KPH*/2": "{#Control_L(Alt_L(Super_L(2)))}",
"KHR*/THRA*/KPH*/3": "{#Control_L(Alt_L(Super_L(3)))}",
"KHR*/THRA*/KPH*/4": "{#Control_L(Alt_L(Super_L(4)))}",
"KHR*/THRA*/KPH*/5": "{#Control_L(Alt_L(Super_L(5)))}",
"KHR*/THRA*/KPH*/6": "{#Control_L(Alt_L(Super_L(6)))}",
"KHR*/THRA*/KPH*/7": "{#Control_L(Alt_L(Super_L(7)))}",
"KHR*/THRA*/KPH*/8": "{#Control_L(Alt_L(Super_L(8)))}",
"KHR*/THRA*/KPH*/9": "{#Control_L(Alt_L(Super_L(9)))}",
"KHR*/THRA*/KPH*/KH-FG": "{#Control_L(Alt_L(Super_L(grave)))}",
"KHR*/THRA*/KPH*/KW-BG": "{#Control_L(Alt_L(Super_L(comma)))}",
"KHR*/THRA*/KPH*/PR*EPB": "{#Control_L(Alt_L(Super_L(parenright)))}",
"KHR*/THRA*/KPH*/PREPB": "{#Control_L(Alt_L(Super_L(parenleft)))}",
"KHR*/THRA*/KPH*/PW*FP": "{#Control_L(Alt_L(Super_L(BackSpace)))}",
"KHR*/THRA*/KPH*/PWR*BGT": "{#Control_L(Alt_L(Super_L(bracketright)))}",
"KHR*/THRA*/KPH*/PWR-BGT": "{#Control_L(Alt_L(Super_L(bracketleft)))}",
"KHR*/THRA*/KPH*/R-R": "{#Control_L(Alt_L(Super_L(Return)))}",
"KHR*/THRA*/KPH*/S-P": "{#Control_L(Alt_L(Super_L(space)))}",
"KHR*/THRA*/KPH*/SP*S": "{#Control_L(Alt_L(Super_L()))}",
"KHR*/THRA*/KPH*/SPWHRAERB": "{#Control_L(Alt_L(Super_L(backslash)))}",
"KHR*/THRA*/KPH*/STPH-G": "{#Control_L(Alt_L(Super_L(Right)))}",
"KHR*/THRA*/KPH*/STPH-B": "{#Control_L(Alt_L(Super_L(Down)))}",
"KHR*/THRA*/KPH*/STPH-P": "{#Control_L(Alt_L(Super_L(Up)))}",
"KHR*/THRA*/KPH*/STPH-R": "{#Control_L(Alt_L(Super_L(Left)))}",
"KHR*/THRA*/KPH*/TA*B": "{#Control_L(Alt_L(Super_L(Tab)))}",
"KHR*/THRA*/KPH*/TKHRAO*ET": "{#Control_L(Alt_L(Super_L(Delete)))}",
"KHR*/THRA*/STP*/KPH*/A*": "{#Control_L(Alt_L(Shift_L(Super_L(a))))}",
"KHR*/THRA*/STP*/KPH*/PW*": "{#Control_L(Alt_L(Shift_L(Super_L(b))))}",
"KHR*/THRA*/STP*/KPH*/KR*": "{#Control_L(Alt_L(Shift_L(Super_L(c))))}",
"KHR*/THRA*/STP*/KPH*/TK*": "{#Control_L(Alt_L(Shift_L(Super_L(d))))}",
"KHR*/THRA*/STP*/KPH*/*E": "{#Control_L(Alt_L(Shift_L(Super_L(e))))}",
"KHR*/THRA*/STP*/KPH*/TP*": "{#Control_L(Alt_L(Shift_L(Super_L(f))))}",
"KHR*/THRA*/STP*/KPH*/TKPW*": "{#Control_L(Alt_L(Shift_L(Super_L(g))))}",
"KHR*/THRA*/STP*/KPH*/H*": "{#Control_L(Alt_L(Shift_L(Super_L(h))))}",
"KHR*/THRA*/STP*/KPH*/*EU": "{#Control_L(Alt_L(Shift_L(Super_L(i))))}",
"KHR*/THRA*/STP*/KPH*/SKWR*": "{#Control_L(Alt_L(Shift_L(Super_L(j))))}",
"KHR*/THRA*/STP*/KPH*/K*": "{#Control_L(Alt_L(Shift_L(Super_L(k))))}",
"KHR*/THRA*/STP*/KPH*/HR*": "{#Control_L(Alt_L(Shift_L(Super_L(l))))}",
"KHR*/THRA*/STP*/KPH*/PH*": "{#Control_L(Alt_L(Shift_L(Super_L(m))))}",
"KHR*/THRA*/STP*/KPH*/TPH*": "{#Control_L(Alt_L(Shift_L(Super_L(n))))}",
"KHR*/THRA*/STP*/KPH*/O*": "{#Control_L(Alt_L(Shift_L(Super_L(o))))}",
"KHR*/THRA*/STP*/KPH*/P*": "{#Control_L(Alt_L(Shift_L(Super_L(p))))}",
"KHR*/THRA*/STP*/KPH*/KW*": "{#Control_L(Alt_L(Shift_L(Super_L(q))))}",
"KHR*/THRA*/STP*/KPH*/R*": "{#Control_L(Alt_L(Shift_L(Super_L(r))))}",
"KHR*/THRA*/STP*/KPH*/S*": "{#Control_L(Alt_L(Shift_L(Super_L(s))))}",
"KHR*/THRA*/STP*/KPH*/T*": "{#Control_L(Alt_L(Shift_L(Super_L(t))))}",
"KHR*/THRA*/STP*/KPH*/*U": "{#Control_L(Alt_L(Shift_L(Super_L(u))))}",
"KHR*/THRA*/STP*/KPH*/SR*": "{#Control_L(Alt_L(Shift_L(Super_L(v))))}",
"KHR*/THRA*/STP*/KPH*/W*": "{#Control_L(Alt_L(Shift_L(Super_L(w))))}",
"KHR*/THRA*/STP*/KPH*/KP*": "{#Control_L(Alt_L(Shift_L(Super_L(x))))}",
"KHR*/THRA*/STP*/KPH*/KWR*": "{#Control_L(Alt_L(Shift_L(Super_L(y))))}",
"KHR*/THRA*/STP*/KPH*/STKPW*": "{#Control_L(Alt_L(Shift_L(Super_L(z))))}",
"KHR*/THRA*/STP*/KPH*/0": "{#Control_L(Alt_L(Shift_L(Super_L(0))))}",
"KHR*/THRA*/STP*/KPH*/1": "{#Control_L(Alt_L(Shift_L(Super_L(1))))}",
"KHR*/THRA*/STP*/KPH*/2": "{#Control_L(Alt_L(Shift_L(Super_L(2))))}",
"KHR*/THRA*/STP*/KPH*/3": "{#Control_L(Alt_L(Shift_L(Super_L(3))))}",
"KHR*/THRA*/STP*/KPH*/4": "{#Control_L(Alt_L(Shift_L(Super_L(4))))}",
"KHR*/THRA*/STP*/KPH*/5": "{#Control_L(Alt_L(Shift_L(Super_L(5))))}",
"KHR*/THRA*/STP*/KPH*/6": "{#Control_L(Alt_L(Shift_L(Super_L(6))))}",
"KHR*/THRA*/STP*/KPH*/7": "{#Control_L(Alt_L(Shift_L(Super_L(7))))}",
"KHR*/THRA*/STP*/KPH*/8": "{#Control_L(Alt_L(Shift_L(Super_L(8))))}",
"KHR*/THRA*/STP*/KPH*/9": "{#Control_L(Alt_L(Shift_L(Super_L(9))))}",
"KHR*/THRA*/STP*/KPH*/KH-FG": "{#Control_L(Alt_L(Shift_L(Super_L(grave))))}",
"KHR*/THRA*/STP*/KPH*/KW-BG": "{#Control_L(Alt_L(Shift_L(Super_L(comma))))}",
"KHR*/THRA*/STP*/KPH*/PR*EPB": "{#Control_L(Alt_L(Shift_L(Super_L(parenright))))}",
"KHR*/THRA*/STP*/KPH*/PREPB": "{#Control_L(Alt_L(Shift_L(Super_L(parenleft))))}",
"KHR*/THRA*/STP*/KPH*/PW*FP": "{#Control_L(Alt_L(Shift_L(Super_L(BackSpace))))}",
"KHR*/THRA*/STP*/KPH*/PWR*BGT": "{#Control_L(Alt_L(Shift_L(Super_L(bracketright))))}",
"KHR*/THRA*/STP*/KPH*/PWR-BGT": "{#Control_L(Alt_L(Shift_L(Super_L(bracketleft))))}",
"KHR*/THRA*/STP*/KPH*/R-R": "{#Control_L(Alt_L(Shift_L(Super_L(Return))))}",
"KHR*/THRA*/STP*/KPH*/S-P": "{#Control_L(Alt_L(Shift_L(Super_L(space))))}",
"KHR*/THRA*/STP*/KPH*/SP*S": "{#Control_L(Alt_L(Shift_L(Super_L())))}",
"KHR*/THRA*/STP*/KPH*/SPWHRAERB": "{#Control_L(Alt_L(Shift_L(Super_L(backslash))))}",
"KHR*/THRA*/STP*/KPH*/STPH-G": "{#Control_L(Alt_L(Shift_L(Super_L(Right))))}",
"KHR*/THRA*/STP*/KPH*/STPH-B": "{#Control_L(Alt_L(Shift_L(Super_L(Down))))}",
"KHR*/THRA*/STP*/KPH*/STPH-P": "{#Control_L(Alt_L(Shift_L(Super_L(Up))))}",
"KHR*/THRA*/STP*/KPH*/STPH-R": "{#Control_L(Alt_L(Shift_L(Super_L(Left))))}",
"KHR*/THRA*/STP*/KPH*/TA*B": "{#Control_L(Alt_L(Shift_L(Super_L(Tab))))}",
"KHR*/THRA*/STP*/KPH*/TKHRAO*ET": "{#Control_L(Alt_L(Shift_L(Super_L(Delete))))}",
"KHR*/THRA*/A*": "{#Control_L(Alt_L(a))}",
"KHR*/THRA*/PW*": "{#Control_L(Alt_L(b))}",
"KHR*/THRA*/KR*": "{#Control_L(Alt_L(c))}",
"KHR*/THRA*/TK*": "{#Control_L(Alt_L(d))}",
"KHR*/THRA*/*E": "{#Control_L(Alt_L(e))}",
"KHR*/THRA*/TP*": "{#Control_L(Alt_L(f))}",
"KHR*/THRA*/TKPW*": "{#Control_L(Alt_L(g))}",
"KHR*/THRA*/H*": "{#Control_L(Alt_L(h))}",
"KHR*/THRA*/*EU": "{#Control_L(Alt_L(i))}",
"KHR*/THRA*/SKWR*": "{#Control_L(Alt_L(j))}",
"KHR*/THRA*/K*": "{#Control_L(Alt_L(k))}",
"KHR*/THRA*/HR*": "{#Control_L(Alt_L(l))}",
"KHR*/THRA*/PH*": "{#Control_L(Alt_L(m))}",
"KHR*/THRA*/TPH*": "{#Control_L(Alt_L(n))}",
"KHR*/THRA*/O*": "{#Control_L(Alt_L(o))}",
"KHR*/THRA*/P*": "{#Control_L(Alt_L(p))}",
"KHR*/THRA*/KW*": "{#Control_L(Alt_L(q))}",
"KHR*/THRA*/R*": "{#Control_L(Alt_L(r))}",
"KHR*/THRA*/S*": "{#Control_L(Alt_L(s))}",
"KHR*/THRA*/T*": "{#Control_L(Alt_L(t))}",
"KHR*/THRA*/*U": "{#Control_L(Alt_L(u))}",
"KHR*/THRA*/SR*": "{#Control_L(Alt_L(v))}",
"KHR*/THRA*/W*": "{#Control_L(Alt_L(w))}",
"KHR*/THRA*/KP*": "{#Control_L(Alt_L(x))}",
"KHR*/THRA*/KWR*": "{#Control_L(Alt_L(y))}",
"KHR*/THRA*/STKPW*": "{#Control_L(Alt_L(z))}",
"KHR*/THRA*/0": "{#Control_L(Alt_L(0))}",
"KHR*/THRA*/1": "{#Control_L(Alt_L(1))}",
"KHR*/THRA*/2": "{#Control_L(Alt_L(2))}",
"KHR*/THRA*/3": "{#Control_L(Alt_L(3))}",
"KHR*/THRA*/4": "{#Control_L(Alt_L(4))}",
"KHR*/THRA*/5": "{#Control_L(Alt_L(5))}",
"KHR*/THRA*/6": "{#Control_L(Alt_L(6))}",
"KHR*/THRA*/7": "{#Control_L(Alt_L(7))}",
"KHR*/THRA*/8": "{#Control_L(Alt_L(8))}",
"KHR*/THRA*/9": "{#Control_L(Alt_L(9))}",
"KHR*/THRA*/KH-FG": "{#Control_L(Alt_L(grave))}",
"KHR*/THRA*/KW-BG": "{#Control_L(Alt_L(comma))}",
"KHR*/THRA*/PR*EPB": "{#Control_L(Alt_L(parenright))}",
"KHR*/THRA*/PREPB": "{#Control_L(Alt_L(parenleft))}",
"KHR*/THRA*/PW*FP": "{#Control_L(Alt_L(BackSpace))}",
"KHR*/THRA*/PWR*BGT": "{#Control_L(Alt_L(bracketright))}",
"KHR*/THRA*/PWR-BGT": "{#Control_L(Alt_L(bracketleft))}",
"KHR*/THRA*/R-R": "{#Control_L(Alt_L(Return))}",
"KHR*/THRA*/S-P": "{#Control_L(Alt_L(space))}",
"KHR*/THRA*/SP*S": "{#Control_L(Alt_L())}",
"KHR*/THRA*/SPWHRAERB": "{#Control_L(Alt_L(backslash))}",
"KHR*/THRA*/STPH-G": "{#Control_L(Alt_L(Right))}",
"KHR*/THRA*/STPH-B": "{#Control_L(Alt_L(Down))}",
"KHR*/THRA*/STPH-P": "{#Control_L(Alt_L(Up))}",
"KHR*/THRA*/STPH-R": "{#Control_L(Alt_L(Left))}",
"KHR*/THRA*/TA*B": "{#Control_L(Alt_L(Tab))}",
"KHR*/THRA*/TKHRAO*ET": "{#Control_L(Alt_L(Delete))}",
"KHR*/KPH*/THRA*/A*": "{#Control_L(Super_L(Alt_L(a)))}",
"KHR*/KPH*/THRA*/PW*": "{#Control_L(Super_L(Alt_L(b)))}",
"KHR*/KPH*/THRA*/KR*": "{#Control_L(Super_L(Alt_L(c)))}",
"KHR*/KPH*/THRA*/TK*": "{#Control_L(Super_L(Alt_L(d)))}",
"KHR*/KPH*/THRA*/*E": "{#Control_L(Super_L(Alt_L(e)))}",
"KHR*/KPH*/THRA*/TP*": "{#Control_L(Super_L(Alt_L(f)))}",
"KHR*/KPH*/THRA*/TKPW*": "{#Control_L(Super_L(Alt_L(g)))}",
"KHR*/KPH*/THRA*/H*": "{#Control_L(Super_L(Alt_L(h)))}",
"KHR*/KPH*/THRA*/*EU": "{#Control_L(Super_L(Alt_L(i)))}",
"KHR*/KPH*/THRA*/SKWR*": "{#Control_L(Super_L(Alt_L(j)))}",
"KHR*/KPH*/THRA*/K*": "{#Control_L(Super_L(Alt_L(k)))}",
"KHR*/KPH*/THRA*/HR*": "{#Control_L(Super_L(Alt_L(l)))}",
"KHR*/KPH*/THRA*/PH*": "{#Control_L(Super_L(Alt_L(m)))}",
"KHR*/KPH*/THRA*/TPH*": "{#Control_L(Super_L(Alt_L(n)))}",
"KHR*/KPH*/THRA*/O*": "{#Control_L(Super_L(Alt_L(o)))}",
"KHR*/KPH*/THRA*/P*": "{#Control_L(Super_L(Alt_L(p)))}",
"KHR*/KPH*/THRA*/KW*": "{#Control_L(Super_L(Alt_L(q)))}",
"KHR*/KPH*/THRA*/R*": "{#Control_L(Super_L(Alt_L(r)))}",
"KHR*/KPH*/THRA*/S*": "{#Control_L(Super_L(Alt_L(s)))}",
"KHR*/KPH*/THRA*/T*": "{#Control_L(Super_L(Alt_L(t)))}",
"KHR*/KPH*/THRA*/*U": "{#Control_L(Super_L(Alt_L(u)))}",
"KHR*/KPH*/THRA*/SR*": "{#Control_L(Super_L(Alt_L(v)))}",
"KHR*/KPH*/THRA*/W*": "{#Control_L(Super_L(Alt_L(w)))}",
"KHR*/KPH*/THRA*/KP*": "{#Control_L(Super_L(Alt_L(x)))}",
"KHR*/KPH*/THRA*/KWR*": "{#Control_L(Super_L(Alt_L(y)))}",
"KHR*/KPH*/THRA*/STKPW*": "{#Control_L(Super_L(Alt_L(z)))}",
"KHR*/KPH*/THRA*/0": "{#Control_L(Super_L(Alt_L(0)))}",
"KHR*/KPH*/THRA*/1": "{#Control_L(Super_L(Alt_L(1)))}",
"KHR*/KPH*/THRA*/2": "{#Control_L(Super_L(Alt_L(2)))}",
"KHR*/KPH*/THRA*/3": "{#Control_L(Super_L(Alt_L(3)))}",
"KHR*/KPH*/THRA*/4": "{#Control_L(Super_L(Alt_L(4)))}",
"KHR*/KPH*/THRA*/5": "{#Control_L(Super_L(Alt_L(5)))}",
"KHR*/KPH*/THRA*/6": "{#Control_L(Super_L(Alt_L(6)))}",
"KHR*/KPH*/THRA*/7": "{#Control_L(Super_L(Alt_L(7)))}",
"KHR*/KPH*/THRA*/8": "{#Control_L(Super_L(Alt_L(8)))}",
"KHR*/KPH*/THRA*/9": "{#Control_L(Super_L(Alt_L(9)))}",
"KHR*/KPH*/THRA*/KH-FG": "{#Control_L(Super_L(Alt_L(grave)))}",
"KHR*/KPH*/THRA*/KW-BG": "{#Control_L(Super_L(Alt_L(comma)))}",
"KHR*/KPH*/THRA*/PR*EPB": "{#Control_L(Super_L(Alt_L(parenright)))}",
"KHR*/KPH*/THRA*/PREPB": "{#Control_L(Super_L(Alt_L(parenleft)))}",
"KHR*/KPH*/THRA*/PW*FP": "{#Control_L(Super_L(Alt_L(BackSpace)))}",
"KHR*/KPH*/THRA*/PWR*BGT": "{#Control_L(Super_L(Alt_L(bracketright)))}",
"KHR*/KPH*/THRA*/PWR-BGT": "{#Control_L(Super_L(Alt_L(bracketleft)))}",
"KHR*/KPH*/THRA*/R-R": "{#Control_L(Super_L(Alt_L(Return)))}",
"KHR*/KPH*/THRA*/S-P": "{#Control_L(Super_L(Alt_L(space)))}",
"KHR*/KPH*/THRA*/SP*S": "{#Control_L(Super_L(Alt_L()))}",
"KHR*/KPH*/THRA*/SPWHRAERB": "{#Control_L(Super_L(Alt_L(backslash)))}",
"KHR*/KPH*/THRA*/STPH-G": "{#Control_L(Super_L(Alt_L(Right)))}",
"KHR*/KPH*/THRA*/STPH-B": "{#Control_L(Super_L(Alt_L(Down)))}",
"KHR*/KPH*/THRA*/STPH-P": "{#Control_L(Super_L(Alt_L(Up)))}",
"KHR*/KPH*/THRA*/STPH-R": "{#Control_L(Super_L(Alt_L(Left)))}",
"KHR*/KPH*/THRA*/TA*B": "{#Control_L(Super_L(Alt_L(Tab)))}",
"KHR*/KPH*/THRA*/TKHRAO*ET": "{#Control_L(Super_L(Alt_L(Delete)))}",
"KHR*/KPH*/A*": "{#Control_L(Super_L(a))}",
"KHR*/KPH*/PW*": "{#Control_L(Super_L(b))}",
"KHR*/KPH*/KR*": "{#Control_L(Super_L(c))}",
"KHR*/KPH*/TK*": "{#Control_L(Super_L(d))}",
"KHR*/KPH*/*E": "{#Control_L(Super_L(e))}",
"KHR*/KPH*/TP*": "{#Control_L(Super_L(f))}",
"KHR*/KPH*/TKPW*": "{#Control_L(Super_L(g))}",
"KHR*/KPH*/H*": "{#Control_L(Super_L(h))}",
"KHR*/KPH*/*EU": "{#Control_L(Super_L(i))}",
"KHR*/KPH*/SKWR*": "{#Control_L(Super_L(j))}",
"KHR*/KPH*/K*": "{#Control_L(Super_L(k))}",
"KHR*/KPH*/HR*": "{#Control_L(Super_L(l))}",
"KHR*/KPH*/PH*": "{#Control_L(Super_L(m))}",
"KHR*/KPH*/TPH*": "{#Control_L(Super_L(n))}",
"KHR*/KPH*/O*": "{#Control_L(Super_L(o))}",
"KHR*/KPH*/P*": "{#Control_L(Super_L(p))}",
"KHR*/KPH*/KW*": "{#Control_L(Super_L(q))}",
"KHR*/KPH*/R*": "{#Control_L(Super_L(r))}",
"KHR*/KPH*/S*": "{#Control_L(Super_L(s))}",
"KHR*/KPH*/T*": "{#Control_L(Super_L(t))}",
"KHR*/KPH*/*U": "{#Control_L(Super_L(u))}",
"KHR*/KPH*/SR*": "{#Control_L(Super_L(v))}",
"KHR*/KPH*/W*": "{#Control_L(Super_L(w))}",
"KHR*/KPH*/KP*": "{#Control_L(Super_L(x))}",
"KHR*/KPH*/KWR*": "{#Control_L(Super_L(y))}",
"KHR*/KPH*/STKPW*": "{#Control_L(Super_L(z))}",
"KHR*/KPH*/0": "{#Control_L(Super_L(0))}",
"KHR*/KPH*/1": "{#Control_L(Super_L(1))}",
"KHR*/KPH*/2": "{#Control_L(Super_L(2))}",
"KHR*/KPH*/3": "{#Control_L(Super_L(3))}",
"KHR*/KPH*/4": "{#Control_L(Super_L(4))}",
"KHR*/KPH*/5": "{#Control_L(Super_L(5))}",
"KHR*/KPH*/6": "{#Control_L(Super_L(6))}",
"KHR*/KPH*/7": "{#Control_L(Super_L(7))}",
"KHR*/KPH*/8": "{#Control_L(Super_L(8))}",
"KHR*/KPH*/9": "{#Control_L(Super_L(9))}",
"KHR*/KPH*/KH-FG": "{#Control_L(Super_L(grave))}",
"KHR*/KPH*/KW-BG": "{#Control_L(Super_L(comma))}",
"KHR*/KPH*/PR*EPB": "{#Control_L(Super_L(parenright))}",
"KHR*/KPH*/PREPB": "{#Control_L(Super_L(parenleft))}",
"KHR*/KPH*/PW*FP": "{#Control_L(Super_L(BackSpace))}",
"KHR*/KPH*/PWR*BGT": "{#Control_L(Super_L(bracketright))}",
"KHR*/KPH*/PWR-BGT": "{#Control_L(Super_L(bracketleft))}",
"KHR*/KPH*/R-R": "{#Control_L(Super_L(Return))}",
"KHR*/KPH*/S-P": "{#Control_L(Super_L(space))}",
"KHR*/KPH*/SP*S": "{#Control_L(Super_L())}",
"KHR*/KPH*/SPWHRAERB": "{#Control_L(Super_L(backslash))}",
"KHR*/KPH*/STPH-G": "{#Control_L(Super_L(Right))}",
"KHR*/KPH*/STPH-B": "{#Control_L(Super_L(Down))}",
"KHR*/KPH*/STPH-P": "{#Control_L(Super_L(Up))}",
"KHR*/KPH*/STPH-R": "{#Control_L(Super_L(Left))}",
"KHR*/KPH*/TA*B": "{#Control_L(Super_L(Tab))}",
"KHR*/KPH*/TKHRAO*ET": "{#Control_L(Super_L(Delete))}",
"KHR*/THRA*/KPH*/A*": "{#Control_L(Alt_L(Super_L(a)))}",
"KHR*/THRA*/KPH*/PW*": "{#Control_L(Alt_L(Super_L(b)))}",
"KHR*/THRA*/KPH*/KR*": "{#Control_L(Alt_L(Super_L(c)))}",
"KHR*/THRA*/KPH*/TK*": "{#Control_L(Alt_L(Super_L(d)))}",
"KHR*/THRA*/KPH*/*E": "{#Control_L(Alt_L(Super_L(e)))}",
"KHR*/THRA*/KPH*/TP*": "{#Control_L(Alt_L(Super_L(f)))}",
"KHR*/THRA*/KPH*/TKPW*": "{#Control_L(Alt_L(Super_L(g)))}",
"KHR*/THRA*/KPH*/H*": "{#Control_L(Alt_L(Super_L(h)))}",
"KHR*/THRA*/KPH*/*EU": "{#Control_L(Alt_L(Super_L(i)))}",
"KHR*/THRA*/KPH*/SKWR*": "{#Control_L(Alt_L(Super_L(j)))}",
"KHR*/THRA*/KPH*/K*": "{#Control_L(Alt_L(Super_L(k)))}",
"KHR*/THRA*/KPH*/HR*": "{#Control_L(Alt_L(Super_L(l)))}",
"KHR*/THRA*/KPH*/PH*": "{#Control_L(Alt_L(Super_L(m)))}",
"KHR*/THRA*/KPH*/TPH*": "{#Control_L(Alt_L(Super_L(n)))}",
"KHR*/THRA*/KPH*/O*": "{#Control_L(Alt_L(Super_L(o)))}",
"KHR*/THRA*/KPH*/P*": "{#Control_L(Alt_L(Super_L(p)))}",
"KHR*/THRA*/KPH*/KW*": "{#Control_L(Alt_L(Super_L(q)))}",
"KHR*/THRA*/KPH*/R*": "{#Control_L(Alt_L(Super_L(r)))}",
"KHR*/THRA*/KPH*/S*": "{#Control_L(Alt_L(Super_L(s)))}",
"KHR*/THRA*/KPH*/T*": "{#Control_L(Alt_L(Super_L(t)))}",
"KHR*/THRA*/KPH*/*U": "{#Control_L(Alt_L(Super_L(u)))}",
"KHR*/THRA*/KPH*/SR*": "{#Control_L(Alt_L(Super_L(v)))}",
"KHR*/THRA*/KPH*/W*": "{#Control_L(Alt_L(Super_L(w)))}",
"KHR*/THRA*/KPH*/KP*": "{#Control_L(Alt_L(Super_L(x)))}",
"KHR*/THRA*/KPH*/KWR*": "{#Control_L(Alt_L(Super_L(y)))}",
"KHR*/THRA*/KPH*/STKPW*": "{#Control_L(Alt_L(Super_L(z)))}",
"KHR*/THRA*/KPH*/0": "{#Control_L(Alt_L(Super_L(0)))}",
"KHR*/THRA*/KPH*/1": "{#Control_L(Alt_L(Super_L(1)))}",
"KHR*/THRA*/KPH*/2": "{#Control_L(Alt_L(Super_L(2)))}",
"KHR*/THRA*/KPH*/3": "{#Control_L(Alt_L(Super_L(3)))}",
"KHR*/THRA*/KPH*/4": "{#Control_L(Alt_L(Super_L(4)))}",
"KHR*/THRA*/KPH*/5": "{#Control_L(Alt_L(Super_L(5)))}",
"KHR*/THRA*/KPH*/6": "{#Control_L(Alt_L(Super_L(6)))}",
"KHR*/THRA*/KPH*/7": "{#Control_L(Alt_L(Super_L(7)))}",
"KHR*/THRA*/KPH*/8": "{#Control_L(Alt_L(Super_L(8)))}",
"KHR*/THRA*/KPH*/9": "{#Control_L(Alt_L(Super_L(9)))}",
"KHR*/THRA*/KPH*/KH-FG": "{#Control_L(Alt_L(Super_L(grave)))}",
"KHR*/THRA*/KPH*/KW-BG": "{#Control_L(Alt_L(Super_L(comma)))}",
"KHR*/THRA*/KPH*/PR*EPB": "{#Control_L(Alt_L(Super_L(parenright)))}",
"KHR*/THRA*/KPH*/PREPB": "{#Control_L(Alt_L(Super_L(parenleft)))}",
"KHR*/THRA*/KPH*/PW*FP": "{#Control_L(Alt_L(Super_L(BackSpace)))}",
"KHR*/THRA*/KPH*/PWR*BGT": "{#Control_L(Alt_L(Super_L(bracketright)))}",
"KHR*/THRA*/KPH*/PWR-BGT": "{#Control_L(Alt_L(Super_L(bracketleft)))}",
"KHR*/THRA*/KPH*/R-R": "{#Control_L(Alt_L(Super_L(Return)))}",
"KHR*/THRA*/KPH*/S-P": "{#Control_L(Alt_L(Super_L(space)))}",
"KHR*/THRA*/KPH*/SP*S": "{#Control_L(Alt_L(Super_L()))}",
"KHR*/THRA*/KPH*/SPWHRAERB": "{#Control_L(Alt_L(Super_L(backslash)))}",
"KHR*/THRA*/KPH*/STPH-G": "{#Control_L(Alt_L(Super_L(Right)))}",
"KHR*/THRA*/KPH*/STPH-B": "{#Control_L(Alt_L(Super_L(Down)))}",
"KHR*/THRA*/KPH*/STPH-P": "{#Control_L(Alt_L(Super_L(Up)))}",
"KHR*/THRA*/KPH*/STPH-R": "{#Control_L(Alt_L(Super_L(Left)))}",
"KHR*/THRA*/KPH*/TA*B": "{#Control_L(Alt_L(Super_L(Tab)))}",
"KHR*/THRA*/KPH*/TKHRAO*ET": "{#Control_L(Alt_L(Super_L(Delete)))}",
"KHR*/STP*/THRA*/A*": "{#Control_L(Shift_L(Alt_L(a)))}",
"KHR*/STP*/THRA*/PW*": "{#Control_L(Shift_L(Alt_L(b)))}",
"KHR*/STP*/THRA*/KR*": "{#Control_L(Shift_L(Alt_L(c)))}",
"KHR*/STP*/THRA*/TK*": "{#Control_L(Shift_L(Alt_L(d)))}",
"KHR*/STP*/THRA*/*E": "{#Control_L(Shift_L(Alt_L(e)))}",
"KHR*/STP*/THRA*/TP*": "{#Control_L(Shift_L(Alt_L(f)))}",
"KHR*/STP*/THRA*/TKPW*": "{#Control_L(Shift_L(Alt_L(g)))}",
"KHR*/STP*/THRA*/H*": "{#Control_L(Shift_L(Alt_L(h)))}",
"KHR*/STP*/THRA*/*EU": "{#Control_L(Shift_L(Alt_L(i)))}",
"KHR*/STP*/THRA*/SKWR*": "{#Control_L(Shift_L(Alt_L(j)))}",
"KHR*/STP*/THRA*/K*": "{#Control_L(Shift_L(Alt_L(k)))}",
"KHR*/STP*/THRA*/HR*": "{#Control_L(Shift_L(Alt_L(l)))}",
"KHR*/STP*/THRA*/PH*": "{#Control_L(Shift_L(Alt_L(m)))}",
"KHR*/STP*/THRA*/TPH*": "{#Control_L(Shift_L(Alt_L(n)))}",
"KHR*/STP*/THRA*/O*": "{#Control_L(Shift_L(Alt_L(o)))}",
"KHR*/STP*/THRA*/P*": "{#Control_L(Shift_L(Alt_L(p)))}",
"KHR*/STP*/THRA*/KW*": "{#Control_L(Shift_L(Alt_L(q)))}",
"KHR*/STP*/THRA*/R*": "{#Control_L(Shift_L(Alt_L(r)))}",
"KHR*/STP*/THRA*/S*": "{#Control_L(Shift_L(Alt_L(s)))}",
"KHR*/STP*/THRA*/T*": "{#Control_L(Shift_L(Alt_L(t)))}",
"KHR*/STP*/THRA*/*U": "{#Control_L(Shift_L(Alt_L(u)))}",
"KHR*/STP*/THRA*/SR*": "{#Control_L(Shift_L(Alt_L(v)))}",
"KHR*/STP*/THRA*/W*": "{#Control_L(Shift_L(Alt_L(w)))}",
"KHR*/STP*/THRA*/KP*": "{#Control_L(Shift_L(Alt_L(x)))}",
"KHR*/STP*/THRA*/KWR*": "{#Control_L(Shift_L(Alt_L(y)))}",
"KHR*/STP*/THRA*/STKPW*": "{#Control_L(Shift_L(Alt_L(z)))}",
"KHR*/STP*/THRA*/0": "{#Control_L(Shift_L(Alt_L(0)))}",
"KHR*/STP*/THRA*/1": "{#Control_L(Shift_L(Alt_L(1)))}",
"KHR*/STP*/THRA*/2": "{#Control_L(Shift_L(Alt_L(2)))}",
"KHR*/STP*/THRA*/3": "{#Control_L(Shift_L(Alt_L(3)))}",
"KHR*/STP*/THRA*/4": "{#Control_L(Shift_L(Alt_L(4)))}",
"KHR*/STP*/THRA*/5": "{#Control_L(Shift_L(Alt_L(5)))}",
"KHR*/STP*/THRA*/6": "{#Control_L(Shift_L(Alt_L(6)))}",
"KHR*/STP*/THRA*/7": "{#Control_L(Shift_L(Alt_L(7)))}",
"KHR*/STP*/THRA*/8": "{#Control_L(Shift_L(Alt_L(8)))}",
"KHR*/STP*/THRA*/9": "{#Control_L(Shift_L(Alt_L(9)))}",
"KHR*/STP*/THRA*/KH-FG": "{#Control_L(Shift_L(Alt_L(grave)))}",
"KHR*/STP*/THRA*/KW-BG": "{#Control_L(Shift_L(Alt_L(comma)))}",
"KHR*/STP*/THRA*/PR*EPB": "{#Control_L(Shift_L(Alt_L(parenright)))}",
"KHR*/STP*/THRA*/PREPB": "{#Control_L(Shift_L(Alt_L(parenleft)))}",
"KHR*/STP*/THRA*/PW*FP": "{#Control_L(Shift_L(Alt_L(BackSpace)))}",
"KHR*/STP*/THRA*/PWR*BGT": "{#Control_L(Shift_L(Alt_L(bracketright)))}",
"KHR*/STP*/THRA*/PWR-BGT": "{#Control_L(Shift_L(Alt_L(bracketleft)))}",
"KHR*/STP*/THRA*/R-R": "{#Control_L(Shift_L(Alt_L(Return)))}",
"KHR*/STP*/THRA*/S-P": "{#Control_L(Shift_L(Alt_L(space)))}",
"KHR*/STP*/THRA*/SP*S": "{#Control_L(Shift_L(Alt_L()))}",
"KHR*/STP*/THRA*/SPWHRAERB": "{#Control_L(Shift_L(Alt_L(backslash)))}",
"KHR*/STP*/THRA*/STPH-G": "{#Control_L(Shift_L(Alt_L(Right)))}",
"KHR*/STP*/THRA*/STPH-B": "{#Control_L(Shift_L(Alt_L(Down)))}",
"KHR*/STP*/THRA*/STPH-P": "{#Control_L(Shift_L(Alt_L(Up)))}",
"KHR*/STP*/THRA*/STPH-R": "{#Control_L(Shift_L(Alt_L(Left)))}",
"KHR*/STP*/THRA*/TA*B": "{#Control_L(Shift_L(Alt_L(Tab)))}",
"KHR*/STP*/THRA*/TKHRAO*ET": "{#Control_L(Shift_L(Alt_L(Delete)))}",
"KHR*/STP*/KPH*/THRA*/A*": "{#Control_L(Shift_L(Super_L(Alt_L(a))))}",
"KHR*/STP*/KPH*/THRA*/PW*": "{#Control_L(Shift_L(Super_L(Alt_L(b))))}",
"KHR*/STP*/KPH*/THRA*/KR*": "{#Control_L(Shift_L(Super_L(Alt_L(c))))}",
"KHR*/STP*/KPH*/THRA*/TK*": "{#Control_L(Shift_L(Super_L(Alt_L(d))))}",
"KHR*/STP*/KPH*/THRA*/*E": "{#Control_L(Shift_L(Super_L(Alt_L(e))))}",
"KHR*/STP*/KPH*/THRA*/TP*": "{#Control_L(Shift_L(Super_L(Alt_L(f))))}",
"KHR*/STP*/KPH*/THRA*/TKPW*": "{#Control_L(Shift_L(Super_L(Alt_L(g))))}",
"KHR*/STP*/KPH*/THRA*/H*": "{#Control_L(Shift_L(Super_L(Alt_L(h))))}",
"KHR*/STP*/KPH*/THRA*/*EU": "{#Control_L(Shift_L(Super_L(Alt_L(i))))}",
"KHR*/STP*/KPH*/THRA*/SKWR*": "{#Control_L(Shift_L(Super_L(Alt_L(j))))}",
"KHR*/STP*/KPH*/THRA*/K*": "{#Control_L(Shift_L(Super_L(Alt_L(k))))}",
"KHR*/STP*/KPH*/THRA*/HR*": "{#Control_L(Shift_L(Super_L(Alt_L(l))))}",
"KHR*/STP*/KPH*/THRA*/PH*": "{#Control_L(Shift_L(Super_L(Alt_L(m))))}",
"KHR*/STP*/KPH*/THRA*/TPH*": "{#Control_L(Shift_L(Super_L(Alt_L(n))))}",
"KHR*/STP*/KPH*/THRA*/O*": "{#Control_L(Shift_L(Super_L(Alt_L(o))))}",
"KHR*/STP*/KPH*/THRA*/P*": "{#Control_L(Shift_L(Super_L(Alt_L(p))))}",
"KHR*/STP*/KPH*/THRA*/KW*": "{#Control_L(Shift_L(Super_L(Alt_L(q))))}",
"KHR*/STP*/KPH*/THRA*/R*": "{#Control_L(Shift_L(Super_L(Alt_L(r))))}",
"KHR*/STP*/KPH*/THRA*/S*": "{#Control_L(Shift_L(Super_L(Alt_L(s))))}",
"KHR*/STP*/KPH*/THRA*/T*": "{#Control_L(Shift_L(Super_L(Alt_L(t))))}",
"KHR*/STP*/KPH*/THRA*/*U": "{#Control_L(Shift_L(Super_L(Alt_L(u))))}",
"KHR*/STP*/KPH*/THRA*/SR*": "{#Control_L(Shift_L(Super_L(Alt_L(v))))}",
"KHR*/STP*/KPH*/THRA*/W*": "{#Control_L(Shift_L(Super_L(Alt_L(w))))}",
"KHR*/STP*/KPH*/THRA*/KP*": "{#Control_L(Shift_L(Super_L(Alt_L(x))))}",
"KHR*/STP*/KPH*/THRA*/KWR*": "{#Control_L(Shift_L(Super_L(Alt_L(y))))}",
"KHR*/STP*/KPH*/THRA*/STKPW*": "{#Control_L(Shift_L(Super_L(Alt_L(z))))}",
"KHR*/STP*/KPH*/THRA*/0": "{#Control_L(Shift_L(Super_L(Alt_L(0))))}",
"KHR*/STP*/KPH*/THRA*/1": "{#Control_L(Shift_L(Super_L(Alt_L(1))))}",
"KHR*/STP*/KPH*/THRA*/2": "{#Control_L(Shift_L(Super_L(Alt_L(2))))}",
"KHR*/STP*/KPH*/THRA*/3": "{#Control_L(Shift_L(Super_L(Alt_L(3))))}",
"KHR*/STP*/KPH*/THRA*/4": "{#Control_L(Shift_L(Super_L(Alt_L(4))))}",
"KHR*/STP*/KPH*/THRA*/5": "{#Control_L(Shift_L(Super_L(Alt_L(5))))}",
"KHR*/STP*/KPH*/THRA*/6": "{#Control_L(Shift_L(Super_L(Alt_L(6))))}",
"KHR*/STP*/KPH*/THRA*/7": "{#Control_L(Shift_L(Super_L(Alt_L(7))))}",
"KHR*/STP*/KPH*/THRA*/8": "{#Control_L(Shift_L(Super_L(Alt_L(8))))}",
"KHR*/STP*/KPH*/THRA*/9": "{#Control_L(Shift_L(Super_L(Alt_L(9))))}",
"KHR*/STP*/KPH*/THRA*/KH-FG": "{#Control_L(Shift_L(Super_L(Alt_L(grave))))}",
"KHR*/STP*/KPH*/THRA*/KW-BG": "{#Control_L(Shift_L(Super_L(Alt_L(comma))))}",
"KHR*/STP*/KPH*/THRA*/PR*EPB": "{#Control_L(Shift_L(Super_L(Alt_L(parenright))))}",
"KHR*/STP*/KPH*/THRA*/PREPB": "{#Control_L(Shift_L(Super_L(Alt_L(parenleft))))}",
"KHR*/STP*/KPH*/THRA*/PW*FP": "{#Control_L(Shift_L(Super_L(Alt_L(BackSpace))))}",
"KHR*/STP*/KPH*/THRA*/PWR*BGT": "{#Control_L(Shift_L(Super_L(Alt_L(bracketright))))}",
"KHR*/STP*/KPH*/THRA*/PWR-BGT": "{#Control_L(Shift_L(Super_L(Alt_L(bracketleft))))}",
"KHR*/STP*/KPH*/THRA*/R-R": "{#Control_L(Shift_L(Super_L(Alt_L(Return))))}",
"KHR*/STP*/KPH*/THRA*/S-P": "{#Control_L(Shift_L(Super_L(Alt_L(space))))}",
"KHR*/STP*/KPH*/THRA*/SP*S": "{#Control_L(Shift_L(Super_L(Alt_L())))}",
"KHR*/STP*/KPH*/THRA*/SPWHRAERB": "{#Control_L(Shift_L(Super_L(Alt_L(backslash))))}",
"KHR*/STP*/KPH*/THRA*/STPH-G": "{#Control_L(Shift_L(Super_L(Alt_L(Right))))}",
"KHR*/STP*/KPH*/THRA*/STPH-B": "{#Control_L(Shift_L(Super_L(Alt_L(Down))))}",
"KHR*/STP*/KPH*/THRA*/STPH-P": "{#Control_L(Shift_L(Super_L(Alt_L(Up))))}",
"KHR*/STP*/KPH*/THRA*/STPH-R": "{#Control_L(Shift_L(Super_L(Alt_L(Left))))}",
"KHR*/STP*/KPH*/THRA*/TA*B": "{#Control_L(Shift_L(Super_L(Alt_L(Tab))))}",
"KHR*/STP*/KPH*/THRA*/TKHRAO*ET": "{#Control_L(Shift_L(Super_L(Alt_L(Delete))))}",
"KHR*/STP*/KPH*/A*": "{#Control_L(Shift_L(Super_L(a)))}",
"KHR*/STP*/KPH*/PW*": "{#Control_L(Shift_L(Super_L(b)))}",
"KHR*/STP*/KPH*/KR*": "{#Control_L(Shift_L(Super_L(c)))}",
"KHR*/STP*/KPH*/TK*": "{#Control_L(Shift_L(Super_L(d)))}",
"KHR*/STP*/KPH*/*E": "{#Control_L(Shift_L(Super_L(e)))}",
"KHR*/STP*/KPH*/TP*": "{#Control_L(Shift_L(Super_L(f)))}",
"KHR*/STP*/KPH*/TKPW*": "{#Control_L(Shift_L(Super_L(g)))}",
"KHR*/STP*/KPH*/H*": "{#Control_L(Shift_L(Super_L(h)))}",
"KHR*/STP*/KPH*/*EU": "{#Control_L(Shift_L(Super_L(i)))}",
"KHR*/STP*/KPH*/SKWR*": "{#Control_L(Shift_L(Super_L(j)))}",
"KHR*/STP*/KPH*/K*": "{#Control_L(Shift_L(Super_L(k)))}",
"KHR*/STP*/KPH*/HR*": "{#Control_L(Shift_L(Super_L(l)))}",
"KHR*/STP*/KPH*/PH*": "{#Control_L(Shift_L(Super_L(m)))}",
"KHR*/STP*/KPH*/TPH*": "{#Control_L(Shift_L(Super_L(n)))}",
"KHR*/STP*/KPH*/O*": "{#Control_L(Shift_L(Super_L(o)))}",
"KHR*/STP*/KPH*/P*": "{#Control_L(Shift_L(Super_L(p)))}",
"KHR*/STP*/KPH*/KW*": "{#Control_L(Shift_L(Super_L(q)))}",
"KHR*/STP*/KPH*/R*": "{#Control_L(Shift_L(Super_L(r)))}",
"KHR*/STP*/KPH*/S*": "{#Control_L(Shift_L(Super_L(s)))}",
"KHR*/STP*/KPH*/T*": "{#Control_L(Shift_L(Super_L(t)))}",
"KHR*/STP*/KPH*/*U": "{#Control_L(Shift_L(Super_L(u)))}",
"KHR*/STP*/KPH*/SR*": "{#Control_L(Shift_L(Super_L(v)))}",
"KHR*/STP*/KPH*/W*": "{#Control_L(Shift_L(Super_L(w)))}",
"KHR*/STP*/KPH*/KP*": "{#Control_L(Shift_L(Super_L(x)))}",
"KHR*/STP*/KPH*/KWR*": "{#Control_L(Shift_L(Super_L(y)))}",
"KHR*/STP*/KPH*/STKPW*": "{#Control_L(Shift_L(Super_L(z)))}",
"KHR*/STP*/KPH*/0": "{#Control_L(Shift_L(Super_L(0)))}",
"KHR*/STP*/KPH*/1": "{#Control_L(Shift_L(Super_L(1)))}",
"KHR*/STP*/KPH*/2": "{#Control_L(Shift_L(Super_L(2)))}",
"KHR*/STP*/KPH*/3": "{#Control_L(Shift_L(Super_L(3)))}",
"KHR*/STP*/KPH*/4": "{#Control_L(Shift_L(Super_L(4)))}",
"KHR*/STP*/KPH*/5": "{#Control_L(Shift_L(Super_L(5)))}",
"KHR*/STP*/KPH*/6": "{#Control_L(Shift_L(Super_L(6)))}",
"KHR*/STP*/KPH*/7": "{#Control_L(Shift_L(Super_L(7)))}",
"KHR*/STP*/KPH*/8": "{#Control_L(Shift_L(Super_L(8)))}",
"KHR*/STP*/KPH*/9": "{#Control_L(Shift_L(Super_L(9)))}",
"KHR*/STP*/KPH*/KH-FG": "{#Control_L(Shift_L(Super_L(grave)))}",
"KHR*/STP*/KPH*/KW-BG": "{#Control_L(Shift_L(Super_L(comma)))}",
"KHR*/STP*/KPH*/PR*EPB": "{#Control_L(Shift_L(Super_L(parenright)))}",
"KHR*/STP*/KPH*/PREPB": "{#Control_L(Shift_L(Super_L(parenleft)))}",
"KHR*/STP*/KPH*/PW*FP": "{#Control_L(Shift_L(Super_L(BackSpace)))}",
"KHR*/STP*/KPH*/PWR*BGT": "{#Control_L(Shift_L(Super_L(bracketright)))}",
"KHR*/STP*/KPH*/PWR-BGT": "{#Control_L(Shift_L(Super_L(bracketleft)))}",
"KHR*/STP*/KPH*/R-R": "{#Control_L(Shift_L(Super_L(Return)))}",
"KHR*/STP*/KPH*/S-P": "{#Control_L(Shift_L(Super_L(space)))}",
"KHR*/STP*/KPH*/SP*S": "{#Control_L(Shift_L(Super_L()))}",
"KHR*/STP*/KPH*/SPWHRAERB": "{#Control_L(Shift_L(Super_L(backslash)))}",
"KHR*/STP*/KPH*/STPH-G": "{#Control_L(Shift_L(Super_L(Right)))}",
"KHR*/STP*/KPH*/STPH-B": "{#Control_L(Shift_L(Super_L(Down)))}",
"KHR*/STP*/KPH*/STPH-P": "{#Control_L(Shift_L(Super_L(Up)))}",
"KHR*/STP*/KPH*/STPH-R": "{#Control_L(Shift_L(Super_L(Left)))}",
"KHR*/STP*/KPH*/TA*B": "{#Control_L(Shift_L(Super_L(Tab)))}",
"KHR*/STP*/KPH*/TKHRAO*ET": "{#Control_L(Shift_L(Super_L(Delete)))}",
"KHR*/STP*/THRA*/KPH*/A*": "{#Control_L(Shift_L(Alt_L(Super_L(a))))}",
"KHR*/STP*/THRA*/KPH*/PW*": "{#Control_L(Shift_L(Alt_L(Super_L(b))))}",
"KHR*/STP*/THRA*/KPH*/KR*": "{#Control_L(Shift_L(Alt_L(Super_L(c))))}",
"KHR*/STP*/THRA*/KPH*/TK*": "{#Control_L(Shift_L(Alt_L(Super_L(d))))}",
"KHR*/STP*/THRA*/KPH*/*E": "{#Control_L(Shift_L(Alt_L(Super_L(e))))}",
"KHR*/STP*/THRA*/KPH*/TP*": "{#Control_L(Shift_L(Alt_L(Super_L(f))))}",
"KHR*/STP*/THRA*/KPH*/TKPW*": "{#Control_L(Shift_L(Alt_L(Super_L(g))))}",
"KHR*/STP*/THRA*/KPH*/H*": "{#Control_L(Shift_L(Alt_L(Super_L(h))))}",
"KHR*/STP*/THRA*/KPH*/*EU": "{#Control_L(Shift_L(Alt_L(Super_L(i))))}",
"KHR*/STP*/THRA*/KPH*/SKWR*": "{#Control_L(Shift_L(Alt_L(Super_L(j))))}",
"KHR*/STP*/THRA*/KPH*/K*": "{#Control_L(Shift_L(Alt_L(Super_L(k))))}",
"KHR*/STP*/THRA*/KPH*/HR*": "{#Control_L(Shift_L(Alt_L(Super_L(l))))}",
"KHR*/STP*/THRA*/KPH*/PH*": "{#Control_L(Shift_L(Alt_L(Super_L(m))))}",
"KHR*/STP*/THRA*/KPH*/TPH*": "{#Control_L(Shift_L(Alt_L(Super_L(n))))}",
"KHR*/STP*/THRA*/KPH*/O*": "{#Control_L(Shift_L(Alt_L(Super_L(o))))}",
"KHR*/STP*/THRA*/KPH*/P*": "{#Control_L(Shift_L(Alt_L(Super_L(p))))}",
"KHR*/STP*/THRA*/KPH*/KW*": "{#Control_L(Shift_L(Alt_L(Super_L(q))))}",
"KHR*/STP*/THRA*/KPH*/R*": "{#Control_L(Shift_L(Alt_L(Super_L(r))))}",
"KHR*/STP*/THRA*/KPH*/S*": "{#Control_L(Shift_L(Alt_L(Super_L(s))))}",
"KHR*/STP*/THRA*/KPH*/T*": "{#Control_L(Shift_L(Alt_L(Super_L(t))))}",
"KHR*/STP*/THRA*/KPH*/*U": "{#Control_L(Shift_L(Alt_L(Super_L(u))))}",
"KHR*/STP*/THRA*/KPH*/SR*": "{#Control_L(Shift_L(Alt_L(Super_L(v))))}",
"KHR*/STP*/THRA*/KPH*/W*": "{#Control_L(Shift_L(Alt_L(Super_L(w))))}",
"KHR*/STP*/THRA*/KPH*/KP*": "{#Control_L(Shift_L(Alt_L(Super_L(x))))}",
"KHR*/STP*/THRA*/KPH*/KWR*": "{#Control_L(Shift_L(Alt_L(Super_L(y))))}",
"KHR*/STP*/THRA*/KPH*/STKPW*": "{#Control_L(Shift_L(Alt_L(Super_L(z))))}",
"KHR*/STP*/THRA*/KPH*/0": "{#Control_L(Shift_L(Alt_L(Super_L(0))))}",
"KHR*/STP*/THRA*/KPH*/1": "{#Control_L(Shift_L(Alt_L(Super_L(1))))}",
"KHR*/STP*/THRA*/KPH*/2": "{#Control_L(Shift_L(Alt_L(Super_L(2))))}",
"KHR*/STP*/THRA*/KPH*/3": "{#Control_L(Shift_L(Alt_L(Super_L(3))))}",
"KHR*/STP*/THRA*/KPH*/4": "{#Control_L(Shift_L(Alt_L(Super_L(4))))}",
"KHR*/STP*/THRA*/KPH*/5": "{#Control_L(Shift_L(Alt_L(Super_L(5))))}",
"KHR*/STP*/THRA*/KPH*/6": "{#Control_L(Shift_L(Alt_L(Super_L(6))))}",
"KHR*/STP*/THRA*/KPH*/7": "{#Control_L(Shift_L(Alt_L(Super_L(7))))}",
"KHR*/STP*/THRA*/KPH*/8": "{#Control_L(Shift_L(Alt_L(Super_L(8))))}",
"KHR*/STP*/THRA*/KPH*/9": "{#Control_L(Shift_L(Alt_L(Super_L(9))))}",
"KHR*/STP*/THRA*/KPH*/KH-FG": "{#Control_L(Shift_L(Alt_L(Super_L(grave))))}",
"KHR*/STP*/THRA*/KPH*/KW-BG": "{#Control_L(Shift_L(Alt_L(Super_L(comma))))}",
"KHR*/STP*/THRA*/KPH*/PR*EPB": "{#Control_L(Shift_L(Alt_L(Super_L(parenright))))}",
"KHR*/STP*/THRA*/KPH*/PREPB": "{#Control_L(Shift_L(Alt_L(Super_L(parenleft))))}",
"KHR*/STP*/THRA*/KPH*/PW*FP": "{#Control_L(Shift_L(Alt_L(Super_L(BackSpace))))}",
"KHR*/STP*/THRA*/KPH*/PWR*BGT": "{#Control_L(Shift_L(Alt_L(Super_L(bracketright))))}",
"KHR*/STP*/THRA*/KPH*/PWR-BGT": "{#Control_L(Shift_L(Alt_L(Super_L(bracketleft))))}",
"KHR*/STP*/THRA*/KPH*/R-R": "{#Control_L(Shift_L(Alt_L(Super_L(Return))))}",
"KHR*/STP*/THRA*/KPH*/S-P": "{#Control_L(Shift_L(Alt_L(Super_L(space))))}",
"KHR*/STP*/THRA*/KPH*/SP*S": "{#Control_L(Shift_L(Alt_L(Super_L())))}",
"KHR*/STP*/THRA*/KPH*/SPWHRAERB": "{#Control_L(Shift_L(Alt_L(Super_L(backslash))))}",
"KHR*/STP*/THRA*/KPH*/STPH-G": "{#Control_L(Shift_L(Alt_L(Super_L(Right))))}",
"KHR*/STP*/THRA*/KPH*/STPH-B": "{#Control_L(Shift_L(Alt_L(Super_L(Down))))}",
"KHR*/STP*/THRA*/KPH*/STPH-P": "{#Control_L(Shift_L(Alt_L(Super_L(Up))))}",
"KHR*/STP*/THRA*/KPH*/STPH-R": "{#Control_L(Shift_L(Alt_L(Super_L(Left))))}",
"KHR*/STP*/THRA*/KPH*/TA*B": "{#Control_L(Shift_L(Alt_L(Super_L(Tab))))}",
"KHR*/STP*/THRA*/KPH*/TKHRAO*ET": "{#Control_L(Shift_L(Alt_L(Super_L(Delete))))}",
"STP*/A*": "{#Shift_L(a)}",
"STP*/PW*": "{#Shift_L(b)}",
"STP*/KR*": "{#Shift_L(c)}",
"STP*/TK*": "{#Shift_L(d)}",
"STP*/*E": "{#Shift_L(e)}",
"STP*/TP*": "{#Shift_L(f)}",
"STP*/TKPW*": "{#Shift_L(g)}",
"STP*/H*": "{#Shift_L(h)}",
"STP*/*EU": "{#Shift_L(i)}",
"STP*/SKWR*": "{#Shift_L(j)}",
"STP*/K*": "{#Shift_L(k)}",
"STP*/HR*": "{#Shift_L(l)}",
"STP*/PH*": "{#Shift_L(m)}",
"STP*/TPH*": "{#Shift_L(n)}",
"STP*/O*": "{#Shift_L(o)}",
"STP*/P*": "{#Shift_L(p)}",
"STP*/KW*": "{#Shift_L(q)}",
"STP*/R*": "{#Shift_L(r)}",
"STP*/S*": "{#Shift_L(s)}",
"STP*/T*": "{#Shift_L(t)}",
"STP*/*U": "{#Shift_L(u)}",
"STP*/SR*": "{#Shift_L(v)}",
"STP*/W*": "{#Shift_L(w)}",
"STP*/KP*": "{#Shift_L(x)}",
"STP*/KWR*": "{#Shift_L(y)}",
"STP*/STKPW*": "{#Shift_L(z)}",
"STP*/0": "{#Shift_L(0)}",
"STP*/1": "{#Shift_L(1)}",
"STP*/2": "{#Shift_L(2)}",
"STP*/3": "{#Shift_L(3)}",
"STP*/4": "{#Shift_L(4)}",
"STP*/5": "{#Shift_L(5)}",
"STP*/6": "{#Shift_L(6)}",
"STP*/7": "{#Shift_L(7)}",
"STP*/8": "{#Shift_L(8)}",
"STP*/9": "{#Shift_L(9)}",
"STP*/KH-FG": "{#Shift_L(grave)}",
"STP*/KW-BG": "{#Shift_L(comma)}",
"STP*/PR*EPB": "{#Shift_L(parenright)}",
"STP*/PREPB": "{#Shift_L(parenleft)}",
"STP*/PW*FP": "{#Shift_L(BackSpace)}",
"STP*/PWR*BGT": "{#Shift_L(bracketright)}",
"STP*/PWR-BGT": "{#Shift_L(bracketleft)}",
"STP*/R-R": "{#Shift_L(Return)}",
"STP*/S-P": "{#Shift_L(space)}",
"STP*/SP*S": "{#Shift_L()}",
"STP*/SPWHRAERB": "{#Shift_L(backslash)}",
"STP*/STPH-G": "{#Shift_L(Right)}",
"STP*/STPH-B": "{#Shift_L(Down)}",
"STP*/STPH-P": "{#Shift_L(Up)}",
"STP*/STPH-R": "{#Shift_L(Left)}",
"STP*/TA*B": "{#Shift_L(Tab)}",
"STP*/TKHRAO*ET": "{#Shift_L(Delete)}",
"THRA*/STP*/A*": "{#Alt_L(Shift_L(a))}",
"THRA*/STP*/PW*": "{#Alt_L(Shift_L(b))}",
"THRA*/STP*/KR*": "{#Alt_L(Shift_L(c))}",
"THRA*/STP*/TK*": "{#Alt_L(Shift_L(d))}",
"THRA*/STP*/*E": "{#Alt_L(Shift_L(e))}",
"THRA*/STP*/TP*": "{#Alt_L(Shift_L(f))}",
"THRA*/STP*/TKPW*": "{#Alt_L(Shift_L(g))}",
"THRA*/STP*/H*": "{#Alt_L(Shift_L(h))}",
"THRA*/STP*/*EU": "{#Alt_L(Shift_L(i))}",
"THRA*/STP*/SKWR*": "{#Alt_L(Shift_L(j))}",
"THRA*/STP*/K*": "{#Alt_L(Shift_L(k))}",
"THRA*/STP*/HR*": "{#Alt_L(Shift_L(l))}",
"THRA*/STP*/PH*": "{#Alt_L(Shift_L(m))}",
"THRA*/STP*/TPH*": "{#Alt_L(Shift_L(n))}",
"THRA*/STP*/O*": "{#Alt_L(Shift_L(o))}",
"THRA*/STP*/P*": "{#Alt_L(Shift_L(p))}",
"THRA*/STP*/KW*": "{#Alt_L(Shift_L(q))}",
"THRA*/STP*/R*": "{#Alt_L(Shift_L(r))}",
"THRA*/STP*/S*": "{#Alt_L(Shift_L(s))}",
"THRA*/STP*/T*": "{#Alt_L(Shift_L(t))}",
"THRA*/STP*/*U": "{#Alt_L(Shift_L(u))}",
"THRA*/STP*/SR*": "{#Alt_L(Shift_L(v))}",
"THRA*/STP*/W*": "{#Alt_L(Shift_L(w))}",
"THRA*/STP*/KP*": "{#Alt_L(Shift_L(x))}",
"THRA*/STP*/KWR*": "{#Alt_L(Shift_L(y))}",
"THRA*/STP*/STKPW*": "{#Alt_L(Shift_L(z))}",
"THRA*/STP*/0": "{#Alt_L(Shift_L(0))}",
"THRA*/STP*/1": "{#Alt_L(Shift_L(1))}",
"THRA*/STP*/2": "{#Alt_L(Shift_L(2))}",
"THRA*/STP*/3": "{#Alt_L(Shift_L(3))}",
"THRA*/STP*/4": "{#Alt_L(Shift_L(4))}",
"THRA*/STP*/5": "{#Alt_L(Shift_L(5))}",
"THRA*/STP*/6": "{#Alt_L(Shift_L(6))}",
"THRA*/STP*/7": "{#Alt_L(Shift_L(7))}",
"THRA*/STP*/8": "{#Alt_L(Shift_L(8))}",
"THRA*/STP*/9": "{#Alt_L(Shift_L(9))}",
"THRA*/STP*/KH-FG": "{#Alt_L(Shift_L(grave))}",
"THRA*/STP*/KW-BG": "{#Alt_L(Shift_L(comma))}",
"THRA*/STP*/PR*EPB": "{#Alt_L(Shift_L(parenright))}",
"THRA*/STP*/PREPB": "{#Alt_L(Shift_L(parenleft))}",
"THRA*/STP*/PW*FP": "{#Alt_L(Shift_L(BackSpace))}",
"THRA*/STP*/PWR*BGT": "{#Alt_L(Shift_L(bracketright))}",
"THRA*/STP*/PWR-BGT": "{#Alt_L(Shift_L(bracketleft))}",
"THRA*/STP*/R-R": "{#Alt_L(Shift_L(Return))}",
"THRA*/STP*/S-P": "{#Alt_L(Shift_L(space))}",
"THRA*/STP*/SP*S": "{#Alt_L(Shift_L())}",
"THRA*/STP*/SPWHRAERB": "{#Alt_L(Shift_L(backslash))}",
"THRA*/STP*/STPH-G": "{#Alt_L(Shift_L(Right))}",
"THRA*/STP*/STPH-B": "{#Alt_L(Shift_L(Down))}",
"THRA*/STP*/STPH-P": "{#Alt_L(Shift_L(Up))}",
"THRA*/STP*/STPH-R": "{#Alt_L(Shift_L(Left))}",
"THRA*/STP*/TA*B": "{#Alt_L(Shift_L(Tab))}",
"THRA*/STP*/TKHRAO*ET": "{#Alt_L(Shift_L(Delete))}",
"THRA*/A*": "{#Alt_L(a)}",
"THRA*/PW*": "{#Alt_L(b)}",
"THRA*/KR*": "{#Alt_L(c)}",
"THRA*/TK*": "{#Alt_L(d)}",
"THRA*/*E": "{#Alt_L(e)}",
"THRA*/TP*": "{#Alt_L(f)}",
"THRA*/TKPW*": "{#Alt_L(g)}",
"THRA*/H*": "{#Alt_L(h)}",
"THRA*/*EU": "{#Alt_L(i)}",
"THRA*/SKWR*": "{#Alt_L(j)}",
"THRA*/K*": "{#Alt_L(k)}",
"THRA*/HR*": "{#Alt_L(l)}",
"THRA*/PH*": "{#Alt_L(m)}",
"THRA*/TPH*": "{#Alt_L(n)}",
"THRA*/O*": "{#Alt_L(o)}",
"THRA*/P*": "{#Alt_L(p)}",
"THRA*/KW*": "{#Alt_L(q)}",
"THRA*/R*": "{#Alt_L(r)}",
"THRA*/S*": "{#Alt_L(s)}",
"THRA*/T*": "{#Alt_L(t)}",
"THRA*/*U": "{#Alt_L(u)}",
"THRA*/SR*": "{#Alt_L(v)}",
"THRA*/W*": "{#Alt_L(w)}",
"THRA*/KP*": "{#Alt_L(x)}",
"THRA*/KWR*": "{#Alt_L(y)}",
"THRA*/STKPW*": "{#Alt_L(z)}",
"THRA*/0": "{#Alt_L(0)}",
"THRA*/1": "{#Alt_L(1)}",
"THRA*/2": "{#Alt_L(2)}",
"THRA*/3": "{#Alt_L(3)}",
"THRA*/4": "{#Alt_L(4)}",
"THRA*/5": "{#Alt_L(5)}",
"THRA*/6": "{#Alt_L(6)}",
"THRA*/7": "{#Alt_L(7)}",
"THRA*/8": "{#Alt_L(8)}",
"THRA*/9": "{#Alt_L(9)}",
"THRA*/KH-FG": "{#Alt_L(grave)}",
"THRA*/KW-BG": "{#Alt_L(comma)}",
"THRA*/PR*EPB": "{#Alt_L(parenright)}",
"THRA*/PREPB": "{#Alt_L(parenleft)}",
"THRA*/PW*FP": "{#Alt_L(BackSpace)}",
"THRA*/PWR*BGT": "{#Alt_L(bracketright)}",
"THRA*/PWR-BGT": "{#Alt_L(bracketleft)}",
"THRA*/R-R": "{#Alt_L(Return)}",
"THRA*/S-P": "{#Alt_L(space)}",
"THRA*/SP*S": "{#Alt_L()}",
"THRA*/SPWHRAERB": "{#Alt_L(backslash)}",
"THRA*/STPH-G": "{#Alt_L(Right)}",
"THRA*/STPH-B": "{#Alt_L(Down)}",
"THRA*/STPH-P": "{#Alt_L(Up)}",
"THRA*/STPH-R": "{#Alt_L(Left)}",
"THRA*/TA*B": "{#Alt_L(Tab)}",
"THRA*/TKHRAO*ET": "{#Alt_L(Delete)}",
"STP*/THRA*/A*": "{#Shift_L(Alt_L(a))}",
"STP*/THRA*/PW*": "{#Shift_L(Alt_L(b))}",
"STP*/THRA*/KR*": "{#Shift_L(Alt_L(c))}",
"STP*/THRA*/TK*": "{#Shift_L(Alt_L(d))}",
"STP*/THRA*/*E": "{#Shift_L(Alt_L(e))}",
"STP*/THRA*/TP*": "{#Shift_L(Alt_L(f))}",
"STP*/THRA*/TKPW*": "{#Shift_L(Alt_L(g))}",
"STP*/THRA*/H*": "{#Shift_L(Alt_L(h))}",
"STP*/THRA*/*EU": "{#Shift_L(Alt_L(i))}",
"STP*/THRA*/SKWR*": "{#Shift_L(Alt_L(j))}",
"STP*/THRA*/K*": "{#Shift_L(Alt_L(k))}",
"STP*/THRA*/HR*": "{#Shift_L(Alt_L(l))}",
"STP*/THRA*/PH*": "{#Shift_L(Alt_L(m))}",
"STP*/THRA*/TPH*": "{#Shift_L(Alt_L(n))}",
"STP*/THRA*/O*": "{#Shift_L(Alt_L(o))}",
"STP*/THRA*/P*": "{#Shift_L(Alt_L(p))}",
"STP*/THRA*/KW*": "{#Shift_L(Alt_L(q))}",
"STP*/THRA*/R*": "{#Shift_L(Alt_L(r))}",
"STP*/THRA*/S*": "{#Shift_L(Alt_L(s))}",
"STP*/THRA*/T*": "{#Shift_L(Alt_L(t))}",
"STP*/THRA*/*U": "{#Shift_L(Alt_L(u))}",
"STP*/THRA*/SR*": "{#Shift_L(Alt_L(v))}",
"STP*/THRA*/W*": "{#Shift_L(Alt_L(w))}",
"STP*/THRA*/KP*": "{#Shift_L(Alt_L(x))}",
"STP*/THRA*/KWR*": "{#Shift_L(Alt_L(y))}",
"STP*/THRA*/STKPW*": "{#Shift_L(Alt_L(z))}",
"STP*/THRA*/0": "{#Shift_L(Alt_L(0))}",
"STP*/THRA*/1": "{#Shift_L(Alt_L(1))}",
"STP*/THRA*/2": "{#Shift_L(Alt_L(2))}",
"STP*/THRA*/3": "{#Shift_L(Alt_L(3))}",
"STP*/THRA*/4": "{#Shift_L(Alt_L(4))}",
"STP*/THRA*/5": "{#Shift_L(Alt_L(5))}",
"STP*/THRA*/6": "{#Shift_L(Alt_L(6))}",
"STP*/THRA*/7": "{#Shift_L(Alt_L(7))}",
"STP*/THRA*/8": "{#Shift_L(Alt_L(8))}",
"STP*/THRA*/9": "{#Shift_L(Alt_L(9))}",
"STP*/THRA*/KH-FG": "{#Shift_L(Alt_L(grave))}",
"STP*/THRA*/KW-BG": "{#Shift_L(Alt_L(comma))}",
"STP*/THRA*/PR*EPB": "{#Shift_L(Alt_L(parenright))}",
"STP*/THRA*/PREPB": "{#Shift_L(Alt_L(parenleft))}",
"STP*/THRA*/PW*FP": "{#Shift_L(Alt_L(BackSpace))}",
"STP*/THRA*/PWR*BGT": "{#Shift_L(Alt_L(bracketright))}",
"STP*/THRA*/PWR-BGT": "{#Shift_L(Alt_L(bracketleft))}",
"STP*/THRA*/R-R": "{#Shift_L(Alt_L(Return))}",
"STP*/THRA*/S-P": "{#Shift_L(Alt_L(space))}",
"STP*/THRA*/SP*S": "{#Shift_L(Alt_L())}",
"STP*/THRA*/SPWHRAERB": "{#Shift_L(Alt_L(backslash))}",
"STP*/THRA*/STPH-G": "{#Shift_L(Alt_L(Right))}",
"STP*/THRA*/STPH-B": "{#Shift_L(Alt_L(Down))}",
"STP*/THRA*/STPH-P": "{#Shift_L(Alt_L(Up))}",
"STP*/THRA*/STPH-R": "{#Shift_L(Alt_L(Left))}",
"STP*/THRA*/TA*B": "{#Shift_L(Alt_L(Tab))}",
"STP*/THRA*/TKHRAO*ET": "{#Shift_L(Alt_L(Delete))}",
"KHR*/STP*/A*": "{#Control_L(Shift_L(a))}",
"KHR*/STP*/PW*": "{#Control_L(Shift_L(b))}",
"KHR*/STP*/KR*": "{#Control_L(Shift_L(c))}",
"KHR*/STP*/TK*": "{#Control_L(Shift_L(d))}",
"KHR*/STP*/*E": "{#Control_L(Shift_L(e))}",
"KHR*/STP*/TP*": "{#Control_L(Shift_L(f))}",
"KHR*/STP*/TKPW*": "{#Control_L(Shift_L(g))}",
"KHR*/STP*/H*": "{#Control_L(Shift_L(h))}",
"KHR*/STP*/*EU": "{#Control_L(Shift_L(i))}",
"KHR*/STP*/SKWR*": "{#Control_L(Shift_L(j))}",
"KHR*/STP*/K*": "{#Control_L(Shift_L(k))}",
"KHR*/STP*/HR*": "{#Control_L(Shift_L(l))}",
"KHR*/STP*/PH*": "{#Control_L(Shift_L(m))}",
"KHR*/STP*/TPH*": "{#Control_L(Shift_L(n))}",
"KHR*/STP*/O*": "{#Control_L(Shift_L(o))}",
"KHR*/STP*/P*": "{#Control_L(Shift_L(p))}",
"KHR*/STP*/KW*": "{#Control_L(Shift_L(q))}",
"KHR*/STP*/R*": "{#Control_L(Shift_L(r))}",
"KHR*/STP*/S*": "{#Control_L(Shift_L(s))}",
"KHR*/STP*/T*": "{#Control_L(Shift_L(t))}",
"KHR*/STP*/*U": "{#Control_L(Shift_L(u))}",
"KHR*/STP*/SR*": "{#Control_L(Shift_L(v))}",
"KHR*/STP*/W*": "{#Control_L(Shift_L(w))}",
"KHR*/STP*/KP*": "{#Control_L(Shift_L(x))}",
"KHR*/STP*/KWR*": "{#Control_L(Shift_L(y))}",
"KHR*/STP*/STKPW*": "{#Control_L(Shift_L(z))}",
"KHR*/STP*/0": "{#Control_L(Shift_L(0))}",
"KHR*/STP*/1": "{#Control_L(Shift_L(1))}",
"KHR*/STP*/2": "{#Control_L(Shift_L(2))}",
"KHR*/STP*/3": "{#Control_L(Shift_L(3))}",
"KHR*/STP*/4": "{#Control_L(Shift_L(4))}",
"KHR*/STP*/5": "{#Control_L(Shift_L(5))}",
"KHR*/STP*/6": "{#Control_L(Shift_L(6))}",
"KHR*/STP*/7": "{#Control_L(Shift_L(7))}",
"KHR*/STP*/8": "{#Control_L(Shift_L(8))}",
"KHR*/STP*/9": "{#Control_L(Shift_L(9))}",
"KHR*/STP*/KH-FG": "{#Control_L(Shift_L(grave))}",
"KHR*/STP*/KW-BG": "{#Control_L(Shift_L(comma))}",
"KHR*/STP*/PR*EPB": "{#Control_L(Shift_L(parenright))}",
"KHR*/STP*/PREPB": "{#Control_L(Shift_L(parenleft))}",
"KHR*/STP*/PW*FP": "{#Control_L(Shift_L(BackSpace))}",
"KHR*/STP*/PWR*BGT": "{#Control_L(Shift_L(bracketright))}",
"KHR*/STP*/PWR-BGT": "{#Control_L(Shift_L(bracketleft))}",
"KHR*/STP*/R-R": "{#Control_L(Shift_L(Return))}",
"KHR*/STP*/S-P": "{#Control_L(Shift_L(space))}",
"KHR*/STP*/SP*S": "{#Control_L(Shift_L())}",
"KHR*/STP*/SPWHRAERB": "{#Control_L(Shift_L(backslash))}",
"KHR*/STP*/STPH-G": "{#Control_L(Shift_L(Right))}",
"KHR*/STP*/STPH-B": "{#Control_L(Shift_L(Down))}",
"KHR*/STP*/STPH-P": "{#Control_L(Shift_L(Up))}",
"KHR*/STP*/STPH-R": "{#Control_L(Shift_L(Left))}",
"KHR*/STP*/TA*B": "{#Control_L(Shift_L(Tab))}",
"KHR*/STP*/TKHRAO*ET": "{#Control_L(Shift_L(Delete))}",
"KHR*/THRA*/STP*/A*": "{#Control_L(Alt_L(Shift_L(a)))}",
"KHR*/THRA*/STP*/PW*": "{#Control_L(Alt_L(Shift_L(b)))}",
"KHR*/THRA*/STP*/KR*": "{#Control_L(Alt_L(Shift_L(c)))}",
"KHR*/THRA*/STP*/TK*": "{#Control_L(Alt_L(Shift_L(d)))}",
"KHR*/THRA*/STP*/*E": "{#Control_L(Alt_L(Shift_L(e)))}",
"KHR*/THRA*/STP*/TP*": "{#Control_L(Alt_L(Shift_L(f)))}",
"KHR*/THRA*/STP*/TKPW*": "{#Control_L(Alt_L(Shift_L(g)))}",
"KHR*/THRA*/STP*/H*": "{#Control_L(Alt_L(Shift_L(h)))}",
"KHR*/THRA*/STP*/*EU": "{#Control_L(Alt_L(Shift_L(i)))}",
"KHR*/THRA*/STP*/SKWR*": "{#Control_L(Alt_L(Shift_L(j)))}",
"KHR*/THRA*/STP*/K*": "{#Control_L(Alt_L(Shift_L(k)))}",
"KHR*/THRA*/STP*/HR*": "{#Control_L(Alt_L(Shift_L(l)))}",
"KHR*/THRA*/STP*/PH*": "{#Control_L(Alt_L(Shift_L(m)))}",
"KHR*/THRA*/STP*/TPH*": "{#Control_L(Alt_L(Shift_L(n)))}",
"KHR*/THRA*/STP*/O*": "{#Control_L(Alt_L(Shift_L(o)))}",
"KHR*/THRA*/STP*/P*": "{#Control_L(Alt_L(Shift_L(p)))}",
"KHR*/THRA*/STP*/KW*": "{#Control_L(Alt_L(Shift_L(q)))}",
"KHR*/THRA*/STP*/R*": "{#Control_L(Alt_L(Shift_L(r)))}",
"KHR*/THRA*/STP*/S*": "{#Control_L(Alt_L(Shift_L(s)))}",
"KHR*/THRA*/STP*/T*": "{#Control_L(Alt_L(Shift_L(t)))}",
"KHR*/THRA*/STP*/*U": "{#Control_L(Alt_L(Shift_L(u)))}",
"KHR*/THRA*/STP*/SR*": "{#Control_L(Alt_L(Shift_L(v)))}",
"KHR*/THRA*/STP*/W*": "{#Control_L(Alt_L(Shift_L(w)))}",
"KHR*/THRA*/STP*/KP*": "{#Control_L(Alt_L(Shift_L(x)))}",
"KHR*/THRA*/STP*/KWR*": "{#Control_L(Alt_L(Shift_L(y)))}",
"KHR*/THRA*/STP*/STKPW*": "{#Control_L(Alt_L(Shift_L(z)))}",
"KHR*/THRA*/STP*/0": "{#Control_L(Alt_L(Shift_L(0)))}",
"KHR*/THRA*/STP*/1": "{#Control_L(Alt_L(Shift_L(1)))}",
"KHR*/THRA*/STP*/2": "{#Control_L(Alt_L(Shift_L(2)))}",
"KHR*/THRA*/STP*/3": "{#Control_L(Alt_L(Shift_L(3)))}",
"KHR*/THRA*/STP*/4": "{#Control_L(Alt_L(Shift_L(4)))}",
"KHR*/THRA*/STP*/5": "{#Control_L(Alt_L(Shift_L(5)))}",
"KHR*/THRA*/STP*/6": "{#Control_L(Alt_L(Shift_L(6)))}",
"KHR*/THRA*/STP*/7": "{#Control_L(Alt_L(Shift_L(7)))}",
"KHR*/THRA*/STP*/8": "{#Control_L(Alt_L(Shift_L(8)))}",
"KHR*/THRA*/STP*/9": "{#Control_L(Alt_L(Shift_L(9)))}",
"KHR*/THRA*/STP*/KH-FG": "{#Control_L(Alt_L(Shift_L(grave)))}",
"KHR*/THRA*/STP*/KW-BG": "{#Control_L(Alt_L(Shift_L(comma)))}",
"KHR*/THRA*/STP*/PR*EPB": "{#Control_L(Alt_L(Shift_L(parenright)))}",
"KHR*/THRA*/STP*/PREPB": "{#Control_L(Alt_L(Shift_L(parenleft)))}",
"KHR*/THRA*/STP*/PW*FP": "{#Control_L(Alt_L(Shift_L(BackSpace)))}",
"KHR*/THRA*/STP*/PWR*BGT": "{#Control_L(Alt_L(Shift_L(bracketright)))}",
"KHR*/THRA*/STP*/PWR-BGT": "{#Control_L(Alt_L(Shift_L(bracketleft)))}",
"KHR*/THRA*/STP*/R-R": "{#Control_L(Alt_L(Shift_L(Return)))}",
"KHR*/THRA*/STP*/S-P": "{#Control_L(Alt_L(Shift_L(space)))}",
"KHR*/THRA*/STP*/SP*S": "{#Control_L(Alt_L(Shift_L()))}",
"KHR*/THRA*/STP*/SPWHRAERB": "{#Control_L(Alt_L(Shift_L(backslash)))}",
"KHR*/THRA*/STP*/STPH-G": "{#Control_L(Alt_L(Shift_L(Right)))}",
"KHR*/THRA*/STP*/STPH-B": "{#Control_L(Alt_L(Shift_L(Down)))}",
"KHR*/THRA*/STP*/STPH-P": "{#Control_L(Alt_L(Shift_L(Up)))}",
"KHR*/THRA*/STP*/STPH-R": "{#Control_L(Alt_L(Shift_L(Left)))}",
"KHR*/THRA*/STP*/TA*B": "{#Control_L(Alt_L(Shift_L(Tab)))}",
"KHR*/THRA*/STP*/TKHRAO*ET": "{#Control_L(Alt_L(Shift_L(Delete)))}",
"KHR*/THRA*/A*": "{#Control_L(Alt_L(a))}",
"KHR*/THRA*/PW*": "{#Control_L(Alt_L(b))}",
"KHR*/THRA*/KR*": "{#Control_L(Alt_L(c))}",
"KHR*/THRA*/TK*": "{#Control_L(Alt_L(d))}",
"KHR*/THRA*/*E": "{#Control_L(Alt_L(e))}",
"KHR*/THRA*/TP*": "{#Control_L(Alt_L(f))}",
"KHR*/THRA*/TKPW*": "{#Control_L(Alt_L(g))}",
"KHR*/THRA*/H*": "{#Control_L(Alt_L(h))}",
"KHR*/THRA*/*EU": "{#Control_L(Alt_L(i))}",
"KHR*/THRA*/SKWR*": "{#Control_L(Alt_L(j))}",
"KHR*/THRA*/K*": "{#Control_L(Alt_L(k))}",
"KHR*/THRA*/HR*": "{#Control_L(Alt_L(l))}",
"KHR*/THRA*/PH*": "{#Control_L(Alt_L(m))}",
"KHR*/THRA*/TPH*": "{#Control_L(Alt_L(n))}",
"KHR*/THRA*/O*": "{#Control_L(Alt_L(o))}",
"KHR*/THRA*/P*": "{#Control_L(Alt_L(p))}",
"KHR*/THRA*/KW*": "{#Control_L(Alt_L(q))}",
"KHR*/THRA*/R*": "{#Control_L(Alt_L(r))}",
"KHR*/THRA*/S*": "{#Control_L(Alt_L(s))}",
"KHR*/THRA*/T*": "{#Control_L(Alt_L(t))}",
"KHR*/THRA*/*U": "{#Control_L(Alt_L(u))}",
"KHR*/THRA*/SR*": "{#Control_L(Alt_L(v))}",
"KHR*/THRA*/W*": "{#Control_L(Alt_L(w))}",
"KHR*/THRA*/KP*": "{#Control_L(Alt_L(x))}",
"KHR*/THRA*/KWR*": "{#Control_L(Alt_L(y))}",
"KHR*/THRA*/STKPW*": "{#Control_L(Alt_L(z))}",
"KHR*/THRA*/0": "{#Control_L(Alt_L(0))}",
"KHR*/THRA*/1": "{#Control_L(Alt_L(1))}",
"KHR*/THRA*/2": "{#Control_L(Alt_L(2))}",
"KHR*/THRA*/3": "{#Control_L(Alt_L(3))}",
"KHR*/THRA*/4": "{#Control_L(Alt_L(4))}",
"KHR*/THRA*/5": "{#Control_L(Alt_L(5))}",
"KHR*/THRA*/6": "{#Control_L(Alt_L(6))}",
"KHR*/THRA*/7": "{#Control_L(Alt_L(7))}",
"KHR*/THRA*/8": "{#Control_L(Alt_L(8))}",
"KHR*/THRA*/9": "{#Control_L(Alt_L(9))}",
"KHR*/THRA*/KH-FG": "{#Control_L(Alt_L(grave))}",
"KHR*/THRA*/KW-BG": "{#Control_L(Alt_L(comma))}",
"KHR*/THRA*/PR*EPB": "{#Control_L(Alt_L(parenright))}",
"KHR*/THRA*/PREPB": "{#Control_L(Alt_L(parenleft))}",
"KHR*/THRA*/PW*FP": "{#Control_L(Alt_L(BackSpace))}",
"KHR*/THRA*/PWR*BGT": "{#Control_L(Alt_L(bracketright))}",
"KHR*/THRA*/PWR-BGT": "{#Control_L(Alt_L(bracketleft))}",
"KHR*/THRA*/R-R": "{#Control_L(Alt_L(Return))}",
"KHR*/THRA*/S-P": "{#Control_L(Alt_L(space))}",
"KHR*/THRA*/SP*S": "{#Control_L(Alt_L())}",
"KHR*/THRA*/SPWHRAERB": "{#Control_L(Alt_L(backslash))}",
"KHR*/THRA*/STPH-G": "{#Control_L(Alt_L(Right))}",
"KHR*/THRA*/STPH-B": "{#Control_L(Alt_L(Down))}",
"KHR*/THRA*/STPH-P": "{#Control_L(Alt_L(Up))}",
"KHR*/THRA*/STPH-R": "{#Control_L(Alt_L(Left))}",
"KHR*/THRA*/TA*B": "{#Control_L(Alt_L(Tab))}",
"KHR*/THRA*/TKHRAO*ET": "{#Control_L(Alt_L(Delete))}",
"KHR*/STP*/THRA*/A*": "{#Control_L(Shift_L(Alt_L(a)))}",
"KHR*/STP*/THRA*/PW*": "{#Control_L(Shift_L(Alt_L(b)))}",
"KHR*/STP*/THRA*/KR*": "{#Control_L(Shift_L(Alt_L(c)))}",
"KHR*/STP*/THRA*/TK*": "{#Control_L(Shift_L(Alt_L(d)))}",
"KHR*/STP*/THRA*/*E": "{#Control_L(Shift_L(Alt_L(e)))}",
"KHR*/STP*/THRA*/TP*": "{#Control_L(Shift_L(Alt_L(f)))}",
"KHR*/STP*/THRA*/TKPW*": "{#Control_L(Shift_L(Alt_L(g)))}",
"KHR*/STP*/THRA*/H*": "{#Control_L(Shift_L(Alt_L(h)))}",
"KHR*/STP*/THRA*/*EU": "{#Control_L(Shift_L(Alt_L(i)))}",
"KHR*/STP*/THRA*/SKWR*": "{#Control_L(Shift_L(Alt_L(j)))}",
"KHR*/STP*/THRA*/K*": "{#Control_L(Shift_L(Alt_L(k)))}",
"KHR*/STP*/THRA*/HR*": "{#Control_L(Shift_L(Alt_L(l)))}",
"KHR*/STP*/THRA*/PH*": "{#Control_L(Shift_L(Alt_L(m)))}",
"KHR*/STP*/THRA*/TPH*": "{#Control_L(Shift_L(Alt_L(n)))}",
"KHR*/STP*/THRA*/O*": "{#Control_L(Shift_L(Alt_L(o)))}",
"KHR*/STP*/THRA*/P*": "{#Control_L(Shift_L(Alt_L(p)))}",
"KHR*/STP*/THRA*/KW*": "{#Control_L(Shift_L(Alt_L(q)))}",
"KHR*/STP*/THRA*/R*": "{#Control_L(Shift_L(Alt_L(r)))}",
"KHR*/STP*/THRA*/S*": "{#Control_L(Shift_L(Alt_L(s)))}",
"KHR*/STP*/THRA*/T*": "{#Control_L(Shift_L(Alt_L(t)))}",
"KHR*/STP*/THRA*/*U": "{#Control_L(Shift_L(Alt_L(u)))}",
"KHR*/STP*/THRA*/SR*": "{#Control_L(Shift_L(Alt_L(v)))}",
"KHR*/STP*/THRA*/W*": "{#Control_L(Shift_L(Alt_L(w)))}",
"KHR*/STP*/THRA*/KP*": "{#Control_L(Shift_L(Alt_L(x)))}",
"KHR*/STP*/THRA*/KWR*": "{#Control_L(Shift_L(Alt_L(y)))}",
"KHR*/STP*/THRA*/STKPW*": "{#Control_L(Shift_L(Alt_L(z)))}",
"KHR*/STP*/THRA*/0": "{#Control_L(Shift_L(Alt_L(0)))}",
"KHR*/STP*/THRA*/1": "{#Control_L(Shift_L(Alt_L(1)))}",
"KHR*/STP*/THRA*/2": "{#Control_L(Shift_L(Alt_L(2)))}",
"KHR*/STP*/THRA*/3": "{#Control_L(Shift_L(Alt_L(3)))}",
"KHR*/STP*/THRA*/4": "{#Control_L(Shift_L(Alt_L(4)))}",
"KHR*/STP*/THRA*/5": "{#Control_L(Shift_L(Alt_L(5)))}",
"KHR*/STP*/THRA*/6": "{#Control_L(Shift_L(Alt_L(6)))}",
"KHR*/STP*/THRA*/7": "{#Control_L(Shift_L(Alt_L(7)))}",
"KHR*/STP*/THRA*/8": "{#Control_L(Shift_L(Alt_L(8)))}",
"KHR*/STP*/THRA*/9": "{#Control_L(Shift_L(Alt_L(9)))}",
"KHR*/STP*/THRA*/KH-FG": "{#Control_L(Shift_L(Alt_L(grave)))}",
"KHR*/STP*/THRA*/KW-BG": "{#Control_L(Shift_L(Alt_L(comma)))}",
"KHR*/STP*/THRA*/PR*EPB": "{#Control_L(Shift_L(Alt_L(parenright)))}",
"KHR*/STP*/THRA*/PREPB": "{#Control_L(Shift_L(Alt_L(parenleft)))}",
"KHR*/STP*/THRA*/PW*FP": "{#Control_L(Shift_L(Alt_L(BackSpace)))}",
"KHR*/STP*/THRA*/PWR*BGT": "{#Control_L(Shift_L(Alt_L(bracketright)))}",
"KHR*/STP*/THRA*/PWR-BGT": "{#Control_L(Shift_L(Alt_L(bracketleft)))}",
"KHR*/STP*/THRA*/R-R": "{#Control_L(Shift_L(Alt_L(Return)))}",
"KHR*/STP*/THRA*/S-P": "{#Control_L(Shift_L(Alt_L(space)))}",
"KHR*/STP*/THRA*/SP*S": "{#Control_L(Shift_L(Alt_L()))}",
"KHR*/STP*/THRA*/SPWHRAERB": "{#Control_L(Shift_L(Alt_L(backslash)))}",
"KHR*/STP*/THRA*/STPH-G": "{#Control_L(Shift_L(Alt_L(Right)))}",
"KHR*/STP*/THRA*/STPH-B": "{#Control_L(Shift_L(Alt_L(Down)))}",
"KHR*/STP*/THRA*/STPH-P": "{#Control_L(Shift_L(Alt_L(Up)))}",
"KHR*/STP*/THRA*/STPH-R": "{#Control_L(Shift_L(Alt_L(Left)))}",
"KHR*/STP*/THRA*/TA*B": "{#Control_L(Shift_L(Alt_L(Tab)))}",
"KHR*/STP*/THRA*/TKHRAO*ET": "{#Control_L(Shift_L(Alt_L(Delete)))}",
"STP*/A*": "{#Shift_L(a)}",
"STP*/PW*": "{#Shift_L(b)}",
"STP*/KR*": "{#Shift_L(c)}",
"STP*/TK*": "{#Shift_L(d)}",
"STP*/*E": "{#Shift_L(e)}",
"STP*/TP*": "{#Shift_L(f)}",
"STP*/TKPW*": "{#Shift_L(g)}",
"STP*/H*": "{#Shift_L(h)}",
"STP*/*EU": "{#Shift_L(i)}",
"STP*/SKWR*": "{#Shift_L(j)}",
"STP*/K*": "{#Shift_L(k)}",
"STP*/HR*": "{#Shift_L(l)}",
"STP*/PH*": "{#Shift_L(m)}",
"STP*/TPH*": "{#Shift_L(n)}",
"STP*/O*": "{#Shift_L(o)}",
"STP*/P*": "{#Shift_L(p)}",
"STP*/KW*": "{#Shift_L(q)}",
"STP*/R*": "{#Shift_L(r)}",
"STP*/S*": "{#Shift_L(s)}",
"STP*/T*": "{#Shift_L(t)}",
"STP*/*U": "{#Shift_L(u)}",
"STP*/SR*": "{#Shift_L(v)}",
"STP*/W*": "{#Shift_L(w)}",
"STP*/KP*": "{#Shift_L(x)}",
"STP*/KWR*": "{#Shift_L(y)}",
"STP*/STKPW*": "{#Shift_L(z)}",
"STP*/0": "{#Shift_L(0)}",
"STP*/1": "{#Shift_L(1)}",
"STP*/2": "{#Shift_L(2)}",
"STP*/3": "{#Shift_L(3)}",
"STP*/4": "{#Shift_L(4)}",
"STP*/5": "{#Shift_L(5)}",
"STP*/6": "{#Shift_L(6)}",
"STP*/7": "{#Shift_L(7)}",
"STP*/8": "{#Shift_L(8)}",
"STP*/9": "{#Shift_L(9)}",
"STP*/KH-FG": "{#Shift_L(grave)}",
"STP*/KW-BG": "{#Shift_L(comma)}",
"STP*/PR*EPB": "{#Shift_L(parenright)}",
"STP*/PREPB": "{#Shift_L(parenleft)}",
"STP*/PW*FP": "{#Shift_L(BackSpace)}",
"STP*/PWR*BGT": "{#Shift_L(bracketright)}",
"STP*/PWR-BGT": "{#Shift_L(bracketleft)}",
"STP*/R-R": "{#Shift_L(Return)}",
"STP*/S-P": "{#Shift_L(space)}",
"STP*/SP*S": "{#Shift_L()}",
"STP*/SPWHRAERB": "{#Shift_L(backslash)}",
"STP*/STPH-G": "{#Shift_L(Right)}",
"STP*/STPH-B": "{#Shift_L(Down)}",
"STP*/STPH-P": "{#Shift_L(Up)}",
"STP*/STPH-R": "{#Shift_L(Left)}",
"STP*/TA*B": "{#Shift_L(Tab)}",
"STP*/TKHRAO*ET": "{#Shift_L(Delete)}",
"KHR*/STP*/A*": "{#Control_L(Shift_L(a))}",
"KHR*/STP*/PW*": "{#Control_L(Shift_L(b))}",
"KHR*/STP*/KR*": "{#Control_L(Shift_L(c))}",
"KHR*/STP*/TK*": "{#Control_L(Shift_L(d))}",
"KHR*/STP*/*E": "{#Control_L(Shift_L(e))}",
"KHR*/STP*/TP*": "{#Control_L(Shift_L(f))}",
"KHR*/STP*/TKPW*": "{#Control_L(Shift_L(g))}",
"KHR*/STP*/H*": "{#Control_L(Shift_L(h))}",
"KHR*/STP*/*EU": "{#Control_L(Shift_L(i))}",
"KHR*/STP*/SKWR*": "{#Control_L(Shift_L(j))}",
"KHR*/STP*/K*": "{#Control_L(Shift_L(k))}",
"KHR*/STP*/HR*": "{#Control_L(Shift_L(l))}",
"KHR*/STP*/PH*": "{#Control_L(Shift_L(m))}",
"KHR*/STP*/TPH*": "{#Control_L(Shift_L(n))}",
"KHR*/STP*/O*": "{#Control_L(Shift_L(o))}",
"KHR*/STP*/P*": "{#Control_L(Shift_L(p))}",
"KHR*/STP*/KW*": "{#Control_L(Shift_L(q))}",
"KHR*/STP*/R*": "{#Control_L(Shift_L(r))}",
"KHR*/STP*/S*": "{#Control_L(Shift_L(s))}",
"KHR*/STP*/T*": "{#Control_L(Shift_L(t))}",
"KHR*/STP*/*U": "{#Control_L(Shift_L(u))}",
"KHR*/STP*/SR*": "{#Control_L(Shift_L(v))}",
"KHR*/STP*/W*": "{#Control_L(Shift_L(w))}",
"KHR*/STP*/KP*": "{#Control_L(Shift_L(x))}",
"KHR*/STP*/KWR*": "{#Control_L(Shift_L(y))}",
"KHR*/STP*/STKPW*": "{#Control_L(Shift_L(z))}",
"KHR*/STP*/0": "{#Control_L(Shift_L(0))}",
"KHR*/STP*/1": "{#Control_L(Shift_L(1))}",
"KHR*/STP*/2": "{#Control_L(Shift_L(2))}",
"KHR*/STP*/3": "{#Control_L(Shift_L(3))}",
"KHR*/STP*/4": "{#Control_L(Shift_L(4))}",
"KHR*/STP*/5": "{#Control_L(Shift_L(5))}",
"KHR*/STP*/6": "{#Control_L(Shift_L(6))}",
"KHR*/STP*/7": "{#Control_L(Shift_L(7))}",
"KHR*/STP*/8": "{#Control_L(Shift_L(8))}",
"KHR*/STP*/9": "{#Control_L(Shift_L(9))}",
"KHR*/STP*/KH-FG": "{#Control_L(Shift_L(grave))}",
"KHR*/STP*/KW-BG": "{#Control_L(Shift_L(comma))}",
"KHR*/STP*/PR*EPB": "{#Control_L(Shift_L(parenright))}",
"KHR*/STP*/PREPB": "{#Control_L(Shift_L(parenleft))}",
"KHR*/STP*/PW*FP": "{#Control_L(Shift_L(BackSpace))}",
"KHR*/STP*/PWR*BGT": "{#Control_L(Shift_L(bracketright))}",
"KHR*/STP*/PWR-BGT": "{#Control_L(Shift_L(bracketleft))}",
"KHR*/STP*/R-R": "{#Control_L(Shift_L(Return))}",
"KHR*/STP*/S-P": "{#Control_L(Shift_L(space))}",
"KHR*/STP*/SP*S": "{#Control_L(Shift_L())}",
"KHR*/STP*/SPWHRAERB": "{#Control_L(Shift_L(backslash))}",
"KHR*/STP*/STPH-G": "{#Control_L(Shift_L(Right))}",
"KHR*/STP*/STPH-B": "{#Control_L(Shift_L(Down))}",
"KHR*/STP*/STPH-P": "{#Control_L(Shift_L(Up))}",
"KHR*/STP*/STPH-R": "{#Control_L(Shift_L(Left))}",
"KHR*/STP*/TA*B": "{#Control_L(Shift_L(Tab))}",
"KHR*/STP*/TKHRAO*ET": "{#Control_L(Shift_L(Delete))}",
"KHR*/A*": "{#Control_L(a)}",
"KHR*/PW*": "{#Control_L(b)}",
"KHR*/KR*": "{#Control_L(c)}",
"KHR*/TK*": "{#Control_L(d)}",
"KHR*/*E": "{#Control_L(e)}",
"KHR*/TP*": "{#Control_L(f)}",
"KHR*/TKPW*": "{#Control_L(g)}",
"KHR*/H*": "{#Control_L(h)}",
"KHR*/*EU": "{#Control_L(i)}",
"KHR*/SKWR*": "{#Control_L(j)}",
"KHR*/K*": "{#Control_L(k)}",
"KHR*/HR*": "{#Control_L(l)}",
"KHR*/PH*": "{#Control_L(m)}",
"KHR*/TPH*": "{#Control_L(n)}",
"KHR*/O*": "{#Control_L(o)}",
"KHR*/P*": "{#Control_L(p)}",
"KHR*/KW*": "{#Control_L(q)}",
"KHR*/R*": "{#Control_L(r)}",
"KHR*/S*": "{#Control_L(s)}",
"KHR*/T*": "{#Control_L(t)}",
"KHR*/*U": "{#Control_L(u)}",
"KHR*/SR*": "{#Control_L(v)}",
"KHR*/W*": "{#Control_L(w)}",
"KHR*/KP*": "{#Control_L(x)}",
"KHR*/KWR*": "{#Control_L(y)}",
"KHR*/STKPW*": "{#Control_L(z)}",
"KHR*/0": "{#Control_L(0)}",
"KHR*/1": "{#Control_L(1)}",
"KHR*/2": "{#Control_L(2)}",
"KHR*/3": "{#Control_L(3)}",
"KHR*/4": "{#Control_L(4)}",
"KHR*/5": "{#Control_L(5)}",
"KHR*/6": "{#Control_L(6)}",
"KHR*/7": "{#Control_L(7)}",
"KHR*/8": "{#Control_L(8)}",
"KHR*/9": "{#Control_L(9)}",
"KHR*/KH-FG": "{#Control_L(grave)}",
"KHR*/KW-BG": "{#Control_L(comma)}",
"KHR*/PR*EPB": "{#Control_L(parenright)}",
"KHR*/PREPB": "{#Control_L(parenleft)}",
"KHR*/PW*FP": "{#Control_L(BackSpace)}",
"KHR*/PWR*BGT": "{#Control_L(bracketright)}",
"KHR*/PWR-BGT": "{#Control_L(bracketleft)}",
"KHR*/R-R": "{#Control_L(Return)}",
"KHR*/S-P": "{#Control_L(space)}",
"KHR*/SP*S": "{#Control_L()}",
"KHR*/SPWHRAERB": "{#Control_L(backslash)}",
"KHR*/STPH-G": "{#Control_L(Right)}",
"KHR*/STPH-B": "{#Control_L(Down)}",
"KHR*/STPH-P": "{#Control_L(Up)}",
"KHR*/STPH-R": "{#Control_L(Left)}",
"KHR*/TA*B": "{#Control_L(Tab)}",
"KHR*/TKHRAO*ET": "{#Control_L(Delete)}",
"STP*/KHR*/A*": "{#Shift_L(Control_L(a))}",
"STP*/KHR*/PW*": "{#Shift_L(Control_L(b))}",
"STP*/KHR*/KR*": "{#Shift_L(Control_L(c))}",
"STP*/KHR*/TK*": "{#Shift_L(Control_L(d))}",
"STP*/KHR*/*E": "{#Shift_L(Control_L(e))}",
"STP*/KHR*/TP*": "{#Shift_L(Control_L(f))}",
"STP*/KHR*/TKPW*": "{#Shift_L(Control_L(g))}",
"STP*/KHR*/H*": "{#Shift_L(Control_L(h))}",
"STP*/KHR*/*EU": "{#Shift_L(Control_L(i))}",
"STP*/KHR*/SKWR*": "{#Shift_L(Control_L(j))}",
"STP*/KHR*/K*": "{#Shift_L(Control_L(k))}",
"STP*/KHR*/HR*": "{#Shift_L(Control_L(l))}",
"STP*/KHR*/PH*": "{#Shift_L(Control_L(m))}",
"STP*/KHR*/TPH*": "{#Shift_L(Control_L(n))}",
"STP*/KHR*/O*": "{#Shift_L(Control_L(o))}",
"STP*/KHR*/P*": "{#Shift_L(Control_L(p))}",
"STP*/KHR*/KW*": "{#Shift_L(Control_L(q))}",
"STP*/KHR*/R*": "{#Shift_L(Control_L(r))}",
"STP*/KHR*/S*": "{#Shift_L(Control_L(s))}",
"STP*/KHR*/T*": "{#Shift_L(Control_L(t))}",
"STP*/KHR*/*U": "{#Shift_L(Control_L(u))}",
"STP*/KHR*/SR*": "{#Shift_L(Control_L(v))}",
"STP*/KHR*/W*": "{#Shift_L(Control_L(w))}",
"STP*/KHR*/KP*": "{#Shift_L(Control_L(x))}",
"STP*/KHR*/KWR*": "{#Shift_L(Control_L(y))}",
"STP*/KHR*/STKPW*": "{#Shift_L(Control_L(z))}",
"STP*/KHR*/0": "{#Shift_L(Control_L(0))}",
"STP*/KHR*/1": "{#Shift_L(Control_L(1))}",
"STP*/KHR*/2": "{#Shift_L(Control_L(2))}",
"STP*/KHR*/3": "{#Shift_L(Control_L(3))}",
"STP*/KHR*/4": "{#Shift_L(Control_L(4))}",
"STP*/KHR*/5": "{#Shift_L(Control_L(5))}",
"STP*/KHR*/6": "{#Shift_L(Control_L(6))}",
"STP*/KHR*/7": "{#Shift_L(Control_L(7))}",
"STP*/KHR*/8": "{#Shift_L(Control_L(8))}",
"STP*/KHR*/9": "{#Shift_L(Control_L(9))}",
"STP*/KHR*/KH-FG": "{#Shift_L(Control_L(grave))}",
"STP*/KHR*/KW-BG": "{#Shift_L(Control_L(comma))}",
"STP*/KHR*/PR*EPB": "{#Shift_L(Control_L(parenright))}",
"STP*/KHR*/PREPB": "{#Shift_L(Control_L(parenleft))}",
"STP*/KHR*/PW*FP": "{#Shift_L(Control_L(BackSpace))}",
"STP*/KHR*/PWR*BGT": "{#Shift_L(Control_L(bracketright))}",
"STP*/KHR*/PWR-BGT": "{#Shift_L(Control_L(bracketleft))}",
"STP*/KHR*/R-R": "{#Shift_L(Control_L(Return))}",
"STP*/KHR*/S-P": "{#Shift_L(Control_L(space))}",
"STP*/KHR*/SP*S": "{#Shift_L(Control_L())}",
"STP*/KHR*/SPWHRAERB": "{#Shift_L(Control_L(backslash))}",
"STP*/KHR*/STPH-G": "{#Shift_L(Control_L(Right))}",
"STP*/KHR*/STPH-B": "{#Shift_L(Control_L(Down))}",
"STP*/KHR*/STPH-P": "{#Shift_L(Control_L(Up))}",
"STP*/KHR*/STPH-R": "{#Shift_L(Control_L(Left))}",
"STP*/KHR*/TA*B": "{#Shift_L(Control_L(Tab))}",
"STP*/KHR*/TKHRAO*ET": "{#Shift_L(Control_L(Delete))}",
"THRA*/STP*/A*": "{#Alt_L(Shift_L(a))}",
"THRA*/STP*/PW*": "{#Alt_L(Shift_L(b))}",
"THRA*/STP*/KR*": "{#Alt_L(Shift_L(c))}",
"THRA*/STP*/TK*": "{#Alt_L(Shift_L(d))}",
"THRA*/STP*/*E": "{#Alt_L(Shift_L(e))}",
"THRA*/STP*/TP*": "{#Alt_L(Shift_L(f))}",
"THRA*/STP*/TKPW*": "{#Alt_L(Shift_L(g))}",
"THRA*/STP*/H*": "{#Alt_L(Shift_L(h))}",
"THRA*/STP*/*EU": "{#Alt_L(Shift_L(i))}",
"THRA*/STP*/SKWR*": "{#Alt_L(Shift_L(j))}",
"THRA*/STP*/K*": "{#Alt_L(Shift_L(k))}",
"THRA*/STP*/HR*": "{#Alt_L(Shift_L(l))}",
"THRA*/STP*/PH*": "{#Alt_L(Shift_L(m))}",
"THRA*/STP*/TPH*": "{#Alt_L(Shift_L(n))}",
"THRA*/STP*/O*": "{#Alt_L(Shift_L(o))}",
"THRA*/STP*/P*": "{#Alt_L(Shift_L(p))}",
"THRA*/STP*/KW*": "{#Alt_L(Shift_L(q))}",
"THRA*/STP*/R*": "{#Alt_L(Shift_L(r))}",
"THRA*/STP*/S*": "{#Alt_L(Shift_L(s))}",
"THRA*/STP*/T*": "{#Alt_L(Shift_L(t))}",
"THRA*/STP*/*U": "{#Alt_L(Shift_L(u))}",
"THRA*/STP*/SR*": "{#Alt_L(Shift_L(v))}",
"THRA*/STP*/W*": "{#Alt_L(Shift_L(w))}",
"THRA*/STP*/KP*": "{#Alt_L(Shift_L(x))}",
"THRA*/STP*/KWR*": "{#Alt_L(Shift_L(y))}",
"THRA*/STP*/STKPW*": "{#Alt_L(Shift_L(z))}",
"THRA*/STP*/0": "{#Alt_L(Shift_L(0))}",
"THRA*/STP*/1": "{#Alt_L(Shift_L(1))}",
"THRA*/STP*/2": "{#Alt_L(Shift_L(2))}",
"THRA*/STP*/3": "{#Alt_L(Shift_L(3))}",
"THRA*/STP*/4": "{#Alt_L(Shift_L(4))}",
"THRA*/STP*/5": "{#Alt_L(Shift_L(5))}",
"THRA*/STP*/6": "{#Alt_L(Shift_L(6))}",
"THRA*/STP*/7": "{#Alt_L(Shift_L(7))}",
"THRA*/STP*/8": "{#Alt_L(Shift_L(8))}",
"THRA*/STP*/9": "{#Alt_L(Shift_L(9))}",
"THRA*/STP*/KH-FG": "{#Alt_L(Shift_L(grave))}",
"THRA*/STP*/KW-BG": "{#Alt_L(Shift_L(comma))}",
"THRA*/STP*/PR*EPB": "{#Alt_L(Shift_L(parenright))}",
"THRA*/STP*/PREPB": "{#Alt_L(Shift_L(parenleft))}",
"THRA*/STP*/PW*FP": "{#Alt_L(Shift_L(BackSpace))}",
"THRA*/STP*/PWR*BGT": "{#Alt_L(Shift_L(bracketright))}",
"THRA*/STP*/PWR-BGT": "{#Alt_L(Shift_L(bracketleft))}",
"THRA*/STP*/R-R": "{#Alt_L(Shift_L(Return))}",
"THRA*/STP*/S-P": "{#Alt_L(Shift_L(space))}",
"THRA*/STP*/SP*S": "{#Alt_L(Shift_L())}",
"THRA*/STP*/SPWHRAERB": "{#Alt_L(Shift_L(backslash))}",
"THRA*/STP*/STPH-G": "{#Alt_L(Shift_L(Right))}",
"THRA*/STP*/STPH-B": "{#Alt_L(Shift_L(Down))}",
"THRA*/STP*/STPH-P": "{#Alt_L(Shift_L(Up))}",
"THRA*/STP*/STPH-R": "{#Alt_L(Shift_L(Left))}",
"THRA*/STP*/TA*B": "{#Alt_L(Shift_L(Tab))}",
"THRA*/STP*/TKHRAO*ET": "{#Alt_L(Shift_L(Delete))}",
"THRA*/KHR*/STP*/A*": "{#Alt_L(Control_L(Shift_L(a)))}",
"THRA*/KHR*/STP*/PW*": "{#Alt_L(Control_L(Shift_L(b)))}",
"THRA*/KHR*/STP*/KR*": "{#Alt_L(Control_L(Shift_L(c)))}",
"THRA*/KHR*/STP*/TK*": "{#Alt_L(Control_L(Shift_L(d)))}",
"THRA*/KHR*/STP*/*E": "{#Alt_L(Control_L(Shift_L(e)))}",
"THRA*/KHR*/STP*/TP*": "{#Alt_L(Control_L(Shift_L(f)))}",
"THRA*/KHR*/STP*/TKPW*": "{#Alt_L(Control_L(Shift_L(g)))}",
"THRA*/KHR*/STP*/H*": "{#Alt_L(Control_L(Shift_L(h)))}",
"THRA*/KHR*/STP*/*EU": "{#Alt_L(Control_L(Shift_L(i)))}",
"THRA*/KHR*/STP*/SKWR*": "{#Alt_L(Control_L(Shift_L(j)))}",
"THRA*/KHR*/STP*/K*": "{#Alt_L(Control_L(Shift_L(k)))}",
"THRA*/KHR*/STP*/HR*": "{#Alt_L(Control_L(Shift_L(l)))}",
"THRA*/KHR*/STP*/PH*": "{#Alt_L(Control_L(Shift_L(m)))}",
"THRA*/KHR*/STP*/TPH*": "{#Alt_L(Control_L(Shift_L(n)))}",
"THRA*/KHR*/STP*/O*": "{#Alt_L(Control_L(Shift_L(o)))}",
"THRA*/KHR*/STP*/P*": "{#Alt_L(Control_L(Shift_L(p)))}",
"THRA*/KHR*/STP*/KW*": "{#Alt_L(Control_L(Shift_L(q)))}",
"THRA*/KHR*/STP*/R*": "{#Alt_L(Control_L(Shift_L(r)))}",
"THRA*/KHR*/STP*/S*": "{#Alt_L(Control_L(Shift_L(s)))}",
"THRA*/KHR*/STP*/T*": "{#Alt_L(Control_L(Shift_L(t)))}",
"THRA*/KHR*/STP*/*U": "{#Alt_L(Control_L(Shift_L(u)))}",
"THRA*/KHR*/STP*/SR*": "{#Alt_L(Control_L(Shift_L(v)))}",
"THRA*/KHR*/STP*/W*": "{#Alt_L(Control_L(Shift_L(w)))}",
"THRA*/KHR*/STP*/KP*": "{#Alt_L(Control_L(Shift_L(x)))}",
"THRA*/KHR*/STP*/KWR*": "{#Alt_L(Control_L(Shift_L(y)))}",
"THRA*/KHR*/STP*/STKPW*": "{#Alt_L(Control_L(Shift_L(z)))}",
"THRA*/KHR*/STP*/0": "{#Alt_L(Control_L(Shift_L(0)))}",
"THRA*/KHR*/STP*/1": "{#Alt_L(Control_L(Shift_L(1)))}",
"THRA*/KHR*/STP*/2": "{#Alt_L(Control_L(Shift_L(2)))}",
"THRA*/KHR*/STP*/3": "{#Alt_L(Control_L(Shift_L(3)))}",
"THRA*/KHR*/STP*/4": "{#Alt_L(Control_L(Shift_L(4)))}",
"THRA*/KHR*/STP*/5": "{#Alt_L(Control_L(Shift_L(5)))}",
"THRA*/KHR*/STP*/6": "{#Alt_L(Control_L(Shift_L(6)))}",
"THRA*/KHR*/STP*/7": "{#Alt_L(Control_L(Shift_L(7)))}",
"THRA*/KHR*/STP*/8": "{#Alt_L(Control_L(Shift_L(8)))}",
"THRA*/KHR*/STP*/9": "{#Alt_L(Control_L(Shift_L(9)))}",
"THRA*/KHR*/STP*/KH-FG": "{#Alt_L(Control_L(Shift_L(grave)))}",
"THRA*/KHR*/STP*/KW-BG": "{#Alt_L(Control_L(Shift_L(comma)))}",
"THRA*/KHR*/STP*/PR*EPB": "{#Alt_L(Control_L(Shift_L(parenright)))}",
"THRA*/KHR*/STP*/PREPB": "{#Alt_L(Control_L(Shift_L(parenleft)))}",
"THRA*/KHR*/STP*/PW*FP": "{#Alt_L(Control_L(Shift_L(BackSpace)))}",
"THRA*/KHR*/STP*/PWR*BGT": "{#Alt_L(Control_L(Shift_L(bracketright)))}",
"THRA*/KHR*/STP*/PWR-BGT": "{#Alt_L(Control_L(Shift_L(bracketleft)))}",
"THRA*/KHR*/STP*/R-R": "{#Alt_L(Control_L(Shift_L(Return)))}",
"THRA*/KHR*/STP*/S-P": "{#Alt_L(Control_L(Shift_L(space)))}",
"THRA*/KHR*/STP*/SP*S": "{#Alt_L(Control_L(Shift_L()))}",
"THRA*/KHR*/STP*/SPWHRAERB": "{#Alt_L(Control_L(Shift_L(backslash)))}",
"THRA*/KHR*/STP*/STPH-G": "{#Alt_L(Control_L(Shift_L(Right)))}",
"THRA*/KHR*/STP*/STPH-B": "{#Alt_L(Control_L(Shift_L(Down)))}",
"THRA*/KHR*/STP*/STPH-P": "{#Alt_L(Control_L(Shift_L(Up)))}",
"THRA*/KHR*/STP*/STPH-R": "{#Alt_L(Control_L(Shift_L(Left)))}",
"THRA*/KHR*/STP*/TA*B": "{#Alt_L(Control_L(Shift_L(Tab)))}",
"THRA*/KHR*/STP*/TKHRAO*ET": "{#Alt_L(Control_L(Shift_L(Delete)))}",
"THRA*/KHR*/A*": "{#Alt_L(Control_L(a))}",
"THRA*/KHR*/PW*": "{#Alt_L(Control_L(b))}",
"THRA*/KHR*/KR*": "{#Alt_L(Control_L(c))}",
"THRA*/KHR*/TK*": "{#Alt_L(Control_L(d))}",
"THRA*/KHR*/*E": "{#Alt_L(Control_L(e))}",
"THRA*/KHR*/TP*": "{#Alt_L(Control_L(f))}",
"THRA*/KHR*/TKPW*": "{#Alt_L(Control_L(g))}",
"THRA*/KHR*/H*": "{#Alt_L(Control_L(h))}",
"THRA*/KHR*/*EU": "{#Alt_L(Control_L(i))}",
"THRA*/KHR*/SKWR*": "{#Alt_L(Control_L(j))}",
"THRA*/KHR*/K*": "{#Alt_L(Control_L(k))}",
"THRA*/KHR*/HR*": "{#Alt_L(Control_L(l))}",
"THRA*/KHR*/PH*": "{#Alt_L(Control_L(m))}",
"THRA*/KHR*/TPH*": "{#Alt_L(Control_L(n))}",
"THRA*/KHR*/O*": "{#Alt_L(Control_L(o))}",
"THRA*/KHR*/P*": "{#Alt_L(Control_L(p))}",
"THRA*/KHR*/KW*": "{#Alt_L(Control_L(q))}",
"THRA*/KHR*/R*": "{#Alt_L(Control_L(r))}",
"THRA*/KHR*/S*": "{#Alt_L(Control_L(s))}",
"THRA*/KHR*/T*": "{#Alt_L(Control_L(t))}",
"THRA*/KHR*/*U": "{#Alt_L(Control_L(u))}",
"THRA*/KHR*/SR*": "{#Alt_L(Control_L(v))}",
"THRA*/KHR*/W*": "{#Alt_L(Control_L(w))}",
"THRA*/KHR*/KP*": "{#Alt_L(Control_L(x))}",
"THRA*/KHR*/KWR*": "{#Alt_L(Control_L(y))}",
"THRA*/KHR*/STKPW*": "{#Alt_L(Control_L(z))}",
"THRA*/KHR*/0": "{#Alt_L(Control_L(0))}",
"THRA*/KHR*/1": "{#Alt_L(Control_L(1))}",
"THRA*/KHR*/2": "{#Alt_L(Control_L(2))}",
"THRA*/KHR*/3": "{#Alt_L(Control_L(3))}",
"THRA*/KHR*/4": "{#Alt_L(Control_L(4))}",
"THRA*/KHR*/5": "{#Alt_L(Control_L(5))}",
"THRA*/KHR*/6": "{#Alt_L(Control_L(6))}",
"THRA*/KHR*/7": "{#Alt_L(Control_L(7))}",
"THRA*/KHR*/8": "{#Alt_L(Control_L(8))}",
"THRA*/KHR*/9": "{#Alt_L(Control_L(9))}",
"THRA*/KHR*/KH-FG": "{#Alt_L(Control_L(grave))}",
"THRA*/KHR*/KW-BG": "{#Alt_L(Control_L(comma))}",
"THRA*/KHR*/PR*EPB": "{#Alt_L(Control_L(parenright))}",
"THRA*/KHR*/PREPB": "{#Alt_L(Control_L(parenleft))}",
"THRA*/KHR*/PW*FP": "{#Alt_L(Control_L(BackSpace))}",
"THRA*/KHR*/PWR*BGT": "{#Alt_L(Control_L(bracketright))}",
"THRA*/KHR*/PWR-BGT": "{#Alt_L(Control_L(bracketleft))}",
"THRA*/KHR*/R-R": "{#Alt_L(Control_L(Return))}",
"THRA*/KHR*/S-P": "{#Alt_L(Control_L(space))}",
"THRA*/KHR*/SP*S": "{#Alt_L(Control_L())}",
"THRA*/KHR*/SPWHRAERB": "{#Alt_L(Control_L(backslash))}",
"THRA*/KHR*/STPH-G": "{#Alt_L(Control_L(Right))}",
"THRA*/KHR*/STPH-B": "{#Alt_L(Control_L(Down))}",
"THRA*/KHR*/STPH-P": "{#Alt_L(Control_L(Up))}",
"THRA*/KHR*/STPH-R": "{#Alt_L(Control_L(Left))}",
"THRA*/KHR*/TA*B": "{#Alt_L(Control_L(Tab))}",
"THRA*/KHR*/TKHRAO*ET": "{#Alt_L(Control_L(Delete))}",
"THRA*/STP*/KHR*/A*": "{#Alt_L(Shift_L(Control_L(a)))}",
"THRA*/STP*/KHR*/PW*": "{#Alt_L(Shift_L(Control_L(b)))}",
"THRA*/STP*/KHR*/KR*": "{#Alt_L(Shift_L(Control_L(c)))}",
"THRA*/STP*/KHR*/TK*": "{#Alt_L(Shift_L(Control_L(d)))}",
"THRA*/STP*/KHR*/*E": "{#Alt_L(Shift_L(Control_L(e)))}",
"THRA*/STP*/KHR*/TP*": "{#Alt_L(Shift_L(Control_L(f)))}",
"THRA*/STP*/KHR*/TKPW*": "{#Alt_L(Shift_L(Control_L(g)))}",
"THRA*/STP*/KHR*/H*": "{#Alt_L(Shift_L(Control_L(h)))}",
"THRA*/STP*/KHR*/*EU": "{#Alt_L(Shift_L(Control_L(i)))}",
"THRA*/STP*/KHR*/SKWR*": "{#Alt_L(Shift_L(Control_L(j)))}",
"THRA*/STP*/KHR*/K*": "{#Alt_L(Shift_L(Control_L(k)))}",
"THRA*/STP*/KHR*/HR*": "{#Alt_L(Shift_L(Control_L(l)))}",
"THRA*/STP*/KHR*/PH*": "{#Alt_L(Shift_L(Control_L(m)))}",
"THRA*/STP*/KHR*/TPH*": "{#Alt_L(Shift_L(Control_L(n)))}",
"THRA*/STP*/KHR*/O*": "{#Alt_L(Shift_L(Control_L(o)))}",
"THRA*/STP*/KHR*/P*": "{#Alt_L(Shift_L(Control_L(p)))}",
"THRA*/STP*/KHR*/KW*": "{#Alt_L(Shift_L(Control_L(q)))}",
"THRA*/STP*/KHR*/R*": "{#Alt_L(Shift_L(Control_L(r)))}",
"THRA*/STP*/KHR*/S*": "{#Alt_L(Shift_L(Control_L(s)))}",
"THRA*/STP*/KHR*/T*": "{#Alt_L(Shift_L(Control_L(t)))}",
"THRA*/STP*/KHR*/*U": "{#Alt_L(Shift_L(Control_L(u)))}",
"THRA*/STP*/KHR*/SR*": "{#Alt_L(Shift_L(Control_L(v)))}",
"THRA*/STP*/KHR*/W*": "{#Alt_L(Shift_L(Control_L(w)))}",
"THRA*/STP*/KHR*/KP*": "{#Alt_L(Shift_L(Control_L(x)))}",
"THRA*/STP*/KHR*/KWR*": "{#Alt_L(Shift_L(Control_L(y)))}",
"THRA*/STP*/KHR*/STKPW*": "{#Alt_L(Shift_L(Control_L(z)))}",
"THRA*/STP*/KHR*/0": "{#Alt_L(Shift_L(Control_L(0)))}",
"THRA*/STP*/KHR*/1": "{#Alt_L(Shift_L(Control_L(1)))}",
"THRA*/STP*/KHR*/2": "{#Alt_L(Shift_L(Control_L(2)))}",
"THRA*/STP*/KHR*/3": "{#Alt_L(Shift_L(Control_L(3)))}",
"THRA*/STP*/KHR*/4": "{#Alt_L(Shift_L(Control_L(4)))}",
"THRA*/STP*/KHR*/5": "{#Alt_L(Shift_L(Control_L(5)))}",
"THRA*/STP*/KHR*/6": "{#Alt_L(Shift_L(Control_L(6)))}",
"THRA*/STP*/KHR*/7": "{#Alt_L(Shift_L(Control_L(7)))}",
"THRA*/STP*/KHR*/8": "{#Alt_L(Shift_L(Control_L(8)))}",
"THRA*/STP*/KHR*/9": "{#Alt_L(Shift_L(Control_L(9)))}",
"THRA*/STP*/KHR*/KH-FG": "{#Alt_L(Shift_L(Control_L(grave)))}",
"THRA*/STP*/KHR*/KW-BG": "{#Alt_L(Shift_L(Control_L(comma)))}",
"THRA*/STP*/KHR*/PR*EPB": "{#Alt_L(Shift_L(Control_L(parenright)))}",
"THRA*/STP*/KHR*/PREPB": "{#Alt_L(Shift_L(Control_L(parenleft)))}",
"THRA*/STP*/KHR*/PW*FP": "{#Alt_L(Shift_L(Control_L(BackSpace)))}",
"THRA*/STP*/KHR*/PWR*BGT": "{#Alt_L(Shift_L(Control_L(bracketright)))}",
"THRA*/STP*/KHR*/PWR-BGT": "{#Alt_L(Shift_L(Control_L(bracketleft)))}",
"THRA*/STP*/KHR*/R-R": "{#Alt_L(Shift_L(Control_L(Return)))}",
"THRA*/STP*/KHR*/S-P": "{#Alt_L(Shift_L(Control_L(space)))}",
"THRA*/STP*/KHR*/SP*S": "{#Alt_L(Shift_L(Control_L()))}",
"THRA*/STP*/KHR*/SPWHRAERB": "{#Alt_L(Shift_L(Control_L(backslash)))}",
"THRA*/STP*/KHR*/STPH-G": "{#Alt_L(Shift_L(Control_L(Right)))}",
"THRA*/STP*/KHR*/STPH-B": "{#Alt_L(Shift_L(Control_L(Down)))}",
"THRA*/STP*/KHR*/STPH-P": "{#Alt_L(Shift_L(Control_L(Up)))}",
"THRA*/STP*/KHR*/STPH-R": "{#Alt_L(Shift_L(Control_L(Left)))}",
"THRA*/STP*/KHR*/TA*B": "{#Alt_L(Shift_L(Control_L(Tab)))}",
"THRA*/STP*/KHR*/TKHRAO*ET": "{#Alt_L(Shift_L(Control_L(Delete)))}",
"THRA*/A*": "{#Alt_L(a)}",
"THRA*/PW*": "{#Alt_L(b)}",
"THRA*/KR*": "{#Alt_L(c)}",
"THRA*/TK*": "{#Alt_L(d)}",
"THRA*/*E": "{#Alt_L(e)}",
"THRA*/TP*": "{#Alt_L(f)}",
"THRA*/TKPW*": "{#Alt_L(g)}",
"THRA*/H*": "{#Alt_L(h)}",
"THRA*/*EU": "{#Alt_L(i)}",
"THRA*/SKWR*": "{#Alt_L(j)}",
"THRA*/K*": "{#Alt_L(k)}",
"THRA*/HR*": "{#Alt_L(l)}",
"THRA*/PH*": "{#Alt_L(m)}",
"THRA*/TPH*": "{#Alt_L(n)}",
"THRA*/O*": "{#Alt_L(o)}",
"THRA*/P*": "{#Alt_L(p)}",
"THRA*/KW*": "{#Alt_L(q)}",
"THRA*/R*": "{#Alt_L(r)}",
"THRA*/S*": "{#Alt_L(s)}",
"THRA*/T*": "{#Alt_L(t)}",
"THRA*/*U": "{#Alt_L(u)}",
"THRA*/SR*": "{#Alt_L(v)}",
"THRA*/W*": "{#Alt_L(w)}",
"THRA*/KP*": "{#Alt_L(x)}",
"THRA*/KWR*": "{#Alt_L(y)}",
"THRA*/STKPW*": "{#Alt_L(z)}",
"THRA*/0": "{#Alt_L(0)}",
"THRA*/1": "{#Alt_L(1)}",
"THRA*/2": "{#Alt_L(2)}",
"THRA*/3": "{#Alt_L(3)}",
"THRA*/4": "{#Alt_L(4)}",
"THRA*/5": "{#Alt_L(5)}",
"THRA*/6": "{#Alt_L(6)}",
"THRA*/7": "{#Alt_L(7)}",
"THRA*/8": "{#Alt_L(8)}",
"THRA*/9": "{#Alt_L(9)}",
"THRA*/KH-FG": "{#Alt_L(grave)}",
"THRA*/KW-BG": "{#Alt_L(comma)}",
"THRA*/PR*EPB": "{#Alt_L(parenright)}",
"THRA*/PREPB": "{#Alt_L(parenleft)}",
"THRA*/PW*FP": "{#Alt_L(BackSpace)}",
"THRA*/PWR*BGT": "{#Alt_L(bracketright)}",
"THRA*/PWR-BGT": "{#Alt_L(bracketleft)}",
"THRA*/R-R": "{#Alt_L(Return)}",
"THRA*/S-P": "{#Alt_L(space)}",
"THRA*/SP*S": "{#Alt_L()}",
"THRA*/SPWHRAERB": "{#Alt_L(backslash)}",
"THRA*/STPH-G": "{#Alt_L(Right)}",
"THRA*/STPH-B": "{#Alt_L(Down)}",
"THRA*/STPH-P": "{#Alt_L(Up)}",
"THRA*/STPH-R": "{#Alt_L(Left)}",
"THRA*/TA*B": "{#Alt_L(Tab)}",
"THRA*/TKHRAO*ET": "{#Alt_L(Delete)}",
"KHR*/THRA*/A*": "{#Control_L(Alt_L(a))}",
"KHR*/THRA*/PW*": "{#Control_L(Alt_L(b))}",
"KHR*/THRA*/KR*": "{#Control_L(Alt_L(c))}",
"KHR*/THRA*/TK*": "{#Control_L(Alt_L(d))}",
"KHR*/THRA*/*E": "{#Control_L(Alt_L(e))}",
"KHR*/THRA*/TP*": "{#Control_L(Alt_L(f))}",
"KHR*/THRA*/TKPW*": "{#Control_L(Alt_L(g))}",
"KHR*/THRA*/H*": "{#Control_L(Alt_L(h))}",
"KHR*/THRA*/*EU": "{#Control_L(Alt_L(i))}",
"KHR*/THRA*/SKWR*": "{#Control_L(Alt_L(j))}",
"KHR*/THRA*/K*": "{#Control_L(Alt_L(k))}",
"KHR*/THRA*/HR*": "{#Control_L(Alt_L(l))}",
"KHR*/THRA*/PH*": "{#Control_L(Alt_L(m))}",
"KHR*/THRA*/TPH*": "{#Control_L(Alt_L(n))}",
"KHR*/THRA*/O*": "{#Control_L(Alt_L(o))}",
"KHR*/THRA*/P*": "{#Control_L(Alt_L(p))}",
"KHR*/THRA*/KW*": "{#Control_L(Alt_L(q))}",
"KHR*/THRA*/R*": "{#Control_L(Alt_L(r))}",
"KHR*/THRA*/S*": "{#Control_L(Alt_L(s))}",
"KHR*/THRA*/T*": "{#Control_L(Alt_L(t))}",
"KHR*/THRA*/*U": "{#Control_L(Alt_L(u))}",
"KHR*/THRA*/SR*": "{#Control_L(Alt_L(v))}",
"KHR*/THRA*/W*": "{#Control_L(Alt_L(w))}",
"KHR*/THRA*/KP*": "{#Control_L(Alt_L(x))}",
"KHR*/THRA*/KWR*": "{#Control_L(Alt_L(y))}",
"KHR*/THRA*/STKPW*": "{#Control_L(Alt_L(z))}",
"KHR*/THRA*/0": "{#Control_L(Alt_L(0))}",
"KHR*/THRA*/1": "{#Control_L(Alt_L(1))}",
"KHR*/THRA*/2": "{#Control_L(Alt_L(2))}",
"KHR*/THRA*/3": "{#Control_L(Alt_L(3))}",
"KHR*/THRA*/4": "{#Control_L(Alt_L(4))}",
"KHR*/THRA*/5": "{#Control_L(Alt_L(5))}",
"KHR*/THRA*/6": "{#Control_L(Alt_L(6))}",
"KHR*/THRA*/7": "{#Control_L(Alt_L(7))}",
"KHR*/THRA*/8": "{#Control_L(Alt_L(8))}",
"KHR*/THRA*/9": "{#Control_L(Alt_L(9))}",
"KHR*/THRA*/KH-FG": "{#Control_L(Alt_L(grave))}",
"KHR*/THRA*/KW-BG": "{#Control_L(Alt_L(comma))}",
"KHR*/THRA*/PR*EPB": "{#Control_L(Alt_L(parenright))}",
"KHR*/THRA*/PREPB": "{#Control_L(Alt_L(parenleft))}",
"KHR*/THRA*/PW*FP": "{#Control_L(Alt_L(BackSpace))}",
"KHR*/THRA*/PWR*BGT": "{#Control_L(Alt_L(bracketright))}",
"KHR*/THRA*/PWR-BGT": "{#Control_L(Alt_L(bracketleft))}",
"KHR*/THRA*/R-R": "{#Control_L(Alt_L(Return))}",
"KHR*/THRA*/S-P": "{#Control_L(Alt_L(space))}",
"KHR*/THRA*/SP*S": "{#Control_L(Alt_L())}",
"KHR*/THRA*/SPWHRAERB": "{#Control_L(Alt_L(backslash))}",
"KHR*/THRA*/STPH-G": "{#Control_L(Alt_L(Right))}",
"KHR*/THRA*/STPH-B": "{#Control_L(Alt_L(Down))}",
"KHR*/THRA*/STPH-P": "{#Control_L(Alt_L(Up))}",
"KHR*/THRA*/STPH-R": "{#Control_L(Alt_L(Left))}",
"KHR*/THRA*/TA*B": "{#Control_L(Alt_L(Tab))}",
"KHR*/THRA*/TKHRAO*ET": "{#Control_L(Alt_L(Delete))}",
"KHR*/A*": "{#Control_L(a)}",
"KHR*/PW*": "{#Control_L(b)}",
"KHR*/KR*": "{#Control_L(c)}",
"KHR*/TK*": "{#Control_L(d)}",
"KHR*/*E": "{#Control_L(e)}",
"KHR*/TP*": "{#Control_L(f)}",
"KHR*/TKPW*": "{#Control_L(g)}",
"KHR*/H*": "{#Control_L(h)}",
"KHR*/*EU": "{#Control_L(i)}",
"KHR*/SKWR*": "{#Control_L(j)}",
"KHR*/K*": "{#Control_L(k)}",
"KHR*/HR*": "{#Control_L(l)}",
"KHR*/PH*": "{#Control_L(m)}",
"KHR*/TPH*": "{#Control_L(n)}",
"KHR*/O*": "{#Control_L(o)}",
"KHR*/P*": "{#Control_L(p)}",
"KHR*/KW*": "{#Control_L(q)}",
"KHR*/R*": "{#Control_L(r)}",
"KHR*/S*": "{#Control_L(s)}",
"KHR*/T*": "{#Control_L(t)}",
"KHR*/*U": "{#Control_L(u)}",
"KHR*/SR*": "{#Control_L(v)}",
"KHR*/W*": "{#Control_L(w)}",
"KHR*/KP*": "{#Control_L(x)}",
"KHR*/KWR*": "{#Control_L(y)}",
"KHR*/STKPW*": "{#Control_L(z)}",
"KHR*/0": "{#Control_L(0)}",
"KHR*/1": "{#Control_L(1)}",
"KHR*/2": "{#Control_L(2)}",
"KHR*/3": "{#Control_L(3)}",
"KHR*/4": "{#Control_L(4)}",
"KHR*/5": "{#Control_L(5)}",
"KHR*/6": "{#Control_L(6)}",
"KHR*/7": "{#Control_L(7)}",
"KHR*/8": "{#Control_L(8)}",
"KHR*/9": "{#Control_L(9)}",
"KHR*/KH-FG": "{#Control_L(grave)}",
"KHR*/KW-BG": "{#Control_L(comma)}",
"KHR*/PR*EPB": "{#Control_L(parenright)}",
"KHR*/PREPB": "{#Control_L(parenleft)}",
"KHR*/PW*FP": "{#Control_L(BackSpace)}",
"KHR*/PWR*BGT": "{#Control_L(bracketright)}",
"KHR*/PWR-BGT": "{#Control_L(bracketleft)}",
"KHR*/R-R": "{#Control_L(Return)}",
"KHR*/S-P": "{#Control_L(space)}",
"KHR*/SP*S": "{#Control_L()}",
"KHR*/SPWHRAERB": "{#Control_L(backslash)}",
"KHR*/STPH-G": "{#Control_L(Right)}",
"KHR*/STPH-B": "{#Control_L(Down)}",
"KHR*/STPH-P": "{#Control_L(Up)}",
"KHR*/STPH-R": "{#Control_L(Left)}",
"KHR*/TA*B": "{#Control_L(Tab)}",
"KHR*/TKHRAO*ET": "{#Control_L(Delete)}",
"THRA*/KHR*/A*": "{#Alt_L(Control_L(a))}",
"THRA*/KHR*/PW*": "{#Alt_L(Control_L(b))}",
"THRA*/KHR*/KR*": "{#Alt_L(Control_L(c))}",
"THRA*/KHR*/TK*": "{#Alt_L(Control_L(d))}",
"THRA*/KHR*/*E": "{#Alt_L(Control_L(e))}",
"THRA*/KHR*/TP*": "{#Alt_L(Control_L(f))}",
"THRA*/KHR*/TKPW*": "{#Alt_L(Control_L(g))}",
"THRA*/KHR*/H*": "{#Alt_L(Control_L(h))}",
"THRA*/KHR*/*EU": "{#Alt_L(Control_L(i))}",
"THRA*/KHR*/SKWR*": "{#Alt_L(Control_L(j))}",
"THRA*/KHR*/K*": "{#Alt_L(Control_L(k))}",
"THRA*/KHR*/HR*": "{#Alt_L(Control_L(l))}",
"THRA*/KHR*/PH*": "{#Alt_L(Control_L(m))}",
"THRA*/KHR*/TPH*": "{#Alt_L(Control_L(n))}",
"THRA*/KHR*/O*": "{#Alt_L(Control_L(o))}",
"THRA*/KHR*/P*": "{#Alt_L(Control_L(p))}",
"THRA*/KHR*/KW*": "{#Alt_L(Control_L(q))}",
"THRA*/KHR*/R*": "{#Alt_L(Control_L(r))}",
"THRA*/KHR*/S*": "{#Alt_L(Control_L(s))}",
"THRA*/KHR*/T*": "{#Alt_L(Control_L(t))}",
"THRA*/KHR*/*U": "{#Alt_L(Control_L(u))}",
"THRA*/KHR*/SR*": "{#Alt_L(Control_L(v))}",
"THRA*/KHR*/W*": "{#Alt_L(Control_L(w))}",
"THRA*/KHR*/KP*": "{#Alt_L(Control_L(x))}",
"THRA*/KHR*/KWR*": "{#Alt_L(Control_L(y))}",
"THRA*/KHR*/STKPW*": "{#Alt_L(Control_L(z))}",
"THRA*/KHR*/0": "{#Alt_L(Control_L(0))}",
"THRA*/KHR*/1": "{#Alt_L(Control_L(1))}",
"THRA*/KHR*/2": "{#Alt_L(Control_L(2))}",
"THRA*/KHR*/3": "{#Alt_L(Control_L(3))}",
"THRA*/KHR*/4": "{#Alt_L(Control_L(4))}",
"THRA*/KHR*/5": "{#Alt_L(Control_L(5))}",
"THRA*/KHR*/6": "{#Alt_L(Control_L(6))}",
"THRA*/KHR*/7": "{#Alt_L(Control_L(7))}",
"THRA*/KHR*/8": "{#Alt_L(Control_L(8))}",
"THRA*/KHR*/9": "{#Alt_L(Control_L(9))}",
"THRA*/KHR*/KH-FG": "{#Alt_L(Control_L(grave))}",
"THRA*/KHR*/KW-BG": "{#Alt_L(Control_L(comma))}",
"THRA*/KHR*/PR*EPB": "{#Alt_L(Control_L(parenright))}",
"THRA*/KHR*/PREPB": "{#Alt_L(Control_L(parenleft))}",
"THRA*/KHR*/PW*FP": "{#Alt_L(Control_L(BackSpace))}",
"THRA*/KHR*/PWR*BGT": "{#Alt_L(Control_L(bracketright))}",
"THRA*/KHR*/PWR-BGT": "{#Alt_L(Control_L(bracketleft))}",
"THRA*/KHR*/R-R": "{#Alt_L(Control_L(Return))}",
"THRA*/KHR*/S-P": "{#Alt_L(Control_L(space))}",
"THRA*/KHR*/SP*S": "{#Alt_L(Control_L())}",
"THRA*/KHR*/SPWHRAERB": "{#Alt_L(Control_L(backslash))}",
"THRA*/KHR*/STPH-G": "{#Alt_L(Control_L(Right))}",
"THRA*/KHR*/STPH-B": "{#Alt_L(Control_L(Down))}",
"THRA*/KHR*/STPH-P": "{#Alt_L(Control_L(Up))}",
"THRA*/KHR*/STPH-R": "{#Alt_L(Control_L(Left))}",
"THRA*/KHR*/TA*B": "{#Alt_L(Control_L(Tab))}",
"THRA*/KHR*/TKHRAO*ET": "{#Alt_L(Control_L(Delete))}",
"STP*/THRA*/A*": "{#Shift_L(Alt_L(a))}",
"STP*/THRA*/PW*": "{#Shift_L(Alt_L(b))}",
"STP*/THRA*/KR*": "{#Shift_L(Alt_L(c))}",
"STP*/THRA*/TK*": "{#Shift_L(Alt_L(d))}",
"STP*/THRA*/*E": "{#Shift_L(Alt_L(e))}",
"STP*/THRA*/TP*": "{#Shift_L(Alt_L(f))}",
"STP*/THRA*/TKPW*": "{#Shift_L(Alt_L(g))}",
"STP*/THRA*/H*": "{#Shift_L(Alt_L(h))}",
"STP*/THRA*/*EU": "{#Shift_L(Alt_L(i))}",
"STP*/THRA*/SKWR*": "{#Shift_L(Alt_L(j))}",
"STP*/THRA*/K*": "{#Shift_L(Alt_L(k))}",
"STP*/THRA*/HR*": "{#Shift_L(Alt_L(l))}",
"STP*/THRA*/PH*": "{#Shift_L(Alt_L(m))}",
"STP*/THRA*/TPH*": "{#Shift_L(Alt_L(n))}",
"STP*/THRA*/O*": "{#Shift_L(Alt_L(o))}",
"STP*/THRA*/P*": "{#Shift_L(Alt_L(p))}",
"STP*/THRA*/KW*": "{#Shift_L(Alt_L(q))}",
"STP*/THRA*/R*": "{#Shift_L(Alt_L(r))}",
"STP*/THRA*/S*": "{#Shift_L(Alt_L(s))}",
"STP*/THRA*/T*": "{#Shift_L(Alt_L(t))}",
"STP*/THRA*/*U": "{#Shift_L(Alt_L(u))}",
"STP*/THRA*/SR*": "{#Shift_L(Alt_L(v))}",
"STP*/THRA*/W*": "{#Shift_L(Alt_L(w))}",
"STP*/THRA*/KP*": "{#Shift_L(Alt_L(x))}",
"STP*/THRA*/KWR*": "{#Shift_L(Alt_L(y))}",
"STP*/THRA*/STKPW*": "{#Shift_L(Alt_L(z))}",
"STP*/THRA*/0": "{#Shift_L(Alt_L(0))}",
"STP*/THRA*/1": "{#Shift_L(Alt_L(1))}",
"STP*/THRA*/2": "{#Shift_L(Alt_L(2))}",
"STP*/THRA*/3": "{#Shift_L(Alt_L(3))}",
"STP*/THRA*/4": "{#Shift_L(Alt_L(4))}",
"STP*/THRA*/5": "{#Shift_L(Alt_L(5))}",
"STP*/THRA*/6": "{#Shift_L(Alt_L(6))}",
"STP*/THRA*/7": "{#Shift_L(Alt_L(7))}",
"STP*/THRA*/8": "{#Shift_L(Alt_L(8))}",
"STP*/THRA*/9": "{#Shift_L(Alt_L(9))}",
"STP*/THRA*/KH-FG": "{#Shift_L(Alt_L(grave))}",
"STP*/THRA*/KW-BG": "{#Shift_L(Alt_L(comma))}",
"STP*/THRA*/PR*EPB": "{#Shift_L(Alt_L(parenright))}",
"STP*/THRA*/PREPB": "{#Shift_L(Alt_L(parenleft))}",
"STP*/THRA*/PW*FP": "{#Shift_L(Alt_L(BackSpace))}",
"STP*/THRA*/PWR*BGT": "{#Shift_L(Alt_L(bracketright))}",
"STP*/THRA*/PWR-BGT": "{#Shift_L(Alt_L(bracketleft))}",
"STP*/THRA*/R-R": "{#Shift_L(Alt_L(Return))}",
"STP*/THRA*/S-P": "{#Shift_L(Alt_L(space))}",
"STP*/THRA*/SP*S": "{#Shift_L(Alt_L())}",
"STP*/THRA*/SPWHRAERB": "{#Shift_L(Alt_L(backslash))}",
"STP*/THRA*/STPH-G": "{#Shift_L(Alt_L(Right))}",
"STP*/THRA*/STPH-B": "{#Shift_L(Alt_L(Down))}",
"STP*/THRA*/STPH-P": "{#Shift_L(Alt_L(Up))}",
"STP*/THRA*/STPH-R": "{#Shift_L(Alt_L(Left))}",
"STP*/THRA*/TA*B": "{#Shift_L(Alt_L(Tab))}",
"STP*/THRA*/TKHRAO*ET": "{#Shift_L(Alt_L(Delete))}",
"STP*/KHR*/THRA*/A*": "{#Shift_L(Control_L(Alt_L(a)))}",
"STP*/KHR*/THRA*/PW*": "{#Shift_L(Control_L(Alt_L(b)))}",
"STP*/KHR*/THRA*/KR*": "{#Shift_L(Control_L(Alt_L(c)))}",
"STP*/KHR*/THRA*/TK*": "{#Shift_L(Control_L(Alt_L(d)))}",
"STP*/KHR*/THRA*/*E": "{#Shift_L(Control_L(Alt_L(e)))}",
"STP*/KHR*/THRA*/TP*": "{#Shift_L(Control_L(Alt_L(f)))}",
"STP*/KHR*/THRA*/TKPW*": "{#Shift_L(Control_L(Alt_L(g)))}",
"STP*/KHR*/THRA*/H*": "{#Shift_L(Control_L(Alt_L(h)))}",
"STP*/KHR*/THRA*/*EU": "{#Shift_L(Control_L(Alt_L(i)))}",
"STP*/KHR*/THRA*/SKWR*": "{#Shift_L(Control_L(Alt_L(j)))}",
"STP*/KHR*/THRA*/K*": "{#Shift_L(Control_L(Alt_L(k)))}",
"STP*/KHR*/THRA*/HR*": "{#Shift_L(Control_L(Alt_L(l)))}",
"STP*/KHR*/THRA*/PH*": "{#Shift_L(Control_L(Alt_L(m)))}",
"STP*/KHR*/THRA*/TPH*": "{#Shift_L(Control_L(Alt_L(n)))}",
"STP*/KHR*/THRA*/O*": "{#Shift_L(Control_L(Alt_L(o)))}",
"STP*/KHR*/THRA*/P*": "{#Shift_L(Control_L(Alt_L(p)))}",
"STP*/KHR*/THRA*/KW*": "{#Shift_L(Control_L(Alt_L(q)))}",
"STP*/KHR*/THRA*/R*": "{#Shift_L(Control_L(Alt_L(r)))}",
"STP*/KHR*/THRA*/S*": "{#Shift_L(Control_L(Alt_L(s)))}",
"STP*/KHR*/THRA*/T*": "{#Shift_L(Control_L(Alt_L(t)))}",
"STP*/KHR*/THRA*/*U": "{#Shift_L(Control_L(Alt_L(u)))}",
"STP*/KHR*/THRA*/SR*": "{#Shift_L(Control_L(Alt_L(v)))}",
"STP*/KHR*/THRA*/W*": "{#Shift_L(Control_L(Alt_L(w)))}",
"STP*/KHR*/THRA*/KP*": "{#Shift_L(Control_L(Alt_L(x)))}",
"STP*/KHR*/THRA*/KWR*": "{#Shift_L(Control_L(Alt_L(y)))}",
"STP*/KHR*/THRA*/STKPW*": "{#Shift_L(Control_L(Alt_L(z)))}",
"STP*/KHR*/THRA*/0": "{#Shift_L(Control_L(Alt_L(0)))}",
"STP*/KHR*/THRA*/1": "{#Shift_L(Control_L(Alt_L(1)))}",
"STP*/KHR*/THRA*/2": "{#Shift_L(Control_L(Alt_L(2)))}",
"STP*/KHR*/THRA*/3": "{#Shift_L(Control_L(Alt_L(3)))}",
"STP*/KHR*/THRA*/4": "{#Shift_L(Control_L(Alt_L(4)))}",
"STP*/KHR*/THRA*/5": "{#Shift_L(Control_L(Alt_L(5)))}",
"STP*/KHR*/THRA*/6": "{#Shift_L(Control_L(Alt_L(6)))}",
"STP*/KHR*/THRA*/7": "{#Shift_L(Control_L(Alt_L(7)))}",
"STP*/KHR*/THRA*/8": "{#Shift_L(Control_L(Alt_L(8)))}",
"STP*/KHR*/THRA*/9": "{#Shift_L(Control_L(Alt_L(9)))}",
"STP*/KHR*/THRA*/KH-FG": "{#Shift_L(Control_L(Alt_L(grave)))}",
"STP*/KHR*/THRA*/KW-BG": "{#Shift_L(Control_L(Alt_L(comma)))}",
"STP*/KHR*/THRA*/PR*EPB": "{#Shift_L(Control_L(Alt_L(parenright)))}",
"STP*/KHR*/THRA*/PREPB": "{#Shift_L(Control_L(Alt_L(parenleft)))}",
"STP*/KHR*/THRA*/PW*FP": "{#Shift_L(Control_L(Alt_L(BackSpace)))}",
"STP*/KHR*/THRA*/PWR*BGT": "{#Shift_L(Control_L(Alt_L(bracketright)))}",
"STP*/KHR*/THRA*/PWR-BGT": "{#Shift_L(Control_L(Alt_L(bracketleft)))}",
"STP*/KHR*/THRA*/R-R": "{#Shift_L(Control_L(Alt_L(Return)))}",
"STP*/KHR*/THRA*/S-P": "{#Shift_L(Control_L(Alt_L(space)))}",
"STP*/KHR*/THRA*/SP*S": "{#Shift_L(Control_L(Alt_L()))}",
"STP*/KHR*/THRA*/SPWHRAERB": "{#Shift_L(Control_L(Alt_L(backslash)))}",
"STP*/KHR*/THRA*/STPH-G": "{#Shift_L(Control_L(Alt_L(Right)))}",
"STP*/KHR*/THRA*/STPH-B": "{#Shift_L(Control_L(Alt_L(Down)))}",
"STP*/KHR*/THRA*/STPH-P": "{#Shift_L(Control_L(Alt_L(Up)))}",
"STP*/KHR*/THRA*/STPH-R": "{#Shift_L(Control_L(Alt_L(Left)))}",
"STP*/KHR*/THRA*/TA*B": "{#Shift_L(Control_L(Alt_L(Tab)))}",
"STP*/KHR*/THRA*/TKHRAO*ET": "{#Shift_L(Control_L(Alt_L(Delete)))}",
"STP*/KHR*/A*": "{#Shift_L(Control_L(a))}",
"STP*/KHR*/PW*": "{#Shift_L(Control_L(b))}",
"STP*/KHR*/KR*": "{#Shift_L(Control_L(c))}",
"STP*/KHR*/TK*": "{#Shift_L(Control_L(d))}",
"STP*/KHR*/*E": "{#Shift_L(Control_L(e))}",
"STP*/KHR*/TP*": "{#Shift_L(Control_L(f))}",
"STP*/KHR*/TKPW*": "{#Shift_L(Control_L(g))}",
"STP*/KHR*/H*": "{#Shift_L(Control_L(h))}",
"STP*/KHR*/*EU": "{#Shift_L(Control_L(i))}",
"STP*/KHR*/SKWR*": "{#Shift_L(Control_L(j))}",
"STP*/KHR*/K*": "{#Shift_L(Control_L(k))}",
"STP*/KHR*/HR*": "{#Shift_L(Control_L(l))}",
"STP*/KHR*/PH*": "{#Shift_L(Control_L(m))}",
"STP*/KHR*/TPH*": "{#Shift_L(Control_L(n))}",
"STP*/KHR*/O*": "{#Shift_L(Control_L(o))}",
"STP*/KHR*/P*": "{#Shift_L(Control_L(p))}",
"STP*/KHR*/KW*": "{#Shift_L(Control_L(q))}",
"STP*/KHR*/R*": "{#Shift_L(Control_L(r))}",
"STP*/KHR*/S*": "{#Shift_L(Control_L(s))}",
"STP*/KHR*/T*": "{#Shift_L(Control_L(t))}",
"STP*/KHR*/*U": "{#Shift_L(Control_L(u))}",
"STP*/KHR*/SR*": "{#Shift_L(Control_L(v))}",
"STP*/KHR*/W*": "{#Shift_L(Control_L(w))}",
"STP*/KHR*/KP*": "{#Shift_L(Control_L(x))}",
"STP*/KHR*/KWR*": "{#Shift_L(Control_L(y))}",
"STP*/KHR*/STKPW*": "{#Shift_L(Control_L(z))}",
"STP*/KHR*/0": "{#Shift_L(Control_L(0))}",
"STP*/KHR*/1": "{#Shift_L(Control_L(1))}",
"STP*/KHR*/2": "{#Shift_L(Control_L(2))}",
"STP*/KHR*/3": "{#Shift_L(Control_L(3))}",
"STP*/KHR*/4": "{#Shift_L(Control_L(4))}",
"STP*/KHR*/5": "{#Shift_L(Control_L(5))}",
"STP*/KHR*/6": "{#Shift_L(Control_L(6))}",
"STP*/KHR*/7": "{#Shift_L(Control_L(7))}",
"STP*/KHR*/8": "{#Shift_L(Control_L(8))}",
"STP*/KHR*/9": "{#Shift_L(Control_L(9))}",
"STP*/KHR*/KH-FG": "{#Shift_L(Control_L(grave))}",
"STP*/KHR*/KW-BG": "{#Shift_L(Control_L(comma))}",
"STP*/KHR*/PR*EPB": "{#Shift_L(Control_L(parenright))}",
"STP*/KHR*/PREPB": "{#Shift_L(Control_L(parenleft))}",
"STP*/KHR*/PW*FP": "{#Shift_L(Control_L(BackSpace))}",
"STP*/KHR*/PWR*BGT": "{#Shift_L(Control_L(bracketright))}",
"STP*/KHR*/PWR-BGT": "{#Shift_L(Control_L(bracketleft))}",
"STP*/KHR*/R-R": "{#Shift_L(Control_L(Return))}",
"STP*/KHR*/S-P": "{#Shift_L(Control_L(space))}",
"STP*/KHR*/SP*S": "{#Shift_L(Control_L())}",
"STP*/KHR*/SPWHRAERB": "{#Shift_L(Control_L(backslash))}",
"STP*/KHR*/STPH-G": "{#Shift_L(Control_L(Right))}",
"STP*/KHR*/STPH-B": "{#Shift_L(Control_L(Down))}",
"STP*/KHR*/STPH-P": "{#Shift_L(Control_L(Up))}",
"STP*/KHR*/STPH-R": "{#Shift_L(Control_L(Left))}",
"STP*/KHR*/TA*B": "{#Shift_L(Control_L(Tab))}",
"STP*/KHR*/TKHRAO*ET": "{#Shift_L(Control_L(Delete))}",
"STP*/THRA*/KHR*/A*": "{#Shift_L(Alt_L(Control_L(a)))}",
"STP*/THRA*/KHR*/PW*": "{#Shift_L(Alt_L(Control_L(b)))}",
"STP*/THRA*/KHR*/KR*": "{#Shift_L(Alt_L(Control_L(c)))}",
"STP*/THRA*/KHR*/TK*": "{#Shift_L(Alt_L(Control_L(d)))}",
"STP*/THRA*/KHR*/*E": "{#Shift_L(Alt_L(Control_L(e)))}",
"STP*/THRA*/KHR*/TP*": "{#Shift_L(Alt_L(Control_L(f)))}",
"STP*/THRA*/KHR*/TKPW*": "{#Shift_L(Alt_L(Control_L(g)))}",
"STP*/THRA*/KHR*/H*": "{#Shift_L(Alt_L(Control_L(h)))}",
"STP*/THRA*/KHR*/*EU": "{#Shift_L(Alt_L(Control_L(i)))}",
"STP*/THRA*/KHR*/SKWR*": "{#Shift_L(Alt_L(Control_L(j)))}",
"STP*/THRA*/KHR*/K*": "{#Shift_L(Alt_L(Control_L(k)))}",
"STP*/THRA*/KHR*/HR*": "{#Shift_L(Alt_L(Control_L(l)))}",
"STP*/THRA*/KHR*/PH*": "{#Shift_L(Alt_L(Control_L(m)))}",
"STP*/THRA*/KHR*/TPH*": "{#Shift_L(Alt_L(Control_L(n)))}",
"STP*/THRA*/KHR*/O*": "{#Shift_L(Alt_L(Control_L(o)))}",
"STP*/THRA*/KHR*/P*": "{#Shift_L(Alt_L(Control_L(p)))}",
"STP*/THRA*/KHR*/KW*": "{#Shift_L(Alt_L(Control_L(q)))}",
"STP*/THRA*/KHR*/R*": "{#Shift_L(Alt_L(Control_L(r)))}",
"STP*/THRA*/KHR*/S*": "{#Shift_L(Alt_L(Control_L(s)))}",
"STP*/THRA*/KHR*/T*": "{#Shift_L(Alt_L(Control_L(t)))}",
"STP*/THRA*/KHR*/*U": "{#Shift_L(Alt_L(Control_L(u)))}",
"STP*/THRA*/KHR*/SR*": "{#Shift_L(Alt_L(Control_L(v)))}",
"STP*/THRA*/KHR*/W*": "{#Shift_L(Alt_L(Control_L(w)))}",
"STP*/THRA*/KHR*/KP*": "{#Shift_L(Alt_L(Control_L(x)))}",
"STP*/THRA*/KHR*/KWR*": "{#Shift_L(Alt_L(Control_L(y)))}",
"STP*/THRA*/KHR*/STKPW*": "{#Shift_L(Alt_L(Control_L(z)))}",
"STP*/THRA*/KHR*/0": "{#Shift_L(Alt_L(Control_L(0)))}",
"STP*/THRA*/KHR*/1": "{#Shift_L(Alt_L(Control_L(1)))}",
"STP*/THRA*/KHR*/2": "{#Shift_L(Alt_L(Control_L(2)))}",
"STP*/THRA*/KHR*/3": "{#Shift_L(Alt_L(Control_L(3)))}",
"STP*/THRA*/KHR*/4": "{#Shift_L(Alt_L(Control_L(4)))}",
"STP*/THRA*/KHR*/5": "{#Shift_L(Alt_L(Control_L(5)))}",
"STP*/THRA*/KHR*/6": "{#Shift_L(Alt_L(Control_L(6)))}",
"STP*/THRA*/KHR*/7": "{#Shift_L(Alt_L(Control_L(7)))}",
"STP*/THRA*/KHR*/8": "{#Shift_L(Alt_L(Control_L(8)))}",
"STP*/THRA*/KHR*/9": "{#Shift_L(Alt_L(Control_L(9)))}",
"STP*/THRA*/KHR*/KH-FG": "{#Shift_L(Alt_L(Control_L(grave)))}",
"STP*/THRA*/KHR*/KW-BG": "{#Shift_L(Alt_L(Control_L(comma)))}",
"STP*/THRA*/KHR*/PR*EPB": "{#Shift_L(Alt_L(Control_L(parenright)))}",
"STP*/THRA*/KHR*/PREPB": "{#Shift_L(Alt_L(Control_L(parenleft)))}",
"STP*/THRA*/KHR*/PW*FP": "{#Shift_L(Alt_L(Control_L(BackSpace)))}",
"STP*/THRA*/KHR*/PWR*BGT": "{#Shift_L(Alt_L(Control_L(bracketright)))}",
"STP*/THRA*/KHR*/PWR-BGT": "{#Shift_L(Alt_L(Control_L(bracketleft)))}",
"STP*/THRA*/KHR*/R-R": "{#Shift_L(Alt_L(Control_L(Return)))}",
"STP*/THRA*/KHR*/S-P": "{#Shift_L(Alt_L(Control_L(space)))}",
"STP*/THRA*/KHR*/SP*S": "{#Shift_L(Alt_L(Control_L()))}",
"STP*/THRA*/KHR*/SPWHRAERB": "{#Shift_L(Alt_L(Control_L(backslash)))}",
"STP*/THRA*/KHR*/STPH-G": "{#Shift_L(Alt_L(Control_L(Right)))}",
"STP*/THRA*/KHR*/STPH-B": "{#Shift_L(Alt_L(Control_L(Down)))}",
"STP*/THRA*/KHR*/STPH-P": "{#Shift_L(Alt_L(Control_L(Up)))}",
"STP*/THRA*/KHR*/STPH-R": "{#Shift_L(Alt_L(Control_L(Left)))}",
"STP*/THRA*/KHR*/TA*B": "{#Shift_L(Alt_L(Control_L(Tab)))}",
"STP*/THRA*/KHR*/TKHRAO*ET": "{#Shift_L(Alt_L(Control_L(Delete)))}",
"KPH*/STP*/A*": "{#Super_L(Shift_L(a))}",
"KPH*/STP*/PW*": "{#Super_L(Shift_L(b))}",
"KPH*/STP*/KR*": "{#Super_L(Shift_L(c))}",
"KPH*/STP*/TK*": "{#Super_L(Shift_L(d))}",
"KPH*/STP*/*E": "{#Super_L(Shift_L(e))}",
"KPH*/STP*/TP*": "{#Super_L(Shift_L(f))}",
"KPH*/STP*/TKPW*": "{#Super_L(Shift_L(g))}",
"KPH*/STP*/H*": "{#Super_L(Shift_L(h))}",
"KPH*/STP*/*EU": "{#Super_L(Shift_L(i))}",
"KPH*/STP*/SKWR*": "{#Super_L(Shift_L(j))}",
"KPH*/STP*/K*": "{#Super_L(Shift_L(k))}",
"KPH*/STP*/HR*": "{#Super_L(Shift_L(l))}",
"KPH*/STP*/PH*": "{#Super_L(Shift_L(m))}",
"KPH*/STP*/TPH*": "{#Super_L(Shift_L(n))}",
"KPH*/STP*/O*": "{#Super_L(Shift_L(o))}",
"KPH*/STP*/P*": "{#Super_L(Shift_L(p))}",
"KPH*/STP*/KW*": "{#Super_L(Shift_L(q))}",
"KPH*/STP*/R*": "{#Super_L(Shift_L(r))}",
"KPH*/STP*/S*": "{#Super_L(Shift_L(s))}",
"KPH*/STP*/T*": "{#Super_L(Shift_L(t))}",
"KPH*/STP*/*U": "{#Super_L(Shift_L(u))}",
"KPH*/STP*/SR*": "{#Super_L(Shift_L(v))}",
"KPH*/STP*/W*": "{#Super_L(Shift_L(w))}",
"KPH*/STP*/KP*": "{#Super_L(Shift_L(x))}",
"KPH*/STP*/KWR*": "{#Super_L(Shift_L(y))}",
"KPH*/STP*/STKPW*": "{#Super_L(Shift_L(z))}",
"KPH*/STP*/0": "{#Super_L(Shift_L(0))}",
"KPH*/STP*/1": "{#Super_L(Shift_L(1))}",
"KPH*/STP*/2": "{#Super_L(Shift_L(2))}",
"KPH*/STP*/3": "{#Super_L(Shift_L(3))}",
"KPH*/STP*/4": "{#Super_L(Shift_L(4))}",
"KPH*/STP*/5": "{#Super_L(Shift_L(5))}",
"KPH*/STP*/6": "{#Super_L(Shift_L(6))}",
"KPH*/STP*/7": "{#Super_L(Shift_L(7))}",
"KPH*/STP*/8": "{#Super_L(Shift_L(8))}",
"KPH*/STP*/9": "{#Super_L(Shift_L(9))}",
"KPH*/STP*/KH-FG": "{#Super_L(Shift_L(grave))}",
"KPH*/STP*/KW-BG": "{#Super_L(Shift_L(comma))}",
"KPH*/STP*/PR*EPB": "{#Super_L(Shift_L(parenright))}",
"KPH*/STP*/PREPB": "{#Super_L(Shift_L(parenleft))}",
"KPH*/STP*/PW*FP": "{#Super_L(Shift_L(BackSpace))}",
"KPH*/STP*/PWR*BGT": "{#Super_L(Shift_L(bracketright))}",
"KPH*/STP*/PWR-BGT": "{#Super_L(Shift_L(bracketleft))}",
"KPH*/STP*/R-R": "{#Super_L(Shift_L(Return))}",
"KPH*/STP*/S-P": "{#Super_L(Shift_L(space))}",
"KPH*/STP*/SP*S": "{#Super_L(Shift_L())}",
"KPH*/STP*/SPWHRAERB": "{#Super_L(Shift_L(backslash))}",
"KPH*/STP*/STPH-G": "{#Super_L(Shift_L(Right))}",
"KPH*/STP*/STPH-B": "{#Super_L(Shift_L(Down))}",
"KPH*/STP*/STPH-P": "{#Super_L(Shift_L(Up))}",
"KPH*/STP*/STPH-R": "{#Super_L(Shift_L(Left))}",
"KPH*/STP*/TA*B": "{#Super_L(Shift_L(Tab))}",
"KPH*/STP*/TKHRAO*ET": "{#Super_L(Shift_L(Delete))}",
"KPH*/THRA*/STP*/A*": "{#Super_L(Alt_L(Shift_L(a)))}",
"KPH*/THRA*/STP*/PW*": "{#Super_L(Alt_L(Shift_L(b)))}",
"KPH*/THRA*/STP*/KR*": "{#Super_L(Alt_L(Shift_L(c)))}",
"KPH*/THRA*/STP*/TK*": "{#Super_L(Alt_L(Shift_L(d)))}",
"KPH*/THRA*/STP*/*E": "{#Super_L(Alt_L(Shift_L(e)))}",
"KPH*/THRA*/STP*/TP*": "{#Super_L(Alt_L(Shift_L(f)))}",
"KPH*/THRA*/STP*/TKPW*": "{#Super_L(Alt_L(Shift_L(g)))}",
"KPH*/THRA*/STP*/H*": "{#Super_L(Alt_L(Shift_L(h)))}",
"KPH*/THRA*/STP*/*EU": "{#Super_L(Alt_L(Shift_L(i)))}",
"KPH*/THRA*/STP*/SKWR*": "{#Super_L(Alt_L(Shift_L(j)))}",
"KPH*/THRA*/STP*/K*": "{#Super_L(Alt_L(Shift_L(k)))}",
"KPH*/THRA*/STP*/HR*": "{#Super_L(Alt_L(Shift_L(l)))}",
"KPH*/THRA*/STP*/PH*": "{#Super_L(Alt_L(Shift_L(m)))}",
"KPH*/THRA*/STP*/TPH*": "{#Super_L(Alt_L(Shift_L(n)))}",
"KPH*/THRA*/STP*/O*": "{#Super_L(Alt_L(Shift_L(o)))}",
"KPH*/THRA*/STP*/P*": "{#Super_L(Alt_L(Shift_L(p)))}",
"KPH*/THRA*/STP*/KW*": "{#Super_L(Alt_L(Shift_L(q)))}",
"KPH*/THRA*/STP*/R*": "{#Super_L(Alt_L(Shift_L(r)))}",
"KPH*/THRA*/STP*/S*": "{#Super_L(Alt_L(Shift_L(s)))}",
"KPH*/THRA*/STP*/T*": "{#Super_L(Alt_L(Shift_L(t)))}",
"KPH*/THRA*/STP*/*U": "{#Super_L(Alt_L(Shift_L(u)))}",
"KPH*/THRA*/STP*/SR*": "{#Super_L(Alt_L(Shift_L(v)))}",
"KPH*/THRA*/STP*/W*": "{#Super_L(Alt_L(Shift_L(w)))}",
"KPH*/THRA*/STP*/KP*": "{#Super_L(Alt_L(Shift_L(x)))}",
"KPH*/THRA*/STP*/KWR*": "{#Super_L(Alt_L(Shift_L(y)))}",
"KPH*/THRA*/STP*/STKPW*": "{#Super_L(Alt_L(Shift_L(z)))}",
"KPH*/THRA*/STP*/0": "{#Super_L(Alt_L(Shift_L(0)))}",
"KPH*/THRA*/STP*/1": "{#Super_L(Alt_L(Shift_L(1)))}",
"KPH*/THRA*/STP*/2": "{#Super_L(Alt_L(Shift_L(2)))}",
"KPH*/THRA*/STP*/3": "{#Super_L(Alt_L(Shift_L(3)))}",
"KPH*/THRA*/STP*/4": "{#Super_L(Alt_L(Shift_L(4)))}",
"KPH*/THRA*/STP*/5": "{#Super_L(Alt_L(Shift_L(5)))}",
"KPH*/THRA*/STP*/6": "{#Super_L(Alt_L(Shift_L(6)))}",
"KPH*/THRA*/STP*/7": "{#Super_L(Alt_L(Shift_L(7)))}",
"KPH*/THRA*/STP*/8": "{#Super_L(Alt_L(Shift_L(8)))}",
"KPH*/THRA*/STP*/9": "{#Super_L(Alt_L(Shift_L(9)))}",
"KPH*/THRA*/STP*/KH-FG": "{#Super_L(Alt_L(Shift_L(grave)))}",
"KPH*/THRA*/STP*/KW-BG": "{#Super_L(Alt_L(Shift_L(comma)))}",
"KPH*/THRA*/STP*/PR*EPB": "{#Super_L(Alt_L(Shift_L(parenright)))}",
"KPH*/THRA*/STP*/PREPB": "{#Super_L(Alt_L(Shift_L(parenleft)))}",
"KPH*/THRA*/STP*/PW*FP": "{#Super_L(Alt_L(Shift_L(BackSpace)))}",
"KPH*/THRA*/STP*/PWR*BGT": "{#Super_L(Alt_L(Shift_L(bracketright)))}",
"KPH*/THRA*/STP*/PWR-BGT": "{#Super_L(Alt_L(Shift_L(bracketleft)))}",
"KPH*/THRA*/STP*/R-R": "{#Super_L(Alt_L(Shift_L(Return)))}",
"KPH*/THRA*/STP*/S-P": "{#Super_L(Alt_L(Shift_L(space)))}",
"KPH*/THRA*/STP*/SP*S": "{#Super_L(Alt_L(Shift_L()))}",
"KPH*/THRA*/STP*/SPWHRAERB": "{#Super_L(Alt_L(Shift_L(backslash)))}",
"KPH*/THRA*/STP*/STPH-G": "{#Super_L(Alt_L(Shift_L(Right)))}",
"KPH*/THRA*/STP*/STPH-B": "{#Super_L(Alt_L(Shift_L(Down)))}",
"KPH*/THRA*/STP*/STPH-P": "{#Super_L(Alt_L(Shift_L(Up)))}",
"KPH*/THRA*/STP*/STPH-R": "{#Super_L(Alt_L(Shift_L(Left)))}",
"KPH*/THRA*/STP*/TA*B": "{#Super_L(Alt_L(Shift_L(Tab)))}",
"KPH*/THRA*/STP*/TKHRAO*ET": "{#Super_L(Alt_L(Shift_L(Delete)))}",
"KPH*/THRA*/A*": "{#Super_L(Alt_L(a))}",
"KPH*/THRA*/PW*": "{#Super_L(Alt_L(b))}",
"KPH*/THRA*/KR*": "{#Super_L(Alt_L(c))}",
"KPH*/THRA*/TK*": "{#Super_L(Alt_L(d))}",
"KPH*/THRA*/*E": "{#Super_L(Alt_L(e))}",
"KPH*/THRA*/TP*": "{#Super_L(Alt_L(f))}",
"KPH*/THRA*/TKPW*": "{#Super_L(Alt_L(g))}",
"KPH*/THRA*/H*": "{#Super_L(Alt_L(h))}",
"KPH*/THRA*/*EU": "{#Super_L(Alt_L(i))}",
"KPH*/THRA*/SKWR*": "{#Super_L(Alt_L(j))}",
"KPH*/THRA*/K*": "{#Super_L(Alt_L(k))}",
"KPH*/THRA*/HR*": "{#Super_L(Alt_L(l))}",
"KPH*/THRA*/PH*": "{#Super_L(Alt_L(m))}",
"KPH*/THRA*/TPH*": "{#Super_L(Alt_L(n))}",
"KPH*/THRA*/O*": "{#Super_L(Alt_L(o))}",
"KPH*/THRA*/P*": "{#Super_L(Alt_L(p))}",
"KPH*/THRA*/KW*": "{#Super_L(Alt_L(q))}",
"KPH*/THRA*/R*": "{#Super_L(Alt_L(r))}",
"KPH*/THRA*/S*": "{#Super_L(Alt_L(s))}",
"KPH*/THRA*/T*": "{#Super_L(Alt_L(t))}",
"KPH*/THRA*/*U": "{#Super_L(Alt_L(u))}",
"KPH*/THRA*/SR*": "{#Super_L(Alt_L(v))}",
"KPH*/THRA*/W*": "{#Super_L(Alt_L(w))}",
"KPH*/THRA*/KP*": "{#Super_L(Alt_L(x))}",
"KPH*/THRA*/KWR*": "{#Super_L(Alt_L(y))}",
"KPH*/THRA*/STKPW*": "{#Super_L(Alt_L(z))}",
"KPH*/THRA*/0": "{#Super_L(Alt_L(0))}",
"KPH*/THRA*/1": "{#Super_L(Alt_L(1))}",
"KPH*/THRA*/2": "{#Super_L(Alt_L(2))}",
"KPH*/THRA*/3": "{#Super_L(Alt_L(3))}",
"KPH*/THRA*/4": "{#Super_L(Alt_L(4))}",
"KPH*/THRA*/5": "{#Super_L(Alt_L(5))}",
"KPH*/THRA*/6": "{#Super_L(Alt_L(6))}",
"KPH*/THRA*/7": "{#Super_L(Alt_L(7))}",
"KPH*/THRA*/8": "{#Super_L(Alt_L(8))}",
"KPH*/THRA*/9": "{#Super_L(Alt_L(9))}",
"KPH*/THRA*/KH-FG": "{#Super_L(Alt_L(grave))}",
"KPH*/THRA*/KW-BG": "{#Super_L(Alt_L(comma))}",
"KPH*/THRA*/PR*EPB": "{#Super_L(Alt_L(parenright))}",
"KPH*/THRA*/PREPB": "{#Super_L(Alt_L(parenleft))}",
"KPH*/THRA*/PW*FP": "{#Super_L(Alt_L(BackSpace))}",
"KPH*/THRA*/PWR*BGT": "{#Super_L(Alt_L(bracketright))}",
"KPH*/THRA*/PWR-BGT": "{#Super_L(Alt_L(bracketleft))}",
"KPH*/THRA*/R-R": "{#Super_L(Alt_L(Return))}",
"KPH*/THRA*/S-P": "{#Super_L(Alt_L(space))}",
"KPH*/THRA*/SP*S": "{#Super_L(Alt_L())}",
"KPH*/THRA*/SPWHRAERB": "{#Super_L(Alt_L(backslash))}",
"KPH*/THRA*/STPH-G": "{#Super_L(Alt_L(Right))}",
"KPH*/THRA*/STPH-B": "{#Super_L(Alt_L(Down))}",
"KPH*/THRA*/STPH-P": "{#Super_L(Alt_L(Up))}",
"KPH*/THRA*/STPH-R": "{#Super_L(Alt_L(Left))}",
"KPH*/THRA*/TA*B": "{#Super_L(Alt_L(Tab))}",
"KPH*/THRA*/TKHRAO*ET": "{#Super_L(Alt_L(Delete))}",
"KPH*/STP*/THRA*/A*": "{#Super_L(Shift_L(Alt_L(a)))}",
"KPH*/STP*/THRA*/PW*": "{#Super_L(Shift_L(Alt_L(b)))}",
"KPH*/STP*/THRA*/KR*": "{#Super_L(Shift_L(Alt_L(c)))}",
"KPH*/STP*/THRA*/TK*": "{#Super_L(Shift_L(Alt_L(d)))}",
"KPH*/STP*/THRA*/*E": "{#Super_L(Shift_L(Alt_L(e)))}",
"KPH*/STP*/THRA*/TP*": "{#Super_L(Shift_L(Alt_L(f)))}",
"KPH*/STP*/THRA*/TKPW*": "{#Super_L(Shift_L(Alt_L(g)))}",
"KPH*/STP*/THRA*/H*": "{#Super_L(Shift_L(Alt_L(h)))}",
"KPH*/STP*/THRA*/*EU": "{#Super_L(Shift_L(Alt_L(i)))}",
"KPH*/STP*/THRA*/SKWR*": "{#Super_L(Shift_L(Alt_L(j)))}",
"KPH*/STP*/THRA*/K*": "{#Super_L(Shift_L(Alt_L(k)))}",
"KPH*/STP*/THRA*/HR*": "{#Super_L(Shift_L(Alt_L(l)))}",
"KPH*/STP*/THRA*/PH*": "{#Super_L(Shift_L(Alt_L(m)))}",
"KPH*/STP*/THRA*/TPH*": "{#Super_L(Shift_L(Alt_L(n)))}",
"KPH*/STP*/THRA*/O*": "{#Super_L(Shift_L(Alt_L(o)))}",
"KPH*/STP*/THRA*/P*": "{#Super_L(Shift_L(Alt_L(p)))}",
"KPH*/STP*/THRA*/KW*": "{#Super_L(Shift_L(Alt_L(q)))}",
"KPH*/STP*/THRA*/R*": "{#Super_L(Shift_L(Alt_L(r)))}",
"KPH*/STP*/THRA*/S*": "{#Super_L(Shift_L(Alt_L(s)))}",
"KPH*/STP*/THRA*/T*": "{#Super_L(Shift_L(Alt_L(t)))}",
"KPH*/STP*/THRA*/*U": "{#Super_L(Shift_L(Alt_L(u)))}",
"KPH*/STP*/THRA*/SR*": "{#Super_L(Shift_L(Alt_L(v)))}",
"KPH*/STP*/THRA*/W*": "{#Super_L(Shift_L(Alt_L(w)))}",
"KPH*/STP*/THRA*/KP*": "{#Super_L(Shift_L(Alt_L(x)))}",
"KPH*/STP*/THRA*/KWR*": "{#Super_L(Shift_L(Alt_L(y)))}",
"KPH*/STP*/THRA*/STKPW*": "{#Super_L(Shift_L(Alt_L(z)))}",
"KPH*/STP*/THRA*/0": "{#Super_L(Shift_L(Alt_L(0)))}",
"KPH*/STP*/THRA*/1": "{#Super_L(Shift_L(Alt_L(1)))}",
"KPH*/STP*/THRA*/2": "{#Super_L(Shift_L(Alt_L(2)))}",
"KPH*/STP*/THRA*/3": "{#Super_L(Shift_L(Alt_L(3)))}",
"KPH*/STP*/THRA*/4": "{#Super_L(Shift_L(Alt_L(4)))}",
"KPH*/STP*/THRA*/5": "{#Super_L(Shift_L(Alt_L(5)))}",
"KPH*/STP*/THRA*/6": "{#Super_L(Shift_L(Alt_L(6)))}",
"KPH*/STP*/THRA*/7": "{#Super_L(Shift_L(Alt_L(7)))}",
"KPH*/STP*/THRA*/8": "{#Super_L(Shift_L(Alt_L(8)))}",
"KPH*/STP*/THRA*/9": "{#Super_L(Shift_L(Alt_L(9)))}",
"KPH*/STP*/THRA*/KH-FG": "{#Super_L(Shift_L(Alt_L(grave)))}",
"KPH*/STP*/THRA*/KW-BG": "{#Super_L(Shift_L(Alt_L(comma)))}",
"KPH*/STP*/THRA*/PR*EPB": "{#Super_L(Shift_L(Alt_L(parenright)))}",
"KPH*/STP*/THRA*/PREPB": "{#Super_L(Shift_L(Alt_L(parenleft)))}",
"KPH*/STP*/THRA*/PW*FP": "{#Super_L(Shift_L(Alt_L(BackSpace)))}",
"KPH*/STP*/THRA*/PWR*BGT": "{#Super_L(Shift_L(Alt_L(bracketright)))}",
"KPH*/STP*/THRA*/PWR-BGT": "{#Super_L(Shift_L(Alt_L(bracketleft)))}",
"KPH*/STP*/THRA*/R-R": "{#Super_L(Shift_L(Alt_L(Return)))}",
"KPH*/STP*/THRA*/S-P": "{#Super_L(Shift_L(Alt_L(space)))}",
"KPH*/STP*/THRA*/SP*S": "{#Super_L(Shift_L(Alt_L()))}",
"KPH*/STP*/THRA*/SPWHRAERB": "{#Super_L(Shift_L(Alt_L(backslash)))}",
"KPH*/STP*/THRA*/STPH-G": "{#Super_L(Shift_L(Alt_L(Right)))}",
"KPH*/STP*/THRA*/STPH-B": "{#Super_L(Shift_L(Alt_L(Down)))}",
"KPH*/STP*/THRA*/STPH-P": "{#Super_L(Shift_L(Alt_L(Up)))}",
"KPH*/STP*/THRA*/STPH-R": "{#Super_L(Shift_L(Alt_L(Left)))}",
"KPH*/STP*/THRA*/TA*B": "{#Super_L(Shift_L(Alt_L(Tab)))}",
"KPH*/STP*/THRA*/TKHRAO*ET": "{#Super_L(Shift_L(Alt_L(Delete)))}",
"KPH*/KHR*/STP*/A*": "{#Super_L(Control_L(Shift_L(a)))}",
"KPH*/KHR*/STP*/PW*": "{#Super_L(Control_L(Shift_L(b)))}",
"KPH*/KHR*/STP*/KR*": "{#Super_L(Control_L(Shift_L(c)))}",
"KPH*/KHR*/STP*/TK*": "{#Super_L(Control_L(Shift_L(d)))}",
"KPH*/KHR*/STP*/*E": "{#Super_L(Control_L(Shift_L(e)))}",
"KPH*/KHR*/STP*/TP*": "{#Super_L(Control_L(Shift_L(f)))}",
"KPH*/KHR*/STP*/TKPW*": "{#Super_L(Control_L(Shift_L(g)))}",
"KPH*/KHR*/STP*/H*": "{#Super_L(Control_L(Shift_L(h)))}",
"KPH*/KHR*/STP*/*EU": "{#Super_L(Control_L(Shift_L(i)))}",
"KPH*/KHR*/STP*/SKWR*": "{#Super_L(Control_L(Shift_L(j)))}",
"KPH*/KHR*/STP*/K*": "{#Super_L(Control_L(Shift_L(k)))}",
"KPH*/KHR*/STP*/HR*": "{#Super_L(Control_L(Shift_L(l)))}",
"KPH*/KHR*/STP*/PH*": "{#Super_L(Control_L(Shift_L(m)))}",
"KPH*/KHR*/STP*/TPH*": "{#Super_L(Control_L(Shift_L(n)))}",
"KPH*/KHR*/STP*/O*": "{#Super_L(Control_L(Shift_L(o)))}",
"KPH*/KHR*/STP*/P*": "{#Super_L(Control_L(Shift_L(p)))}",
"KPH*/KHR*/STP*/KW*": "{#Super_L(Control_L(Shift_L(q)))}",
"KPH*/KHR*/STP*/R*": "{#Super_L(Control_L(Shift_L(r)))}",
"KPH*/KHR*/STP*/S*": "{#Super_L(Control_L(Shift_L(s)))}",
"KPH*/KHR*/STP*/T*": "{#Super_L(Control_L(Shift_L(t)))}",
"KPH*/KHR*/STP*/*U": "{#Super_L(Control_L(Shift_L(u)))}",
"KPH*/KHR*/STP*/SR*": "{#Super_L(Control_L(Shift_L(v)))}",
"KPH*/KHR*/STP*/W*": "{#Super_L(Control_L(Shift_L(w)))}",
"KPH*/KHR*/STP*/KP*": "{#Super_L(Control_L(Shift_L(x)))}",
"KPH*/KHR*/STP*/KWR*": "{#Super_L(Control_L(Shift_L(y)))}",
"KPH*/KHR*/STP*/STKPW*": "{#Super_L(Control_L(Shift_L(z)))}",
"KPH*/KHR*/STP*/0": "{#Super_L(Control_L(Shift_L(0)))}",
"KPH*/KHR*/STP*/1": "{#Super_L(Control_L(Shift_L(1)))}",
"KPH*/KHR*/STP*/2": "{#Super_L(Control_L(Shift_L(2)))}",
"KPH*/KHR*/STP*/3": "{#Super_L(Control_L(Shift_L(3)))}",
"KPH*/KHR*/STP*/4": "{#Super_L(Control_L(Shift_L(4)))}",
"KPH*/KHR*/STP*/5": "{#Super_L(Control_L(Shift_L(5)))}",
"KPH*/KHR*/STP*/6": "{#Super_L(Control_L(Shift_L(6)))}",
"KPH*/KHR*/STP*/7": "{#Super_L(Control_L(Shift_L(7)))}",
"KPH*/KHR*/STP*/8": "{#Super_L(Control_L(Shift_L(8)))}",
"KPH*/KHR*/STP*/9": "{#Super_L(Control_L(Shift_L(9)))}",
"KPH*/KHR*/STP*/KH-FG": "{#Super_L(Control_L(Shift_L(grave)))}",
"KPH*/KHR*/STP*/KW-BG": "{#Super_L(Control_L(Shift_L(comma)))}",
"KPH*/KHR*/STP*/PR*EPB": "{#Super_L(Control_L(Shift_L(parenright)))}",
"KPH*/KHR*/STP*/PREPB": "{#Super_L(Control_L(Shift_L(parenleft)))}",
"KPH*/KHR*/STP*/PW*FP": "{#Super_L(Control_L(Shift_L(BackSpace)))}",
"KPH*/KHR*/STP*/PWR*BGT": "{#Super_L(Control_L(Shift_L(bracketright)))}",
"KPH*/KHR*/STP*/PWR-BGT": "{#Super_L(Control_L(Shift_L(bracketleft)))}",
"KPH*/KHR*/STP*/R-R": "{#Super_L(Control_L(Shift_L(Return)))}",
"KPH*/KHR*/STP*/S-P": "{#Super_L(Control_L(Shift_L(space)))}",
"KPH*/KHR*/STP*/SP*S": "{#Super_L(Control_L(Shift_L()))}",
"KPH*/KHR*/STP*/SPWHRAERB": "{#Super_L(Control_L(Shift_L(backslash)))}",
"KPH*/KHR*/STP*/STPH-G": "{#Super_L(Control_L(Shift_L(Right)))}",
"KPH*/KHR*/STP*/STPH-B": "{#Super_L(Control_L(Shift_L(Down)))}",
"KPH*/KHR*/STP*/STPH-P": "{#Super_L(Control_L(Shift_L(Up)))}",
"KPH*/KHR*/STP*/STPH-R": "{#Super_L(Control_L(Shift_L(Left)))}",
"KPH*/KHR*/STP*/TA*B": "{#Super_L(Control_L(Shift_L(Tab)))}",
"KPH*/KHR*/STP*/TKHRAO*ET": "{#Super_L(Control_L(Shift_L(Delete)))}",
"KPH*/KHR*/THRA*/STP*/A*": "{#Super_L(Control_L(Alt_L(Shift_L(a))))}",
"KPH*/KHR*/THRA*/STP*/PW*": "{#Super_L(Control_L(Alt_L(Shift_L(b))))}",
"KPH*/KHR*/THRA*/STP*/KR*": "{#Super_L(Control_L(Alt_L(Shift_L(c))))}",
"KPH*/KHR*/THRA*/STP*/TK*": "{#Super_L(Control_L(Alt_L(Shift_L(d))))}",
"KPH*/KHR*/THRA*/STP*/*E": "{#Super_L(Control_L(Alt_L(Shift_L(e))))}",
"KPH*/KHR*/THRA*/STP*/TP*": "{#Super_L(Control_L(Alt_L(Shift_L(f))))}",
"KPH*/KHR*/THRA*/STP*/TKPW*": "{#Super_L(Control_L(Alt_L(Shift_L(g))))}",
"KPH*/KHR*/THRA*/STP*/H*": "{#Super_L(Control_L(Alt_L(Shift_L(h))))}",
"KPH*/KHR*/THRA*/STP*/*EU": "{#Super_L(Control_L(Alt_L(Shift_L(i))))}",
"KPH*/KHR*/THRA*/STP*/SKWR*": "{#Super_L(Control_L(Alt_L(Shift_L(j))))}",
"KPH*/KHR*/THRA*/STP*/K*": "{#Super_L(Control_L(Alt_L(Shift_L(k))))}",
"KPH*/KHR*/THRA*/STP*/HR*": "{#Super_L(Control_L(Alt_L(Shift_L(l))))}",
"KPH*/KHR*/THRA*/STP*/PH*": "{#Super_L(Control_L(Alt_L(Shift_L(m))))}",
"KPH*/KHR*/THRA*/STP*/TPH*": "{#Super_L(Control_L(Alt_L(Shift_L(n))))}",
"KPH*/KHR*/THRA*/STP*/O*": "{#Super_L(Control_L(Alt_L(Shift_L(o))))}",
"KPH*/KHR*/THRA*/STP*/P*": "{#Super_L(Control_L(Alt_L(Shift_L(p))))}",
"KPH*/KHR*/THRA*/STP*/KW*": "{#Super_L(Control_L(Alt_L(Shift_L(q))))}",
"KPH*/KHR*/THRA*/STP*/R*": "{#Super_L(Control_L(Alt_L(Shift_L(r))))}",
"KPH*/KHR*/THRA*/STP*/S*": "{#Super_L(Control_L(Alt_L(Shift_L(s))))}",
"KPH*/KHR*/THRA*/STP*/T*": "{#Super_L(Control_L(Alt_L(Shift_L(t))))}",
"KPH*/KHR*/THRA*/STP*/*U": "{#Super_L(Control_L(Alt_L(Shift_L(u))))}",
"KPH*/KHR*/THRA*/STP*/SR*": "{#Super_L(Control_L(Alt_L(Shift_L(v))))}",
"KPH*/KHR*/THRA*/STP*/W*": "{#Super_L(Control_L(Alt_L(Shift_L(w))))}",
"KPH*/KHR*/THRA*/STP*/KP*": "{#Super_L(Control_L(Alt_L(Shift_L(x))))}",
"KPH*/KHR*/THRA*/STP*/KWR*": "{#Super_L(Control_L(Alt_L(Shift_L(y))))}",
"KPH*/KHR*/THRA*/STP*/STKPW*": "{#Super_L(Control_L(Alt_L(Shift_L(z))))}",
"KPH*/KHR*/THRA*/STP*/0": "{#Super_L(Control_L(Alt_L(Shift_L(0))))}",
"KPH*/KHR*/THRA*/STP*/1": "{#Super_L(Control_L(Alt_L(Shift_L(1))))}",
"KPH*/KHR*/THRA*/STP*/2": "{#Super_L(Control_L(Alt_L(Shift_L(2))))}",
"KPH*/KHR*/THRA*/STP*/3": "{#Super_L(Control_L(Alt_L(Shift_L(3))))}",
"KPH*/KHR*/THRA*/STP*/4": "{#Super_L(Control_L(Alt_L(Shift_L(4))))}",
"KPH*/KHR*/THRA*/STP*/5": "{#Super_L(Control_L(Alt_L(Shift_L(5))))}",
"KPH*/KHR*/THRA*/STP*/6": "{#Super_L(Control_L(Alt_L(Shift_L(6))))}",
"KPH*/KHR*/THRA*/STP*/7": "{#Super_L(Control_L(Alt_L(Shift_L(7))))}",
"KPH*/KHR*/THRA*/STP*/8": "{#Super_L(Control_L(Alt_L(Shift_L(8))))}",
"KPH*/KHR*/THRA*/STP*/9": "{#Super_L(Control_L(Alt_L(Shift_L(9))))}",
"KPH*/KHR*/THRA*/STP*/KH-FG": "{#Super_L(Control_L(Alt_L(Shift_L(grave))))}",
"KPH*/KHR*/THRA*/STP*/KW-BG": "{#Super_L(Control_L(Alt_L(Shift_L(comma))))}",
"KPH*/KHR*/THRA*/STP*/PR*EPB": "{#Super_L(Control_L(Alt_L(Shift_L(parenright))))}",
"KPH*/KHR*/THRA*/STP*/PREPB": "{#Super_L(Control_L(Alt_L(Shift_L(parenleft))))}",
"KPH*/KHR*/THRA*/STP*/PW*FP": "{#Super_L(Control_L(Alt_L(Shift_L(BackSpace))))}",
"KPH*/KHR*/THRA*/STP*/PWR*BGT": "{#Super_L(Control_L(Alt_L(Shift_L(bracketright))))}",
"KPH*/KHR*/THRA*/STP*/PWR-BGT": "{#Super_L(Control_L(Alt_L(Shift_L(bracketleft))))}",
"KPH*/KHR*/THRA*/STP*/R-R": "{#Super_L(Control_L(Alt_L(Shift_L(Return))))}",
"KPH*/KHR*/THRA*/STP*/S-P": "{#Super_L(Control_L(Alt_L(Shift_L(space))))}",
"KPH*/KHR*/THRA*/STP*/SP*S": "{#Super_L(Control_L(Alt_L(Shift_L())))}",
"KPH*/KHR*/THRA*/STP*/SPWHRAERB": "{#Super_L(Control_L(Alt_L(Shift_L(backslash))))}",
"KPH*/KHR*/THRA*/STP*/STPH-G": "{#Super_L(Control_L(Alt_L(Shift_L(Right))))}",
"KPH*/KHR*/THRA*/STP*/STPH-B": "{#Super_L(Control_L(Alt_L(Shift_L(Down))))}",
"KPH*/KHR*/THRA*/STP*/STPH-P": "{#Super_L(Control_L(Alt_L(Shift_L(Up))))}",
"KPH*/KHR*/THRA*/STP*/STPH-R": "{#Super_L(Control_L(Alt_L(Shift_L(Left))))}",
"KPH*/KHR*/THRA*/STP*/TA*B": "{#Super_L(Control_L(Alt_L(Shift_L(Tab))))}",
"KPH*/KHR*/THRA*/STP*/TKHRAO*ET": "{#Super_L(Control_L(Alt_L(Shift_L(Delete))))}",
"KPH*/KHR*/THRA*/A*": "{#Super_L(Control_L(Alt_L(a)))}",
"KPH*/KHR*/THRA*/PW*": "{#Super_L(Control_L(Alt_L(b)))}",
"KPH*/KHR*/THRA*/KR*": "{#Super_L(Control_L(Alt_L(c)))}",
"KPH*/KHR*/THRA*/TK*": "{#Super_L(Control_L(Alt_L(d)))}",
"KPH*/KHR*/THRA*/*E": "{#Super_L(Control_L(Alt_L(e)))}",
"KPH*/KHR*/THRA*/TP*": "{#Super_L(Control_L(Alt_L(f)))}",
"KPH*/KHR*/THRA*/TKPW*": "{#Super_L(Control_L(Alt_L(g)))}",
"KPH*/KHR*/THRA*/H*": "{#Super_L(Control_L(Alt_L(h)))}",
"KPH*/KHR*/THRA*/*EU": "{#Super_L(Control_L(Alt_L(i)))}",
"KPH*/KHR*/THRA*/SKWR*": "{#Super_L(Control_L(Alt_L(j)))}",
"KPH*/KHR*/THRA*/K*": "{#Super_L(Control_L(Alt_L(k)))}",
"KPH*/KHR*/THRA*/HR*": "{#Super_L(Control_L(Alt_L(l)))}",
"KPH*/KHR*/THRA*/PH*": "{#Super_L(Control_L(Alt_L(m)))}",
"KPH*/KHR*/THRA*/TPH*": "{#Super_L(Control_L(Alt_L(n)))}",
"KPH*/KHR*/THRA*/O*": "{#Super_L(Control_L(Alt_L(o)))}",
"KPH*/KHR*/THRA*/P*": "{#Super_L(Control_L(Alt_L(p)))}",
"KPH*/KHR*/THRA*/KW*": "{#Super_L(Control_L(Alt_L(q)))}",
"KPH*/KHR*/THRA*/R*": "{#Super_L(Control_L(Alt_L(r)))}",
"KPH*/KHR*/THRA*/S*": "{#Super_L(Control_L(Alt_L(s)))}",
"KPH*/KHR*/THRA*/T*": "{#Super_L(Control_L(Alt_L(t)))}",
"KPH*/KHR*/THRA*/*U": "{#Super_L(Control_L(Alt_L(u)))}",
"KPH*/KHR*/THRA*/SR*": "{#Super_L(Control_L(Alt_L(v)))}",
"KPH*/KHR*/THRA*/W*": "{#Super_L(Control_L(Alt_L(w)))}",
"KPH*/KHR*/THRA*/KP*": "{#Super_L(Control_L(Alt_L(x)))}",
"KPH*/KHR*/THRA*/KWR*": "{#Super_L(Control_L(Alt_L(y)))}",
"KPH*/KHR*/THRA*/STKPW*": "{#Super_L(Control_L(Alt_L(z)))}",
"KPH*/KHR*/THRA*/0": "{#Super_L(Control_L(Alt_L(0)))}",
"KPH*/KHR*/THRA*/1": "{#Super_L(Control_L(Alt_L(1)))}",
"KPH*/KHR*/THRA*/2": "{#Super_L(Control_L(Alt_L(2)))}",
"KPH*/KHR*/THRA*/3": "{#Super_L(Control_L(Alt_L(3)))}",
"KPH*/KHR*/THRA*/4": "{#Super_L(Control_L(Alt_L(4)))}",
"KPH*/KHR*/THRA*/5": "{#Super_L(Control_L(Alt_L(5)))}",
"KPH*/KHR*/THRA*/6": "{#Super_L(Control_L(Alt_L(6)))}",
"KPH*/KHR*/THRA*/7": "{#Super_L(Control_L(Alt_L(7)))}",
"KPH*/KHR*/THRA*/8": "{#Super_L(Control_L(Alt_L(8)))}",
"KPH*/KHR*/THRA*/9": "{#Super_L(Control_L(Alt_L(9)))}",
"KPH*/KHR*/THRA*/KH-FG": "{#Super_L(Control_L(Alt_L(grave)))}",
"KPH*/KHR*/THRA*/KW-BG": "{#Super_L(Control_L(Alt_L(comma)))}",
"KPH*/KHR*/THRA*/PR*EPB": "{#Super_L(Control_L(Alt_L(parenright)))}",
"KPH*/KHR*/THRA*/PREPB": "{#Super_L(Control_L(Alt_L(parenleft)))}",
"KPH*/KHR*/THRA*/PW*FP": "{#Super_L(Control_L(Alt_L(BackSpace)))}",
"KPH*/KHR*/THRA*/PWR*BGT": "{#Super_L(Control_L(Alt_L(bracketright)))}",
"KPH*/KHR*/THRA*/PWR-BGT": "{#Super_L(Control_L(Alt_L(bracketleft)))}",
"KPH*/KHR*/THRA*/R-R": "{#Super_L(Control_L(Alt_L(Return)))}",
"KPH*/KHR*/THRA*/S-P": "{#Super_L(Control_L(Alt_L(space)))}",
"KPH*/KHR*/THRA*/SP*S": "{#Super_L(Control_L(Alt_L()))}",
"KPH*/KHR*/THRA*/SPWHRAERB": "{#Super_L(Control_L(Alt_L(backslash)))}",
"KPH*/KHR*/THRA*/STPH-G": "{#Super_L(Control_L(Alt_L(Right)))}",
"KPH*/KHR*/THRA*/STPH-B": "{#Super_L(Control_L(Alt_L(Down)))}",
"KPH*/KHR*/THRA*/STPH-P": "{#Super_L(Control_L(Alt_L(Up)))}",
"KPH*/KHR*/THRA*/STPH-R": "{#Super_L(Control_L(Alt_L(Left)))}",
"KPH*/KHR*/THRA*/TA*B": "{#Super_L(Control_L(Alt_L(Tab)))}",
"KPH*/KHR*/THRA*/TKHRAO*ET": "{#Super_L(Control_L(Alt_L(Delete)))}",
"KPH*/KHR*/STP*/THRA*/A*": "{#Super_L(Control_L(Shift_L(Alt_L(a))))}",
"KPH*/KHR*/STP*/THRA*/PW*": "{#Super_L(Control_L(Shift_L(Alt_L(b))))}",
"KPH*/KHR*/STP*/THRA*/KR*": "{#Super_L(Control_L(Shift_L(Alt_L(c))))}",
"KPH*/KHR*/STP*/THRA*/TK*": "{#Super_L(Control_L(Shift_L(Alt_L(d))))}",
"KPH*/KHR*/STP*/THRA*/*E": "{#Super_L(Control_L(Shift_L(Alt_L(e))))}",
"KPH*/KHR*/STP*/THRA*/TP*": "{#Super_L(Control_L(Shift_L(Alt_L(f))))}",
"KPH*/KHR*/STP*/THRA*/TKPW*": "{#Super_L(Control_L(Shift_L(Alt_L(g))))}",
"KPH*/KHR*/STP*/THRA*/H*": "{#Super_L(Control_L(Shift_L(Alt_L(h))))}",
"KPH*/KHR*/STP*/THRA*/*EU": "{#Super_L(Control_L(Shift_L(Alt_L(i))))}",
"KPH*/KHR*/STP*/THRA*/SKWR*": "{#Super_L(Control_L(Shift_L(Alt_L(j))))}",
"KPH*/KHR*/STP*/THRA*/K*": "{#Super_L(Control_L(Shift_L(Alt_L(k))))}",
"KPH*/KHR*/STP*/THRA*/HR*": "{#Super_L(Control_L(Shift_L(Alt_L(l))))}",
"KPH*/KHR*/STP*/THRA*/PH*": "{#Super_L(Control_L(Shift_L(Alt_L(m))))}",
"KPH*/KHR*/STP*/THRA*/TPH*": "{#Super_L(Control_L(Shift_L(Alt_L(n))))}",
"KPH*/KHR*/STP*/THRA*/O*": "{#Super_L(Control_L(Shift_L(Alt_L(o))))}",
"KPH*/KHR*/STP*/THRA*/P*": "{#Super_L(Control_L(Shift_L(Alt_L(p))))}",
"KPH*/KHR*/STP*/THRA*/KW*": "{#Super_L(Control_L(Shift_L(Alt_L(q))))}",
"KPH*/KHR*/STP*/THRA*/R*": "{#Super_L(Control_L(Shift_L(Alt_L(r))))}",
"KPH*/KHR*/STP*/THRA*/S*": "{#Super_L(Control_L(Shift_L(Alt_L(s))))}",
"KPH*/KHR*/STP*/THRA*/T*": "{#Super_L(Control_L(Shift_L(Alt_L(t))))}",
"KPH*/KHR*/STP*/THRA*/*U": "{#Super_L(Control_L(Shift_L(Alt_L(u))))}",
"KPH*/KHR*/STP*/THRA*/SR*": "{#Super_L(Control_L(Shift_L(Alt_L(v))))}",
"KPH*/KHR*/STP*/THRA*/W*": "{#Super_L(Control_L(Shift_L(Alt_L(w))))}",
"KPH*/KHR*/STP*/THRA*/KP*": "{#Super_L(Control_L(Shift_L(Alt_L(x))))}",
"KPH*/KHR*/STP*/THRA*/KWR*": "{#Super_L(Control_L(Shift_L(Alt_L(y))))}",
"KPH*/KHR*/STP*/THRA*/STKPW*": "{#Super_L(Control_L(Shift_L(Alt_L(z))))}",
"KPH*/KHR*/STP*/THRA*/0": "{#Super_L(Control_L(Shift_L(Alt_L(0))))}",
"KPH*/KHR*/STP*/THRA*/1": "{#Super_L(Control_L(Shift_L(Alt_L(1))))}",
"KPH*/KHR*/STP*/THRA*/2": "{#Super_L(Control_L(Shift_L(Alt_L(2))))}",
"KPH*/KHR*/STP*/THRA*/3": "{#Super_L(Control_L(Shift_L(Alt_L(3))))}",
"KPH*/KHR*/STP*/THRA*/4": "{#Super_L(Control_L(Shift_L(Alt_L(4))))}",
"KPH*/KHR*/STP*/THRA*/5": "{#Super_L(Control_L(Shift_L(Alt_L(5))))}",
"KPH*/KHR*/STP*/THRA*/6": "{#Super_L(Control_L(Shift_L(Alt_L(6))))}",
"KPH*/KHR*/STP*/THRA*/7": "{#Super_L(Control_L(Shift_L(Alt_L(7))))}",
"KPH*/KHR*/STP*/THRA*/8": "{#Super_L(Control_L(Shift_L(Alt_L(8))))}",
"KPH*/KHR*/STP*/THRA*/9": "{#Super_L(Control_L(Shift_L(Alt_L(9))))}",
"KPH*/KHR*/STP*/THRA*/KH-FG": "{#Super_L(Control_L(Shift_L(Alt_L(grave))))}",
"KPH*/KHR*/STP*/THRA*/KW-BG": "{#Super_L(Control_L(Shift_L(Alt_L(comma))))}",
"KPH*/KHR*/STP*/THRA*/PR*EPB": "{#Super_L(Control_L(Shift_L(Alt_L(parenright))))}",
"KPH*/KHR*/STP*/THRA*/PREPB": "{#Super_L(Control_L(Shift_L(Alt_L(parenleft))))}",
"KPH*/KHR*/STP*/THRA*/PW*FP": "{#Super_L(Control_L(Shift_L(Alt_L(BackSpace))))}",
"KPH*/KHR*/STP*/THRA*/PWR*BGT": "{#Super_L(Control_L(Shift_L(Alt_L(bracketright))))}",
"KPH*/KHR*/STP*/THRA*/PWR-BGT": "{#Super_L(Control_L(Shift_L(Alt_L(bracketleft))))}",
"KPH*/KHR*/STP*/THRA*/R-R": "{#Super_L(Control_L(Shift_L(Alt_L(Return))))}",
"KPH*/KHR*/STP*/THRA*/S-P": "{#Super_L(Control_L(Shift_L(Alt_L(space))))}",
"KPH*/KHR*/STP*/THRA*/SP*S": "{#Super_L(Control_L(Shift_L(Alt_L())))}",
"KPH*/KHR*/STP*/THRA*/SPWHRAERB": "{#Super_L(Control_L(Shift_L(Alt_L(backslash))))}",
"KPH*/KHR*/STP*/THRA*/STPH-G": "{#Super_L(Control_L(Shift_L(Alt_L(Right))))}",
"KPH*/KHR*/STP*/THRA*/STPH-B": "{#Super_L(Control_L(Shift_L(Alt_L(Down))))}",
"KPH*/KHR*/STP*/THRA*/STPH-P": "{#Super_L(Control_L(Shift_L(Alt_L(Up))))}",
"KPH*/KHR*/STP*/THRA*/STPH-R": "{#Super_L(Control_L(Shift_L(Alt_L(Left))))}",
"KPH*/KHR*/STP*/THRA*/TA*B": "{#Super_L(Control_L(Shift_L(Alt_L(Tab))))}",
"KPH*/KHR*/STP*/THRA*/TKHRAO*ET": "{#Super_L(Control_L(Shift_L(Alt_L(Delete))))}",
"KPH*/STP*/A*": "{#Super_L(Shift_L(a))}",
"KPH*/STP*/PW*": "{#Super_L(Shift_L(b))}",
"KPH*/STP*/KR*": "{#Super_L(Shift_L(c))}",
"KPH*/STP*/TK*": "{#Super_L(Shift_L(d))}",
"KPH*/STP*/*E": "{#Super_L(Shift_L(e))}",
"KPH*/STP*/TP*": "{#Super_L(Shift_L(f))}",
"KPH*/STP*/TKPW*": "{#Super_L(Shift_L(g))}",
"KPH*/STP*/H*": "{#Super_L(Shift_L(h))}",
"KPH*/STP*/*EU": "{#Super_L(Shift_L(i))}",
"KPH*/STP*/SKWR*": "{#Super_L(Shift_L(j))}",
"KPH*/STP*/K*": "{#Super_L(Shift_L(k))}",
"KPH*/STP*/HR*": "{#Super_L(Shift_L(l))}",
"KPH*/STP*/PH*": "{#Super_L(Shift_L(m))}",
"KPH*/STP*/TPH*": "{#Super_L(Shift_L(n))}",
"KPH*/STP*/O*": "{#Super_L(Shift_L(o))}",
"KPH*/STP*/P*": "{#Super_L(Shift_L(p))}",
"KPH*/STP*/KW*": "{#Super_L(Shift_L(q))}",
"KPH*/STP*/R*": "{#Super_L(Shift_L(r))}",
"KPH*/STP*/S*": "{#Super_L(Shift_L(s))}",
"KPH*/STP*/T*": "{#Super_L(Shift_L(t))}",
"KPH*/STP*/*U": "{#Super_L(Shift_L(u))}",
"KPH*/STP*/SR*": "{#Super_L(Shift_L(v))}",
"KPH*/STP*/W*": "{#Super_L(Shift_L(w))}",
"KPH*/STP*/KP*": "{#Super_L(Shift_L(x))}",
"KPH*/STP*/KWR*": "{#Super_L(Shift_L(y))}",
"KPH*/STP*/STKPW*": "{#Super_L(Shift_L(z))}",
"KPH*/STP*/0": "{#Super_L(Shift_L(0))}",
"KPH*/STP*/1": "{#Super_L(Shift_L(1))}",
"KPH*/STP*/2": "{#Super_L(Shift_L(2))}",
"KPH*/STP*/3": "{#Super_L(Shift_L(3))}",
"KPH*/STP*/4": "{#Super_L(Shift_L(4))}",
"KPH*/STP*/5": "{#Super_L(Shift_L(5))}",
"KPH*/STP*/6": "{#Super_L(Shift_L(6))}",
"KPH*/STP*/7": "{#Super_L(Shift_L(7))}",
"KPH*/STP*/8": "{#Super_L(Shift_L(8))}",
"KPH*/STP*/9": "{#Super_L(Shift_L(9))}",
"KPH*/STP*/KH-FG": "{#Super_L(Shift_L(grave))}",
"KPH*/STP*/KW-BG": "{#Super_L(Shift_L(comma))}",
"KPH*/STP*/PR*EPB": "{#Super_L(Shift_L(parenright))}",
"KPH*/STP*/PREPB": "{#Super_L(Shift_L(parenleft))}",
"KPH*/STP*/PW*FP": "{#Super_L(Shift_L(BackSpace))}",
"KPH*/STP*/PWR*BGT": "{#Super_L(Shift_L(bracketright))}",
"KPH*/STP*/PWR-BGT": "{#Super_L(Shift_L(bracketleft))}",
"KPH*/STP*/R-R": "{#Super_L(Shift_L(Return))}",
"KPH*/STP*/S-P": "{#Super_L(Shift_L(space))}",
"KPH*/STP*/SP*S": "{#Super_L(Shift_L())}",
"KPH*/STP*/SPWHRAERB": "{#Super_L(Shift_L(backslash))}",
"KPH*/STP*/STPH-G": "{#Super_L(Shift_L(Right))}",
"KPH*/STP*/STPH-B": "{#Super_L(Shift_L(Down))}",
"KPH*/STP*/STPH-P": "{#Super_L(Shift_L(Up))}",
"KPH*/STP*/STPH-R": "{#Super_L(Shift_L(Left))}",
"KPH*/STP*/TA*B": "{#Super_L(Shift_L(Tab))}",
"KPH*/STP*/TKHRAO*ET": "{#Super_L(Shift_L(Delete))}",
"KPH*/KHR*/STP*/A*": "{#Super_L(Control_L(Shift_L(a)))}",
"KPH*/KHR*/STP*/PW*": "{#Super_L(Control_L(Shift_L(b)))}",
"KPH*/KHR*/STP*/KR*": "{#Super_L(Control_L(Shift_L(c)))}",
"KPH*/KHR*/STP*/TK*": "{#Super_L(Control_L(Shift_L(d)))}",
"KPH*/KHR*/STP*/*E": "{#Super_L(Control_L(Shift_L(e)))}",
"KPH*/KHR*/STP*/TP*": "{#Super_L(Control_L(Shift_L(f)))}",
"KPH*/KHR*/STP*/TKPW*": "{#Super_L(Control_L(Shift_L(g)))}",
"KPH*/KHR*/STP*/H*": "{#Super_L(Control_L(Shift_L(h)))}",
"KPH*/KHR*/STP*/*EU": "{#Super_L(Control_L(Shift_L(i)))}",
"KPH*/KHR*/STP*/SKWR*": "{#Super_L(Control_L(Shift_L(j)))}",
"KPH*/KHR*/STP*/K*": "{#Super_L(Control_L(Shift_L(k)))}",
"KPH*/KHR*/STP*/HR*": "{#Super_L(Control_L(Shift_L(l)))}",
"KPH*/KHR*/STP*/PH*": "{#Super_L(Control_L(Shift_L(m)))}",
"KPH*/KHR*/STP*/TPH*": "{#Super_L(Control_L(Shift_L(n)))}",
"KPH*/KHR*/STP*/O*": "{#Super_L(Control_L(Shift_L(o)))}",
"KPH*/KHR*/STP*/P*": "{#Super_L(Control_L(Shift_L(p)))}",
"KPH*/KHR*/STP*/KW*": "{#Super_L(Control_L(Shift_L(q)))}",
"KPH*/KHR*/STP*/R*": "{#Super_L(Control_L(Shift_L(r)))}",
"KPH*/KHR*/STP*/S*": "{#Super_L(Control_L(Shift_L(s)))}",
"KPH*/KHR*/STP*/T*": "{#Super_L(Control_L(Shift_L(t)))}",
"KPH*/KHR*/STP*/*U": "{#Super_L(Control_L(Shift_L(u)))}",
"KPH*/KHR*/STP*/SR*": "{#Super_L(Control_L(Shift_L(v)))}",
"KPH*/KHR*/STP*/W*": "{#Super_L(Control_L(Shift_L(w)))}",
"KPH*/KHR*/STP*/KP*": "{#Super_L(Control_L(Shift_L(x)))}",
"KPH*/KHR*/STP*/KWR*": "{#Super_L(Control_L(Shift_L(y)))}",
"KPH*/KHR*/STP*/STKPW*": "{#Super_L(Control_L(Shift_L(z)))}",
"KPH*/KHR*/STP*/0": "{#Super_L(Control_L(Shift_L(0)))}",
"KPH*/KHR*/STP*/1": "{#Super_L(Control_L(Shift_L(1)))}",
"KPH*/KHR*/STP*/2": "{#Super_L(Control_L(Shift_L(2)))}",
"KPH*/KHR*/STP*/3": "{#Super_L(Control_L(Shift_L(3)))}",
"KPH*/KHR*/STP*/4": "{#Super_L(Control_L(Shift_L(4)))}",
"KPH*/KHR*/STP*/5": "{#Super_L(Control_L(Shift_L(5)))}",
"KPH*/KHR*/STP*/6": "{#Super_L(Control_L(Shift_L(6)))}",
"KPH*/KHR*/STP*/7": "{#Super_L(Control_L(Shift_L(7)))}",
"KPH*/KHR*/STP*/8": "{#Super_L(Control_L(Shift_L(8)))}",
"KPH*/KHR*/STP*/9": "{#Super_L(Control_L(Shift_L(9)))}",
"KPH*/KHR*/STP*/KH-FG": "{#Super_L(Control_L(Shift_L(grave)))}",
"KPH*/KHR*/STP*/KW-BG": "{#Super_L(Control_L(Shift_L(comma)))}",
"KPH*/KHR*/STP*/PR*EPB": "{#Super_L(Control_L(Shift_L(parenright)))}",
"KPH*/KHR*/STP*/PREPB": "{#Super_L(Control_L(Shift_L(parenleft)))}",
"KPH*/KHR*/STP*/PW*FP": "{#Super_L(Control_L(Shift_L(BackSpace)))}",
"KPH*/KHR*/STP*/PWR*BGT": "{#Super_L(Control_L(Shift_L(bracketright)))}",
"KPH*/KHR*/STP*/PWR-BGT": "{#Super_L(Control_L(Shift_L(bracketleft)))}",
"KPH*/KHR*/STP*/R-R": "{#Super_L(Control_L(Shift_L(Return)))}",
"KPH*/KHR*/STP*/S-P": "{#Super_L(Control_L(Shift_L(space)))}",
"KPH*/KHR*/STP*/SP*S": "{#Super_L(Control_L(Shift_L()))}",
"KPH*/KHR*/STP*/SPWHRAERB": "{#Super_L(Control_L(Shift_L(backslash)))}",
"KPH*/KHR*/STP*/STPH-G": "{#Super_L(Control_L(Shift_L(Right)))}",
"KPH*/KHR*/STP*/STPH-B": "{#Super_L(Control_L(Shift_L(Down)))}",
"KPH*/KHR*/STP*/STPH-P": "{#Super_L(Control_L(Shift_L(Up)))}",
"KPH*/KHR*/STP*/STPH-R": "{#Super_L(Control_L(Shift_L(Left)))}",
"KPH*/KHR*/STP*/TA*B": "{#Super_L(Control_L(Shift_L(Tab)))}",
"KPH*/KHR*/STP*/TKHRAO*ET": "{#Super_L(Control_L(Shift_L(Delete)))}",
"KPH*/KHR*/A*": "{#Super_L(Control_L(a))}",
"KPH*/KHR*/PW*": "{#Super_L(Control_L(b))}",
"KPH*/KHR*/KR*": "{#Super_L(Control_L(c))}",
"KPH*/KHR*/TK*": "{#Super_L(Control_L(d))}",
"KPH*/KHR*/*E": "{#Super_L(Control_L(e))}",
"KPH*/KHR*/TP*": "{#Super_L(Control_L(f))}",
"KPH*/KHR*/TKPW*": "{#Super_L(Control_L(g))}",
"KPH*/KHR*/H*": "{#Super_L(Control_L(h))}",
"KPH*/KHR*/*EU": "{#Super_L(Control_L(i))}",
"KPH*/KHR*/SKWR*": "{#Super_L(Control_L(j))}",
"KPH*/KHR*/K*": "{#Super_L(Control_L(k))}",
"KPH*/KHR*/HR*": "{#Super_L(Control_L(l))}",
"KPH*/KHR*/PH*": "{#Super_L(Control_L(m))}",
"KPH*/KHR*/TPH*": "{#Super_L(Control_L(n))}",
"KPH*/KHR*/O*": "{#Super_L(Control_L(o))}",
"KPH*/KHR*/P*": "{#Super_L(Control_L(p))}",
"KPH*/KHR*/KW*": "{#Super_L(Control_L(q))}",
"KPH*/KHR*/R*": "{#Super_L(Control_L(r))}",
"KPH*/KHR*/S*": "{#Super_L(Control_L(s))}",
"KPH*/KHR*/T*": "{#Super_L(Control_L(t))}",
"KPH*/KHR*/*U": "{#Super_L(Control_L(u))}",
"KPH*/KHR*/SR*": "{#Super_L(Control_L(v))}",
"KPH*/KHR*/W*": "{#Super_L(Control_L(w))}",
"KPH*/KHR*/KP*": "{#Super_L(Control_L(x))}",
"KPH*/KHR*/KWR*": "{#Super_L(Control_L(y))}",
"KPH*/KHR*/STKPW*": "{#Super_L(Control_L(z))}",
"KPH*/KHR*/0": "{#Super_L(Control_L(0))}",
"KPH*/KHR*/1": "{#Super_L(Control_L(1))}",
"KPH*/KHR*/2": "{#Super_L(Control_L(2))}",
"KPH*/KHR*/3": "{#Super_L(Control_L(3))}",
"KPH*/KHR*/4": "{#Super_L(Control_L(4))}",
"KPH*/KHR*/5": "{#Super_L(Control_L(5))}",
"KPH*/KHR*/6": "{#Super_L(Control_L(6))}",
"KPH*/KHR*/7": "{#Super_L(Control_L(7))}",
"KPH*/KHR*/8": "{#Super_L(Control_L(8))}",
"KPH*/KHR*/9": "{#Super_L(Control_L(9))}",
"KPH*/KHR*/KH-FG": "{#Super_L(Control_L(grave))}",
"KPH*/KHR*/KW-BG": "{#Super_L(Control_L(comma))}",
"KPH*/KHR*/PR*EPB": "{#Super_L(Control_L(parenright))}",
"KPH*/KHR*/PREPB": "{#Super_L(Control_L(parenleft))}",
"KPH*/KHR*/PW*FP": "{#Super_L(Control_L(BackSpace))}",
"KPH*/KHR*/PWR*BGT": "{#Super_L(Control_L(bracketright))}",
"KPH*/KHR*/PWR-BGT": "{#Super_L(Control_L(bracketleft))}",
"KPH*/KHR*/R-R": "{#Super_L(Control_L(Return))}",
"KPH*/KHR*/S-P": "{#Super_L(Control_L(space))}",
"KPH*/KHR*/SP*S": "{#Super_L(Control_L())}",
"KPH*/KHR*/SPWHRAERB": "{#Super_L(Control_L(backslash))}",
"KPH*/KHR*/STPH-G": "{#Super_L(Control_L(Right))}",
"KPH*/KHR*/STPH-B": "{#Super_L(Control_L(Down))}",
"KPH*/KHR*/STPH-P": "{#Super_L(Control_L(Up))}",
"KPH*/KHR*/STPH-R": "{#Super_L(Control_L(Left))}",
"KPH*/KHR*/TA*B": "{#Super_L(Control_L(Tab))}",
"KPH*/KHR*/TKHRAO*ET": "{#Super_L(Control_L(Delete))}",
"KPH*/STP*/KHR*/A*": "{#Super_L(Shift_L(Control_L(a)))}",
"KPH*/STP*/KHR*/PW*": "{#Super_L(Shift_L(Control_L(b)))}",
"KPH*/STP*/KHR*/KR*": "{#Super_L(Shift_L(Control_L(c)))}",
"KPH*/STP*/KHR*/TK*": "{#Super_L(Shift_L(Control_L(d)))}",
"KPH*/STP*/KHR*/*E": "{#Super_L(Shift_L(Control_L(e)))}",
"KPH*/STP*/KHR*/TP*": "{#Super_L(Shift_L(Control_L(f)))}",
"KPH*/STP*/KHR*/TKPW*": "{#Super_L(Shift_L(Control_L(g)))}",
"KPH*/STP*/KHR*/H*": "{#Super_L(Shift_L(Control_L(h)))}",
"KPH*/STP*/KHR*/*EU": "{#Super_L(Shift_L(Control_L(i)))}",
"KPH*/STP*/KHR*/SKWR*": "{#Super_L(Shift_L(Control_L(j)))}",
"KPH*/STP*/KHR*/K*": "{#Super_L(Shift_L(Control_L(k)))}",
"KPH*/STP*/KHR*/HR*": "{#Super_L(Shift_L(Control_L(l)))}",
"KPH*/STP*/KHR*/PH*": "{#Super_L(Shift_L(Control_L(m)))}",
"KPH*/STP*/KHR*/TPH*": "{#Super_L(Shift_L(Control_L(n)))}",
"KPH*/STP*/KHR*/O*": "{#Super_L(Shift_L(Control_L(o)))}",
"KPH*/STP*/KHR*/P*": "{#Super_L(Shift_L(Control_L(p)))}",
"KPH*/STP*/KHR*/KW*": "{#Super_L(Shift_L(Control_L(q)))}",
"KPH*/STP*/KHR*/R*": "{#Super_L(Shift_L(Control_L(r)))}",
"KPH*/STP*/KHR*/S*": "{#Super_L(Shift_L(Control_L(s)))}",
"KPH*/STP*/KHR*/T*": "{#Super_L(Shift_L(Control_L(t)))}",
"KPH*/STP*/KHR*/*U": "{#Super_L(Shift_L(Control_L(u)))}",
"KPH*/STP*/KHR*/SR*": "{#Super_L(Shift_L(Control_L(v)))}",
"KPH*/STP*/KHR*/W*": "{#Super_L(Shift_L(Control_L(w)))}",
"KPH*/STP*/KHR*/KP*": "{#Super_L(Shift_L(Control_L(x)))}",
"KPH*/STP*/KHR*/KWR*": "{#Super_L(Shift_L(Control_L(y)))}",
"KPH*/STP*/KHR*/STKPW*": "{#Super_L(Shift_L(Control_L(z)))}",
"KPH*/STP*/KHR*/0": "{#Super_L(Shift_L(Control_L(0)))}",
"KPH*/STP*/KHR*/1": "{#Super_L(Shift_L(Control_L(1)))}",
"KPH*/STP*/KHR*/2": "{#Super_L(Shift_L(Control_L(2)))}",
"KPH*/STP*/KHR*/3": "{#Super_L(Shift_L(Control_L(3)))}",
"KPH*/STP*/KHR*/4": "{#Super_L(Shift_L(Control_L(4)))}",
"KPH*/STP*/KHR*/5": "{#Super_L(Shift_L(Control_L(5)))}",
"KPH*/STP*/KHR*/6": "{#Super_L(Shift_L(Control_L(6)))}",
"KPH*/STP*/KHR*/7": "{#Super_L(Shift_L(Control_L(7)))}",
"KPH*/STP*/KHR*/8": "{#Super_L(Shift_L(Control_L(8)))}",
"KPH*/STP*/KHR*/9": "{#Super_L(Shift_L(Control_L(9)))}",
"KPH*/STP*/KHR*/KH-FG": "{#Super_L(Shift_L(Control_L(grave)))}",
"KPH*/STP*/KHR*/KW-BG": "{#Super_L(Shift_L(Control_L(comma)))}",
"KPH*/STP*/KHR*/PR*EPB": "{#Super_L(Shift_L(Control_L(parenright)))}",
"KPH*/STP*/KHR*/PREPB": "{#Super_L(Shift_L(Control_L(parenleft)))}",
"KPH*/STP*/KHR*/PW*FP": "{#Super_L(Shift_L(Control_L(BackSpace)))}",
"KPH*/STP*/KHR*/PWR*BGT": "{#Super_L(Shift_L(Control_L(bracketright)))}",
"KPH*/STP*/KHR*/PWR-BGT": "{#Super_L(Shift_L(Control_L(bracketleft)))}",
"KPH*/STP*/KHR*/R-R": "{#Super_L(Shift_L(Control_L(Return)))}",
"KPH*/STP*/KHR*/S-P": "{#Super_L(Shift_L(Control_L(space)))}",
"KPH*/STP*/KHR*/SP*S": "{#Super_L(Shift_L(Control_L()))}",
"KPH*/STP*/KHR*/SPWHRAERB": "{#Super_L(Shift_L(Control_L(backslash)))}",
"KPH*/STP*/KHR*/STPH-G": "{#Super_L(Shift_L(Control_L(Right)))}",
"KPH*/STP*/KHR*/STPH-B": "{#Super_L(Shift_L(Control_L(Down)))}",
"KPH*/STP*/KHR*/STPH-P": "{#Super_L(Shift_L(Control_L(Up)))}",
"KPH*/STP*/KHR*/STPH-R": "{#Super_L(Shift_L(Control_L(Left)))}",
"KPH*/STP*/KHR*/TA*B": "{#Super_L(Shift_L(Control_L(Tab)))}",
"KPH*/STP*/KHR*/TKHRAO*ET": "{#Super_L(Shift_L(Control_L(Delete)))}",
"KPH*/THRA*/STP*/A*": "{#Super_L(Alt_L(Shift_L(a)))}",
"KPH*/THRA*/STP*/PW*": "{#Super_L(Alt_L(Shift_L(b)))}",
"KPH*/THRA*/STP*/KR*": "{#Super_L(Alt_L(Shift_L(c)))}",
"KPH*/THRA*/STP*/TK*": "{#Super_L(Alt_L(Shift_L(d)))}",
"KPH*/THRA*/STP*/*E": "{#Super_L(Alt_L(Shift_L(e)))}",
"KPH*/THRA*/STP*/TP*": "{#Super_L(Alt_L(Shift_L(f)))}",
"KPH*/THRA*/STP*/TKPW*": "{#Super_L(Alt_L(Shift_L(g)))}",
"KPH*/THRA*/STP*/H*": "{#Super_L(Alt_L(Shift_L(h)))}",
"KPH*/THRA*/STP*/*EU": "{#Super_L(Alt_L(Shift_L(i)))}",
"KPH*/THRA*/STP*/SKWR*": "{#Super_L(Alt_L(Shift_L(j)))}",
"KPH*/THRA*/STP*/K*": "{#Super_L(Alt_L(Shift_L(k)))}",
"KPH*/THRA*/STP*/HR*": "{#Super_L(Alt_L(Shift_L(l)))}",
"KPH*/THRA*/STP*/PH*": "{#Super_L(Alt_L(Shift_L(m)))}",
"KPH*/THRA*/STP*/TPH*": "{#Super_L(Alt_L(Shift_L(n)))}",
"KPH*/THRA*/STP*/O*": "{#Super_L(Alt_L(Shift_L(o)))}",
"KPH*/THRA*/STP*/P*": "{#Super_L(Alt_L(Shift_L(p)))}",
"KPH*/THRA*/STP*/KW*": "{#Super_L(Alt_L(Shift_L(q)))}",
"KPH*/THRA*/STP*/R*": "{#Super_L(Alt_L(Shift_L(r)))}",
"KPH*/THRA*/STP*/S*": "{#Super_L(Alt_L(Shift_L(s)))}",
"KPH*/THRA*/STP*/T*": "{#Super_L(Alt_L(Shift_L(t)))}",
"KPH*/THRA*/STP*/*U": "{#Super_L(Alt_L(Shift_L(u)))}",
"KPH*/THRA*/STP*/SR*": "{#Super_L(Alt_L(Shift_L(v)))}",
"KPH*/THRA*/STP*/W*": "{#Super_L(Alt_L(Shift_L(w)))}",
"KPH*/THRA*/STP*/KP*": "{#Super_L(Alt_L(Shift_L(x)))}",
"KPH*/THRA*/STP*/KWR*": "{#Super_L(Alt_L(Shift_L(y)))}",
"KPH*/THRA*/STP*/STKPW*": "{#Super_L(Alt_L(Shift_L(z)))}",
"KPH*/THRA*/STP*/0": "{#Super_L(Alt_L(Shift_L(0)))}",
"KPH*/THRA*/STP*/1": "{#Super_L(Alt_L(Shift_L(1)))}",
"KPH*/THRA*/STP*/2": "{#Super_L(Alt_L(Shift_L(2)))}",
"KPH*/THRA*/STP*/3": "{#Super_L(Alt_L(Shift_L(3)))}",
"KPH*/THRA*/STP*/4": "{#Super_L(Alt_L(Shift_L(4)))}",
"KPH*/THRA*/STP*/5": "{#Super_L(Alt_L(Shift_L(5)))}",
"KPH*/THRA*/STP*/6": "{#Super_L(Alt_L(Shift_L(6)))}",
"KPH*/THRA*/STP*/7": "{#Super_L(Alt_L(Shift_L(7)))}",
"KPH*/THRA*/STP*/8": "{#Super_L(Alt_L(Shift_L(8)))}",
"KPH*/THRA*/STP*/9": "{#Super_L(Alt_L(Shift_L(9)))}",
"KPH*/THRA*/STP*/KH-FG": "{#Super_L(Alt_L(Shift_L(grave)))}",
"KPH*/THRA*/STP*/KW-BG": "{#Super_L(Alt_L(Shift_L(comma)))}",
"KPH*/THRA*/STP*/PR*EPB": "{#Super_L(Alt_L(Shift_L(parenright)))}",
"KPH*/THRA*/STP*/PREPB": "{#Super_L(Alt_L(Shift_L(parenleft)))}",
"KPH*/THRA*/STP*/PW*FP": "{#Super_L(Alt_L(Shift_L(BackSpace)))}",
"KPH*/THRA*/STP*/PWR*BGT": "{#Super_L(Alt_L(Shift_L(bracketright)))}",
"KPH*/THRA*/STP*/PWR-BGT": "{#Super_L(Alt_L(Shift_L(bracketleft)))}",
"KPH*/THRA*/STP*/R-R": "{#Super_L(Alt_L(Shift_L(Return)))}",
"KPH*/THRA*/STP*/S-P": "{#Super_L(Alt_L(Shift_L(space)))}",
"KPH*/THRA*/STP*/SP*S": "{#Super_L(Alt_L(Shift_L()))}",
"KPH*/THRA*/STP*/SPWHRAERB": "{#Super_L(Alt_L(Shift_L(backslash)))}",
"KPH*/THRA*/STP*/STPH-G": "{#Super_L(Alt_L(Shift_L(Right)))}",
"KPH*/THRA*/STP*/STPH-B": "{#Super_L(Alt_L(Shift_L(Down)))}",
"KPH*/THRA*/STP*/STPH-P": "{#Super_L(Alt_L(Shift_L(Up)))}",
"KPH*/THRA*/STP*/STPH-R": "{#Super_L(Alt_L(Shift_L(Left)))}",
"KPH*/THRA*/STP*/TA*B": "{#Super_L(Alt_L(Shift_L(Tab)))}",
"KPH*/THRA*/STP*/TKHRAO*ET": "{#Super_L(Alt_L(Shift_L(Delete)))}",
"KPH*/THRA*/KHR*/STP*/A*": "{#Super_L(Alt_L(Control_L(Shift_L(a))))}",
"KPH*/THRA*/KHR*/STP*/PW*": "{#Super_L(Alt_L(Control_L(Shift_L(b))))}",
"KPH*/THRA*/KHR*/STP*/KR*": "{#Super_L(Alt_L(Control_L(Shift_L(c))))}",
"KPH*/THRA*/KHR*/STP*/TK*": "{#Super_L(Alt_L(Control_L(Shift_L(d))))}",
"KPH*/THRA*/KHR*/STP*/*E": "{#Super_L(Alt_L(Control_L(Shift_L(e))))}",
"KPH*/THRA*/KHR*/STP*/TP*": "{#Super_L(Alt_L(Control_L(Shift_L(f))))}",
"KPH*/THRA*/KHR*/STP*/TKPW*": "{#Super_L(Alt_L(Control_L(Shift_L(g))))}",
"KPH*/THRA*/KHR*/STP*/H*": "{#Super_L(Alt_L(Control_L(Shift_L(h))))}",
"KPH*/THRA*/KHR*/STP*/*EU": "{#Super_L(Alt_L(Control_L(Shift_L(i))))}",
"KPH*/THRA*/KHR*/STP*/SKWR*": "{#Super_L(Alt_L(Control_L(Shift_L(j))))}",
"KPH*/THRA*/KHR*/STP*/K*": "{#Super_L(Alt_L(Control_L(Shift_L(k))))}",
"KPH*/THRA*/KHR*/STP*/HR*": "{#Super_L(Alt_L(Control_L(Shift_L(l))))}",
"KPH*/THRA*/KHR*/STP*/PH*": "{#Super_L(Alt_L(Control_L(Shift_L(m))))}",
"KPH*/THRA*/KHR*/STP*/TPH*": "{#Super_L(Alt_L(Control_L(Shift_L(n))))}",
"KPH*/THRA*/KHR*/STP*/O*": "{#Super_L(Alt_L(Control_L(Shift_L(o))))}",
"KPH*/THRA*/KHR*/STP*/P*": "{#Super_L(Alt_L(Control_L(Shift_L(p))))}",
"KPH*/THRA*/KHR*/STP*/KW*": "{#Super_L(Alt_L(Control_L(Shift_L(q))))}",
"KPH*/THRA*/KHR*/STP*/R*": "{#Super_L(Alt_L(Control_L(Shift_L(r))))}",
"KPH*/THRA*/KHR*/STP*/S*": "{#Super_L(Alt_L(Control_L(Shift_L(s))))}",
"KPH*/THRA*/KHR*/STP*/T*": "{#Super_L(Alt_L(Control_L(Shift_L(t))))}",
"KPH*/THRA*/KHR*/STP*/*U": "{#Super_L(Alt_L(Control_L(Shift_L(u))))}",
"KPH*/THRA*/KHR*/STP*/SR*": "{#Super_L(Alt_L(Control_L(Shift_L(v))))}",
"KPH*/THRA*/KHR*/STP*/W*": "{#Super_L(Alt_L(Control_L(Shift_L(w))))}",
"KPH*/THRA*/KHR*/STP*/KP*": "{#Super_L(Alt_L(Control_L(Shift_L(x))))}",
"KPH*/THRA*/KHR*/STP*/KWR*": "{#Super_L(Alt_L(Control_L(Shift_L(y))))}",
"KPH*/THRA*/KHR*/STP*/STKPW*": "{#Super_L(Alt_L(Control_L(Shift_L(z))))}",
"KPH*/THRA*/KHR*/STP*/0": "{#Super_L(Alt_L(Control_L(Shift_L(0))))}",
"KPH*/THRA*/KHR*/STP*/1": "{#Super_L(Alt_L(Control_L(Shift_L(1))))}",
"KPH*/THRA*/KHR*/STP*/2": "{#Super_L(Alt_L(Control_L(Shift_L(2))))}",
"KPH*/THRA*/KHR*/STP*/3": "{#Super_L(Alt_L(Control_L(Shift_L(3))))}",
"KPH*/THRA*/KHR*/STP*/4": "{#Super_L(Alt_L(Control_L(Shift_L(4))))}",
"KPH*/THRA*/KHR*/STP*/5": "{#Super_L(Alt_L(Control_L(Shift_L(5))))}",
"KPH*/THRA*/KHR*/STP*/6": "{#Super_L(Alt_L(Control_L(Shift_L(6))))}",
"KPH*/THRA*/KHR*/STP*/7": "{#Super_L(Alt_L(Control_L(Shift_L(7))))}",
"KPH*/THRA*/KHR*/STP*/8": "{#Super_L(Alt_L(Control_L(Shift_L(8))))}",
"KPH*/THRA*/KHR*/STP*/9": "{#Super_L(Alt_L(Control_L(Shift_L(9))))}",
"KPH*/THRA*/KHR*/STP*/KH-FG": "{#Super_L(Alt_L(Control_L(Shift_L(grave))))}",
"KPH*/THRA*/KHR*/STP*/KW-BG": "{#Super_L(Alt_L(Control_L(Shift_L(comma))))}",
"KPH*/THRA*/KHR*/STP*/PR*EPB": "{#Super_L(Alt_L(Control_L(Shift_L(parenright))))}",
"KPH*/THRA*/KHR*/STP*/PREPB": "{#Super_L(Alt_L(Control_L(Shift_L(parenleft))))}",
"KPH*/THRA*/KHR*/STP*/PW*FP": "{#Super_L(Alt_L(Control_L(Shift_L(BackSpace))))}",
"KPH*/THRA*/KHR*/STP*/PWR*BGT": "{#Super_L(Alt_L(Control_L(Shift_L(bracketright))))}",
"KPH*/THRA*/KHR*/STP*/PWR-BGT": "{#Super_L(Alt_L(Control_L(Shift_L(bracketleft))))}",
"KPH*/THRA*/KHR*/STP*/R-R": "{#Super_L(Alt_L(Control_L(Shift_L(Return))))}",
"KPH*/THRA*/KHR*/STP*/S-P": "{#Super_L(Alt_L(Control_L(Shift_L(space))))}",
"KPH*/THRA*/KHR*/STP*/SP*S": "{#Super_L(Alt_L(Control_L(Shift_L())))}",
"KPH*/THRA*/KHR*/STP*/SPWHRAERB": "{#Super_L(Alt_L(Control_L(Shift_L(backslash))))}",
"KPH*/THRA*/KHR*/STP*/STPH-G": "{#Super_L(Alt_L(Control_L(Shift_L(Right))))}",
"KPH*/THRA*/KHR*/STP*/STPH-B": "{#Super_L(Alt_L(Control_L(Shift_L(Down))))}",
"KPH*/THRA*/KHR*/STP*/STPH-P": "{#Super_L(Alt_L(Control_L(Shift_L(Up))))}",
"KPH*/THRA*/KHR*/STP*/STPH-R": "{#Super_L(Alt_L(Control_L(Shift_L(Left))))}",
"KPH*/THRA*/KHR*/STP*/TA*B": "{#Super_L(Alt_L(Control_L(Shift_L(Tab))))}",
"KPH*/THRA*/KHR*/STP*/TKHRAO*ET": "{#Super_L(Alt_L(Control_L(Shift_L(Delete))))}",
"KPH*/THRA*/KHR*/A*": "{#Super_L(Alt_L(Control_L(a)))}",
"KPH*/THRA*/KHR*/PW*": "{#Super_L(Alt_L(Control_L(b)))}",
"KPH*/THRA*/KHR*/KR*": "{#Super_L(Alt_L(Control_L(c)))}",
"KPH*/THRA*/KHR*/TK*": "{#Super_L(Alt_L(Control_L(d)))}",
"KPH*/THRA*/KHR*/*E": "{#Super_L(Alt_L(Control_L(e)))}",
"KPH*/THRA*/KHR*/TP*": "{#Super_L(Alt_L(Control_L(f)))}",
"KPH*/THRA*/KHR*/TKPW*": "{#Super_L(Alt_L(Control_L(g)))}",
"KPH*/THRA*/KHR*/H*": "{#Super_L(Alt_L(Control_L(h)))}",
"KPH*/THRA*/KHR*/*EU": "{#Super_L(Alt_L(Control_L(i)))}",
"KPH*/THRA*/KHR*/SKWR*": "{#Super_L(Alt_L(Control_L(j)))}",
"KPH*/THRA*/KHR*/K*": "{#Super_L(Alt_L(Control_L(k)))}",
"KPH*/THRA*/KHR*/HR*": "{#Super_L(Alt_L(Control_L(l)))}",
"KPH*/THRA*/KHR*/PH*": "{#Super_L(Alt_L(Control_L(m)))}",
"KPH*/THRA*/KHR*/TPH*": "{#Super_L(Alt_L(Control_L(n)))}",
"KPH*/THRA*/KHR*/O*": "{#Super_L(Alt_L(Control_L(o)))}",
"KPH*/THRA*/KHR*/P*": "{#Super_L(Alt_L(Control_L(p)))}",
"KPH*/THRA*/KHR*/KW*": "{#Super_L(Alt_L(Control_L(q)))}",
"KPH*/THRA*/KHR*/R*": "{#Super_L(Alt_L(Control_L(r)))}",
"KPH*/THRA*/KHR*/S*": "{#Super_L(Alt_L(Control_L(s)))}",
"KPH*/THRA*/KHR*/T*": "{#Super_L(Alt_L(Control_L(t)))}",
"KPH*/THRA*/KHR*/*U": "{#Super_L(Alt_L(Control_L(u)))}",
"KPH*/THRA*/KHR*/SR*": "{#Super_L(Alt_L(Control_L(v)))}",
"KPH*/THRA*/KHR*/W*": "{#Super_L(Alt_L(Control_L(w)))}",
"KPH*/THRA*/KHR*/KP*": "{#Super_L(Alt_L(Control_L(x)))}",
"KPH*/THRA*/KHR*/KWR*": "{#Super_L(Alt_L(Control_L(y)))}",
"KPH*/THRA*/KHR*/STKPW*": "{#Super_L(Alt_L(Control_L(z)))}",
"KPH*/THRA*/KHR*/0": "{#Super_L(Alt_L(Control_L(0)))}",
"KPH*/THRA*/KHR*/1": "{#Super_L(Alt_L(Control_L(1)))}",
"KPH*/THRA*/KHR*/2": "{#Super_L(Alt_L(Control_L(2)))}",
"KPH*/THRA*/KHR*/3": "{#Super_L(Alt_L(Control_L(3)))}",
"KPH*/THRA*/KHR*/4": "{#Super_L(Alt_L(Control_L(4)))}",
"KPH*/THRA*/KHR*/5": "{#Super_L(Alt_L(Control_L(5)))}",
"KPH*/THRA*/KHR*/6": "{#Super_L(Alt_L(Control_L(6)))}",
"KPH*/THRA*/KHR*/7": "{#Super_L(Alt_L(Control_L(7)))}",
"KPH*/THRA*/KHR*/8": "{#Super_L(Alt_L(Control_L(8)))}",
"KPH*/THRA*/KHR*/9": "{#Super_L(Alt_L(Control_L(9)))}",
"KPH*/THRA*/KHR*/KH-FG": "{#Super_L(Alt_L(Control_L(grave)))}",
"KPH*/THRA*/KHR*/KW-BG": "{#Super_L(Alt_L(Control_L(comma)))}",
"KPH*/THRA*/KHR*/PR*EPB": "{#Super_L(Alt_L(Control_L(parenright)))}",
"KPH*/THRA*/KHR*/PREPB": "{#Super_L(Alt_L(Control_L(parenleft)))}",
"KPH*/THRA*/KHR*/PW*FP": "{#Super_L(Alt_L(Control_L(BackSpace)))}",
"KPH*/THRA*/KHR*/PWR*BGT": "{#Super_L(Alt_L(Control_L(bracketright)))}",
"KPH*/THRA*/KHR*/PWR-BGT": "{#Super_L(Alt_L(Control_L(bracketleft)))}",
"KPH*/THRA*/KHR*/R-R": "{#Super_L(Alt_L(Control_L(Return)))}",
"KPH*/THRA*/KHR*/S-P": "{#Super_L(Alt_L(Control_L(space)))}",
"KPH*/THRA*/KHR*/SP*S": "{#Super_L(Alt_L(Control_L()))}",
"KPH*/THRA*/KHR*/SPWHRAERB": "{#Super_L(Alt_L(Control_L(backslash)))}",
"KPH*/THRA*/KHR*/STPH-G": "{#Super_L(Alt_L(Control_L(Right)))}",
"KPH*/THRA*/KHR*/STPH-B": "{#Super_L(Alt_L(Control_L(Down)))}",
"KPH*/THRA*/KHR*/STPH-P": "{#Super_L(Alt_L(Control_L(Up)))}",
"KPH*/THRA*/KHR*/STPH-R": "{#Super_L(Alt_L(Control_L(Left)))}",
"KPH*/THRA*/KHR*/TA*B": "{#Super_L(Alt_L(Control_L(Tab)))}",
"KPH*/THRA*/KHR*/TKHRAO*ET": "{#Super_L(Alt_L(Control_L(Delete)))}",
"KPH*/THRA*/STP*/KHR*/A*": "{#Super_L(Alt_L(Shift_L(Control_L(a))))}",
"KPH*/THRA*/STP*/KHR*/PW*": "{#Super_L(Alt_L(Shift_L(Control_L(b))))}",
"KPH*/THRA*/STP*/KHR*/KR*": "{#Super_L(Alt_L(Shift_L(Control_L(c))))}",
"KPH*/THRA*/STP*/KHR*/TK*": "{#Super_L(Alt_L(Shift_L(Control_L(d))))}",
"KPH*/THRA*/STP*/KHR*/*E": "{#Super_L(Alt_L(Shift_L(Control_L(e))))}",
"KPH*/THRA*/STP*/KHR*/TP*": "{#Super_L(Alt_L(Shift_L(Control_L(f))))}",
"KPH*/THRA*/STP*/KHR*/TKPW*": "{#Super_L(Alt_L(Shift_L(Control_L(g))))}",
"KPH*/THRA*/STP*/KHR*/H*": "{#Super_L(Alt_L(Shift_L(Control_L(h))))}",
"KPH*/THRA*/STP*/KHR*/*EU": "{#Super_L(Alt_L(Shift_L(Control_L(i))))}",
"KPH*/THRA*/STP*/KHR*/SKWR*": "{#Super_L(Alt_L(Shift_L(Control_L(j))))}",
"KPH*/THRA*/STP*/KHR*/K*": "{#Super_L(Alt_L(Shift_L(Control_L(k))))}",
"KPH*/THRA*/STP*/KHR*/HR*": "{#Super_L(Alt_L(Shift_L(Control_L(l))))}",
"KPH*/THRA*/STP*/KHR*/PH*": "{#Super_L(Alt_L(Shift_L(Control_L(m))))}",
"KPH*/THRA*/STP*/KHR*/TPH*": "{#Super_L(Alt_L(Shift_L(Control_L(n))))}",
"KPH*/THRA*/STP*/KHR*/O*": "{#Super_L(Alt_L(Shift_L(Control_L(o))))}",
"KPH*/THRA*/STP*/KHR*/P*": "{#Super_L(Alt_L(Shift_L(Control_L(p))))}",
"KPH*/THRA*/STP*/KHR*/KW*": "{#Super_L(Alt_L(Shift_L(Control_L(q))))}",
"KPH*/THRA*/STP*/KHR*/R*": "{#Super_L(Alt_L(Shift_L(Control_L(r))))}",
"KPH*/THRA*/STP*/KHR*/S*": "{#Super_L(Alt_L(Shift_L(Control_L(s))))}",
"KPH*/THRA*/STP*/KHR*/T*": "{#Super_L(Alt_L(Shift_L(Control_L(t))))}",
"KPH*/THRA*/STP*/KHR*/*U": "{#Super_L(Alt_L(Shift_L(Control_L(u))))}",
"KPH*/THRA*/STP*/KHR*/SR*": "{#Super_L(Alt_L(Shift_L(Control_L(v))))}",
"KPH*/THRA*/STP*/KHR*/W*": "{#Super_L(Alt_L(Shift_L(Control_L(w))))}",
"KPH*/THRA*/STP*/KHR*/KP*": "{#Super_L(Alt_L(Shift_L(Control_L(x))))}",
"KPH*/THRA*/STP*/KHR*/KWR*": "{#Super_L(Alt_L(Shift_L(Control_L(y))))}",
"KPH*/THRA*/STP*/KHR*/STKPW*": "{#Super_L(Alt_L(Shift_L(Control_L(z))))}",
"KPH*/THRA*/STP*/KHR*/0": "{#Super_L(Alt_L(Shift_L(Control_L(0))))}",
"KPH*/THRA*/STP*/KHR*/1": "{#Super_L(Alt_L(Shift_L(Control_L(1))))}",
"KPH*/THRA*/STP*/KHR*/2": "{#Super_L(Alt_L(Shift_L(Control_L(2))))}",
"KPH*/THRA*/STP*/KHR*/3": "{#Super_L(Alt_L(Shift_L(Control_L(3))))}",
"KPH*/THRA*/STP*/KHR*/4": "{#Super_L(Alt_L(Shift_L(Control_L(4))))}",
"KPH*/THRA*/STP*/KHR*/5": "{#Super_L(Alt_L(Shift_L(Control_L(5))))}",
"KPH*/THRA*/STP*/KHR*/6": "{#Super_L(Alt_L(Shift_L(Control_L(6))))}",
"KPH*/THRA*/STP*/KHR*/7": "{#Super_L(Alt_L(Shift_L(Control_L(7))))}",
"KPH*/THRA*/STP*/KHR*/8": "{#Super_L(Alt_L(Shift_L(Control_L(8))))}",
"KPH*/THRA*/STP*/KHR*/9": "{#Super_L(Alt_L(Shift_L(Control_L(9))))}",
"KPH*/THRA*/STP*/KHR*/KH-FG": "{#Super_L(Alt_L(Shift_L(Control_L(grave))))}",
"KPH*/THRA*/STP*/KHR*/KW-BG": "{#Super_L(Alt_L(Shift_L(Control_L(comma))))}",
"KPH*/THRA*/STP*/KHR*/PR*EPB": "{#Super_L(Alt_L(Shift_L(Control_L(parenright))))}",
"KPH*/THRA*/STP*/KHR*/PREPB": "{#Super_L(Alt_L(Shift_L(Control_L(parenleft))))}",
"KPH*/THRA*/STP*/KHR*/PW*FP": "{#Super_L(Alt_L(Shift_L(Control_L(BackSpace))))}",
"KPH*/THRA*/STP*/KHR*/PWR*BGT": "{#Super_L(Alt_L(Shift_L(Control_L(bracketright))))}",
"KPH*/THRA*/STP*/KHR*/PWR-BGT": "{#Super_L(Alt_L(Shift_L(Control_L(bracketleft))))}",
"KPH*/THRA*/STP*/KHR*/R-R": "{#Super_L(Alt_L(Shift_L(Control_L(Return))))}",
"KPH*/THRA*/STP*/KHR*/S-P": "{#Super_L(Alt_L(Shift_L(Control_L(space))))}",
"KPH*/THRA*/STP*/KHR*/SP*S": "{#Super_L(Alt_L(Shift_L(Control_L())))}",
"KPH*/THRA*/STP*/KHR*/SPWHRAERB": "{#Super_L(Alt_L(Shift_L(Control_L(backslash))))}",
"KPH*/THRA*/STP*/KHR*/STPH-G": "{#Super_L(Alt_L(Shift_L(Control_L(Right))))}",
"KPH*/THRA*/STP*/KHR*/STPH-B": "{#Super_L(Alt_L(Shift_L(Control_L(Down))))}",
"KPH*/THRA*/STP*/KHR*/STPH-P": "{#Super_L(Alt_L(Shift_L(Control_L(Up))))}",
"KPH*/THRA*/STP*/KHR*/STPH-R": "{#Super_L(Alt_L(Shift_L(Control_L(Left))))}",
"KPH*/THRA*/STP*/KHR*/TA*B": "{#Super_L(Alt_L(Shift_L(Control_L(Tab))))}",
"KPH*/THRA*/STP*/KHR*/TKHRAO*ET": "{#Super_L(Alt_L(Shift_L(Control_L(Delete))))}",
"KPH*/THRA*/A*": "{#Super_L(Alt_L(a))}",
"KPH*/THRA*/PW*": "{#Super_L(Alt_L(b))}",
"KPH*/THRA*/KR*": "{#Super_L(Alt_L(c))}",
"KPH*/THRA*/TK*": "{#Super_L(Alt_L(d))}",
"KPH*/THRA*/*E": "{#Super_L(Alt_L(e))}",
"KPH*/THRA*/TP*": "{#Super_L(Alt_L(f))}",
"KPH*/THRA*/TKPW*": "{#Super_L(Alt_L(g))}",
"KPH*/THRA*/H*": "{#Super_L(Alt_L(h))}",
"KPH*/THRA*/*EU": "{#Super_L(Alt_L(i))}",
"KPH*/THRA*/SKWR*": "{#Super_L(Alt_L(j))}",
"KPH*/THRA*/K*": "{#Super_L(Alt_L(k))}",
"KPH*/THRA*/HR*": "{#Super_L(Alt_L(l))}",
"KPH*/THRA*/PH*": "{#Super_L(Alt_L(m))}",
"KPH*/THRA*/TPH*": "{#Super_L(Alt_L(n))}",
"KPH*/THRA*/O*": "{#Super_L(Alt_L(o))}",
"KPH*/THRA*/P*": "{#Super_L(Alt_L(p))}",
"KPH*/THRA*/KW*": "{#Super_L(Alt_L(q))}",
"KPH*/THRA*/R*": "{#Super_L(Alt_L(r))}",
"KPH*/THRA*/S*": "{#Super_L(Alt_L(s))}",
"KPH*/THRA*/T*": "{#Super_L(Alt_L(t))}",
"KPH*/THRA*/*U": "{#Super_L(Alt_L(u))}",
"KPH*/THRA*/SR*": "{#Super_L(Alt_L(v))}",
"KPH*/THRA*/W*": "{#Super_L(Alt_L(w))}",
"KPH*/THRA*/KP*": "{#Super_L(Alt_L(x))}",
"KPH*/THRA*/KWR*": "{#Super_L(Alt_L(y))}",
"KPH*/THRA*/STKPW*": "{#Super_L(Alt_L(z))}",
"KPH*/THRA*/0": "{#Super_L(Alt_L(0))}",
"KPH*/THRA*/1": "{#Super_L(Alt_L(1))}",
"KPH*/THRA*/2": "{#Super_L(Alt_L(2))}",
"KPH*/THRA*/3": "{#Super_L(Alt_L(3))}",
"KPH*/THRA*/4": "{#Super_L(Alt_L(4))}",
"KPH*/THRA*/5": "{#Super_L(Alt_L(5))}",
"KPH*/THRA*/6": "{#Super_L(Alt_L(6))}",
"KPH*/THRA*/7": "{#Super_L(Alt_L(7))}",
"KPH*/THRA*/8": "{#Super_L(Alt_L(8))}",
"KPH*/THRA*/9": "{#Super_L(Alt_L(9))}",
"KPH*/THRA*/KH-FG": "{#Super_L(Alt_L(grave))}",
"KPH*/THRA*/KW-BG": "{#Super_L(Alt_L(comma))}",
"KPH*/THRA*/PR*EPB": "{#Super_L(Alt_L(parenright))}",
"KPH*/THRA*/PREPB": "{#Super_L(Alt_L(parenleft))}",
"KPH*/THRA*/PW*FP": "{#Super_L(Alt_L(BackSpace))}",
"KPH*/THRA*/PWR*BGT": "{#Super_L(Alt_L(bracketright))}",
"KPH*/THRA*/PWR-BGT": "{#Super_L(Alt_L(bracketleft))}",
"KPH*/THRA*/R-R": "{#Super_L(Alt_L(Return))}",
"KPH*/THRA*/S-P": "{#Super_L(Alt_L(space))}",
"KPH*/THRA*/SP*S": "{#Super_L(Alt_L())}",
"KPH*/THRA*/SPWHRAERB": "{#Super_L(Alt_L(backslash))}",
"KPH*/THRA*/STPH-G": "{#Super_L(Alt_L(Right))}",
"KPH*/THRA*/STPH-B": "{#Super_L(Alt_L(Down))}",
"KPH*/THRA*/STPH-P": "{#Super_L(Alt_L(Up))}",
"KPH*/THRA*/STPH-R": "{#Super_L(Alt_L(Left))}",
"KPH*/THRA*/TA*B": "{#Super_L(Alt_L(Tab))}",
"KPH*/THRA*/TKHRAO*ET": "{#Super_L(Alt_L(Delete))}",
"KPH*/KHR*/THRA*/A*": "{#Super_L(Control_L(Alt_L(a)))}",
"KPH*/KHR*/THRA*/PW*": "{#Super_L(Control_L(Alt_L(b)))}",
"KPH*/KHR*/THRA*/KR*": "{#Super_L(Control_L(Alt_L(c)))}",
"KPH*/KHR*/THRA*/TK*": "{#Super_L(Control_L(Alt_L(d)))}",
"KPH*/KHR*/THRA*/*E": "{#Super_L(Control_L(Alt_L(e)))}",
"KPH*/KHR*/THRA*/TP*": "{#Super_L(Control_L(Alt_L(f)))}",
"KPH*/KHR*/THRA*/TKPW*": "{#Super_L(Control_L(Alt_L(g)))}",
"KPH*/KHR*/THRA*/H*": "{#Super_L(Control_L(Alt_L(h)))}",
"KPH*/KHR*/THRA*/*EU": "{#Super_L(Control_L(Alt_L(i)))}",
"KPH*/KHR*/THRA*/SKWR*": "{#Super_L(Control_L(Alt_L(j)))}",
"KPH*/KHR*/THRA*/K*": "{#Super_L(Control_L(Alt_L(k)))}",
"KPH*/KHR*/THRA*/HR*": "{#Super_L(Control_L(Alt_L(l)))}",
"KPH*/KHR*/THRA*/PH*": "{#Super_L(Control_L(Alt_L(m)))}",
"KPH*/KHR*/THRA*/TPH*": "{#Super_L(Control_L(Alt_L(n)))}",
"KPH*/KHR*/THRA*/O*": "{#Super_L(Control_L(Alt_L(o)))}",
"KPH*/KHR*/THRA*/P*": "{#Super_L(Control_L(Alt_L(p)))}",
"KPH*/KHR*/THRA*/KW*": "{#Super_L(Control_L(Alt_L(q)))}",
"KPH*/KHR*/THRA*/R*": "{#Super_L(Control_L(Alt_L(r)))}",
"KPH*/KHR*/THRA*/S*": "{#Super_L(Control_L(Alt_L(s)))}",
"KPH*/KHR*/THRA*/T*": "{#Super_L(Control_L(Alt_L(t)))}",
"KPH*/KHR*/THRA*/*U": "{#Super_L(Control_L(Alt_L(u)))}",
"KPH*/KHR*/THRA*/SR*": "{#Super_L(Control_L(Alt_L(v)))}",
"KPH*/KHR*/THRA*/W*": "{#Super_L(Control_L(Alt_L(w)))}",
"KPH*/KHR*/THRA*/KP*": "{#Super_L(Control_L(Alt_L(x)))}",
"KPH*/KHR*/THRA*/KWR*": "{#Super_L(Control_L(Alt_L(y)))}",
"KPH*/KHR*/THRA*/STKPW*": "{#Super_L(Control_L(Alt_L(z)))}",
"KPH*/KHR*/THRA*/0": "{#Super_L(Control_L(Alt_L(0)))}",
"KPH*/KHR*/THRA*/1": "{#Super_L(Control_L(Alt_L(1)))}",
"KPH*/KHR*/THRA*/2": "{#Super_L(Control_L(Alt_L(2)))}",
"KPH*/KHR*/THRA*/3": "{#Super_L(Control_L(Alt_L(3)))}",
"KPH*/KHR*/THRA*/4": "{#Super_L(Control_L(Alt_L(4)))}",
"KPH*/KHR*/THRA*/5": "{#Super_L(Control_L(Alt_L(5)))}",
"KPH*/KHR*/THRA*/6": "{#Super_L(Control_L(Alt_L(6)))}",
"KPH*/KHR*/THRA*/7": "{#Super_L(Control_L(Alt_L(7)))}",
"KPH*/KHR*/THRA*/8": "{#Super_L(Control_L(Alt_L(8)))}",
"KPH*/KHR*/THRA*/9": "{#Super_L(Control_L(Alt_L(9)))}",
"KPH*/KHR*/THRA*/KH-FG": "{#Super_L(Control_L(Alt_L(grave)))}",
"KPH*/KHR*/THRA*/KW-BG": "{#Super_L(Control_L(Alt_L(comma)))}",
"KPH*/KHR*/THRA*/PR*EPB": "{#Super_L(Control_L(Alt_L(parenright)))}",
"KPH*/KHR*/THRA*/PREPB": "{#Super_L(Control_L(Alt_L(parenleft)))}",
"KPH*/KHR*/THRA*/PW*FP": "{#Super_L(Control_L(Alt_L(BackSpace)))}",
"KPH*/KHR*/THRA*/PWR*BGT": "{#Super_L(Control_L(Alt_L(bracketright)))}",
"KPH*/KHR*/THRA*/PWR-BGT": "{#Super_L(Control_L(Alt_L(bracketleft)))}",
"KPH*/KHR*/THRA*/R-R": "{#Super_L(Control_L(Alt_L(Return)))}",
"KPH*/KHR*/THRA*/S-P": "{#Super_L(Control_L(Alt_L(space)))}",
"KPH*/KHR*/THRA*/SP*S": "{#Super_L(Control_L(Alt_L()))}",
"KPH*/KHR*/THRA*/SPWHRAERB": "{#Super_L(Control_L(Alt_L(backslash)))}",
"KPH*/KHR*/THRA*/STPH-G": "{#Super_L(Control_L(Alt_L(Right)))}",
"KPH*/KHR*/THRA*/STPH-B": "{#Super_L(Control_L(Alt_L(Down)))}",
"KPH*/KHR*/THRA*/STPH-P": "{#Super_L(Control_L(Alt_L(Up)))}",
"KPH*/KHR*/THRA*/STPH-R": "{#Super_L(Control_L(Alt_L(Left)))}",
"KPH*/KHR*/THRA*/TA*B": "{#Super_L(Control_L(Alt_L(Tab)))}",
"KPH*/KHR*/THRA*/TKHRAO*ET": "{#Super_L(Control_L(Alt_L(Delete)))}",
"KPH*/KHR*/A*": "{#Super_L(Control_L(a))}",
"KPH*/KHR*/PW*": "{#Super_L(Control_L(b))}",
"KPH*/KHR*/KR*": "{#Super_L(Control_L(c))}",
"KPH*/KHR*/TK*": "{#Super_L(Control_L(d))}",
"KPH*/KHR*/*E": "{#Super_L(Control_L(e))}",
"KPH*/KHR*/TP*": "{#Super_L(Control_L(f))}",
"KPH*/KHR*/TKPW*": "{#Super_L(Control_L(g))}",
"KPH*/KHR*/H*": "{#Super_L(Control_L(h))}",
"KPH*/KHR*/*EU": "{#Super_L(Control_L(i))}",
"KPH*/KHR*/SKWR*": "{#Super_L(Control_L(j))}",
"KPH*/KHR*/K*": "{#Super_L(Control_L(k))}",
"KPH*/KHR*/HR*": "{#Super_L(Control_L(l))}",
"KPH*/KHR*/PH*": "{#Super_L(Control_L(m))}",
"KPH*/KHR*/TPH*": "{#Super_L(Control_L(n))}",
"KPH*/KHR*/O*": "{#Super_L(Control_L(o))}",
"KPH*/KHR*/P*": "{#Super_L(Control_L(p))}",
"KPH*/KHR*/KW*": "{#Super_L(Control_L(q))}",
"KPH*/KHR*/R*": "{#Super_L(Control_L(r))}",
"KPH*/KHR*/S*": "{#Super_L(Control_L(s))}",
"KPH*/KHR*/T*": "{#Super_L(Control_L(t))}",
"KPH*/KHR*/*U": "{#Super_L(Control_L(u))}",
"KPH*/KHR*/SR*": "{#Super_L(Control_L(v))}",
"KPH*/KHR*/W*": "{#Super_L(Control_L(w))}",
"KPH*/KHR*/KP*": "{#Super_L(Control_L(x))}",
"KPH*/KHR*/KWR*": "{#Super_L(Control_L(y))}",
"KPH*/KHR*/STKPW*": "{#Super_L(Control_L(z))}",
"KPH*/KHR*/0": "{#Super_L(Control_L(0))}",
"KPH*/KHR*/1": "{#Super_L(Control_L(1))}",
"KPH*/KHR*/2": "{#Super_L(Control_L(2))}",
"KPH*/KHR*/3": "{#Super_L(Control_L(3))}",
"KPH*/KHR*/4": "{#Super_L(Control_L(4))}",
"KPH*/KHR*/5": "{#Super_L(Control_L(5))}",
"KPH*/KHR*/6": "{#Super_L(Control_L(6))}",
"KPH*/KHR*/7": "{#Super_L(Control_L(7))}",
"KPH*/KHR*/8": "{#Super_L(Control_L(8))}",
"KPH*/KHR*/9": "{#Super_L(Control_L(9))}",
"KPH*/KHR*/KH-FG": "{#Super_L(Control_L(grave))}",
"KPH*/KHR*/KW-BG": "{#Super_L(Control_L(comma))}",
"KPH*/KHR*/PR*EPB": "{#Super_L(Control_L(parenright))}",
"KPH*/KHR*/PREPB": "{#Super_L(Control_L(parenleft))}",
"KPH*/KHR*/PW*FP": "{#Super_L(Control_L(BackSpace))}",
"KPH*/KHR*/PWR*BGT": "{#Super_L(Control_L(bracketright))}",
"KPH*/KHR*/PWR-BGT": "{#Super_L(Control_L(bracketleft))}",
"KPH*/KHR*/R-R": "{#Super_L(Control_L(Return))}",
"KPH*/KHR*/S-P": "{#Super_L(Control_L(space))}",
"KPH*/KHR*/SP*S": "{#Super_L(Control_L())}",
"KPH*/KHR*/SPWHRAERB": "{#Super_L(Control_L(backslash))}",
"KPH*/KHR*/STPH-G": "{#Super_L(Control_L(Right))}",
"KPH*/KHR*/STPH-B": "{#Super_L(Control_L(Down))}",
"KPH*/KHR*/STPH-P": "{#Super_L(Control_L(Up))}",
"KPH*/KHR*/STPH-R": "{#Super_L(Control_L(Left))}",
"KPH*/KHR*/TA*B": "{#Super_L(Control_L(Tab))}",
"KPH*/KHR*/TKHRAO*ET": "{#Super_L(Control_L(Delete))}",
"KPH*/THRA*/KHR*/A*": "{#Super_L(Alt_L(Control_L(a)))}",
"KPH*/THRA*/KHR*/PW*": "{#Super_L(Alt_L(Control_L(b)))}",
"KPH*/THRA*/KHR*/KR*": "{#Super_L(Alt_L(Control_L(c)))}",
"KPH*/THRA*/KHR*/TK*": "{#Super_L(Alt_L(Control_L(d)))}",
"KPH*/THRA*/KHR*/*E": "{#Super_L(Alt_L(Control_L(e)))}",
"KPH*/THRA*/KHR*/TP*": "{#Super_L(Alt_L(Control_L(f)))}",
"KPH*/THRA*/KHR*/TKPW*": "{#Super_L(Alt_L(Control_L(g)))}",
"KPH*/THRA*/KHR*/H*": "{#Super_L(Alt_L(Control_L(h)))}",
"KPH*/THRA*/KHR*/*EU": "{#Super_L(Alt_L(Control_L(i)))}",
"KPH*/THRA*/KHR*/SKWR*": "{#Super_L(Alt_L(Control_L(j)))}",
"KPH*/THRA*/KHR*/K*": "{#Super_L(Alt_L(Control_L(k)))}",
"KPH*/THRA*/KHR*/HR*": "{#Super_L(Alt_L(Control_L(l)))}",
"KPH*/THRA*/KHR*/PH*": "{#Super_L(Alt_L(Control_L(m)))}",
"KPH*/THRA*/KHR*/TPH*": "{#Super_L(Alt_L(Control_L(n)))}",
"KPH*/THRA*/KHR*/O*": "{#Super_L(Alt_L(Control_L(o)))}",
"KPH*/THRA*/KHR*/P*": "{#Super_L(Alt_L(Control_L(p)))}",
"KPH*/THRA*/KHR*/KW*": "{#Super_L(Alt_L(Control_L(q)))}",
"KPH*/THRA*/KHR*/R*": "{#Super_L(Alt_L(Control_L(r)))}",
"KPH*/THRA*/KHR*/S*": "{#Super_L(Alt_L(Control_L(s)))}",
"KPH*/THRA*/KHR*/T*": "{#Super_L(Alt_L(Control_L(t)))}",
"KPH*/THRA*/KHR*/*U": "{#Super_L(Alt_L(Control_L(u)))}",
"KPH*/THRA*/KHR*/SR*": "{#Super_L(Alt_L(Control_L(v)))}",
"KPH*/THRA*/KHR*/W*": "{#Super_L(Alt_L(Control_L(w)))}",
"KPH*/THRA*/KHR*/KP*": "{#Super_L(Alt_L(Control_L(x)))}",
"KPH*/THRA*/KHR*/KWR*": "{#Super_L(Alt_L(Control_L(y)))}",
"KPH*/THRA*/KHR*/STKPW*": "{#Super_L(Alt_L(Control_L(z)))}",
"KPH*/THRA*/KHR*/0": "{#Super_L(Alt_L(Control_L(0)))}",
"KPH*/THRA*/KHR*/1": "{#Super_L(Alt_L(Control_L(1)))}",
"KPH*/THRA*/KHR*/2": "{#Super_L(Alt_L(Control_L(2)))}",
"KPH*/THRA*/KHR*/3": "{#Super_L(Alt_L(Control_L(3)))}",
"KPH*/THRA*/KHR*/4": "{#Super_L(Alt_L(Control_L(4)))}",
"KPH*/THRA*/KHR*/5": "{#Super_L(Alt_L(Control_L(5)))}",
"KPH*/THRA*/KHR*/6": "{#Super_L(Alt_L(Control_L(6)))}",
"KPH*/THRA*/KHR*/7": "{#Super_L(Alt_L(Control_L(7)))}",
"KPH*/THRA*/KHR*/8": "{#Super_L(Alt_L(Control_L(8)))}",
"KPH*/THRA*/KHR*/9": "{#Super_L(Alt_L(Control_L(9)))}",
"KPH*/THRA*/KHR*/KH-FG": "{#Super_L(Alt_L(Control_L(grave)))}",
"KPH*/THRA*/KHR*/KW-BG": "{#Super_L(Alt_L(Control_L(comma)))}",
"KPH*/THRA*/KHR*/PR*EPB": "{#Super_L(Alt_L(Control_L(parenright)))}",
"KPH*/THRA*/KHR*/PREPB": "{#Super_L(Alt_L(Control_L(parenleft)))}",
"KPH*/THRA*/KHR*/PW*FP": "{#Super_L(Alt_L(Control_L(BackSpace)))}",
"KPH*/THRA*/KHR*/PWR*BGT": "{#Super_L(Alt_L(Control_L(bracketright)))}",
"KPH*/THRA*/KHR*/PWR-BGT": "{#Super_L(Alt_L(Control_L(bracketleft)))}",
"KPH*/THRA*/KHR*/R-R": "{#Super_L(Alt_L(Control_L(Return)))}",
"KPH*/THRA*/KHR*/S-P": "{#Super_L(Alt_L(Control_L(space)))}",
"KPH*/THRA*/KHR*/SP*S": "{#Super_L(Alt_L(Control_L()))}",
"KPH*/THRA*/KHR*/SPWHRAERB": "{#Super_L(Alt_L(Control_L(backslash)))}",
"KPH*/THRA*/KHR*/STPH-G": "{#Super_L(Alt_L(Control_L(Right)))}",
"KPH*/THRA*/KHR*/STPH-B": "{#Super_L(Alt_L(Control_L(Down)))}",
"KPH*/THRA*/KHR*/STPH-P": "{#Super_L(Alt_L(Control_L(Up)))}",
"KPH*/THRA*/KHR*/STPH-R": "{#Super_L(Alt_L(Control_L(Left)))}",
"KPH*/THRA*/KHR*/TA*B": "{#Super_L(Alt_L(Control_L(Tab)))}",
"KPH*/THRA*/KHR*/TKHRAO*ET": "{#Super_L(Alt_L(Control_L(Delete)))}",
"KPH*/STP*/THRA*/A*": "{#Super_L(Shift_L(Alt_L(a)))}",
"KPH*/STP*/THRA*/PW*": "{#Super_L(Shift_L(Alt_L(b)))}",
"KPH*/STP*/THRA*/KR*": "{#Super_L(Shift_L(Alt_L(c)))}",
"KPH*/STP*/THRA*/TK*": "{#Super_L(Shift_L(Alt_L(d)))}",
"KPH*/STP*/THRA*/*E": "{#Super_L(Shift_L(Alt_L(e)))}",
"KPH*/STP*/THRA*/TP*": "{#Super_L(Shift_L(Alt_L(f)))}",
"KPH*/STP*/THRA*/TKPW*": "{#Super_L(Shift_L(Alt_L(g)))}",
"KPH*/STP*/THRA*/H*": "{#Super_L(Shift_L(Alt_L(h)))}",
"KPH*/STP*/THRA*/*EU": "{#Super_L(Shift_L(Alt_L(i)))}",
"KPH*/STP*/THRA*/SKWR*": "{#Super_L(Shift_L(Alt_L(j)))}",
"KPH*/STP*/THRA*/K*": "{#Super_L(Shift_L(Alt_L(k)))}",
"KPH*/STP*/THRA*/HR*": "{#Super_L(Shift_L(Alt_L(l)))}",
"KPH*/STP*/THRA*/PH*": "{#Super_L(Shift_L(Alt_L(m)))}",
"KPH*/STP*/THRA*/TPH*": "{#Super_L(Shift_L(Alt_L(n)))}",
"KPH*/STP*/THRA*/O*": "{#Super_L(Shift_L(Alt_L(o)))}",
"KPH*/STP*/THRA*/P*": "{#Super_L(Shift_L(Alt_L(p)))}",
"KPH*/STP*/THRA*/KW*": "{#Super_L(Shift_L(Alt_L(q)))}",
"KPH*/STP*/THRA*/R*": "{#Super_L(Shift_L(Alt_L(r)))}",
"KPH*/STP*/THRA*/S*": "{#Super_L(Shift_L(Alt_L(s)))}",
"KPH*/STP*/THRA*/T*": "{#Super_L(Shift_L(Alt_L(t)))}",
"KPH*/STP*/THRA*/*U": "{#Super_L(Shift_L(Alt_L(u)))}",
"KPH*/STP*/THRA*/SR*": "{#Super_L(Shift_L(Alt_L(v)))}",
"KPH*/STP*/THRA*/W*": "{#Super_L(Shift_L(Alt_L(w)))}",
"KPH*/STP*/THRA*/KP*": "{#Super_L(Shift_L(Alt_L(x)))}",
"KPH*/STP*/THRA*/KWR*": "{#Super_L(Shift_L(Alt_L(y)))}",
"KPH*/STP*/THRA*/STKPW*": "{#Super_L(Shift_L(Alt_L(z)))}",
"KPH*/STP*/THRA*/0": "{#Super_L(Shift_L(Alt_L(0)))}",
"KPH*/STP*/THRA*/1": "{#Super_L(Shift_L(Alt_L(1)))}",
"KPH*/STP*/THRA*/2": "{#Super_L(Shift_L(Alt_L(2)))}",
"KPH*/STP*/THRA*/3": "{#Super_L(Shift_L(Alt_L(3)))}",
"KPH*/STP*/THRA*/4": "{#Super_L(Shift_L(Alt_L(4)))}",
"KPH*/STP*/THRA*/5": "{#Super_L(Shift_L(Alt_L(5)))}",
"KPH*/STP*/THRA*/6": "{#Super_L(Shift_L(Alt_L(6)))}",
"KPH*/STP*/THRA*/7": "{#Super_L(Shift_L(Alt_L(7)))}",
"KPH*/STP*/THRA*/8": "{#Super_L(Shift_L(Alt_L(8)))}",
"KPH*/STP*/THRA*/9": "{#Super_L(Shift_L(Alt_L(9)))}",
"KPH*/STP*/THRA*/KH-FG": "{#Super_L(Shift_L(Alt_L(grave)))}",
"KPH*/STP*/THRA*/KW-BG": "{#Super_L(Shift_L(Alt_L(comma)))}",
"KPH*/STP*/THRA*/PR*EPB": "{#Super_L(Shift_L(Alt_L(parenright)))}",
"KPH*/STP*/THRA*/PREPB": "{#Super_L(Shift_L(Alt_L(parenleft)))}",
"KPH*/STP*/THRA*/PW*FP": "{#Super_L(Shift_L(Alt_L(BackSpace)))}",
"KPH*/STP*/THRA*/PWR*BGT": "{#Super_L(Shift_L(Alt_L(bracketright)))}",
"KPH*/STP*/THRA*/PWR-BGT": "{#Super_L(Shift_L(Alt_L(bracketleft)))}",
"KPH*/STP*/THRA*/R-R": "{#Super_L(Shift_L(Alt_L(Return)))}",
"KPH*/STP*/THRA*/S-P": "{#Super_L(Shift_L(Alt_L(space)))}",
"KPH*/STP*/THRA*/SP*S": "{#Super_L(Shift_L(Alt_L()))}",
"KPH*/STP*/THRA*/SPWHRAERB": "{#Super_L(Shift_L(Alt_L(backslash)))}",
"KPH*/STP*/THRA*/STPH-G": "{#Super_L(Shift_L(Alt_L(Right)))}",
"KPH*/STP*/THRA*/STPH-B": "{#Super_L(Shift_L(Alt_L(Down)))}",
"KPH*/STP*/THRA*/STPH-P": "{#Super_L(Shift_L(Alt_L(Up)))}",
"KPH*/STP*/THRA*/STPH-R": "{#Super_L(Shift_L(Alt_L(Left)))}",
"KPH*/STP*/THRA*/TA*B": "{#Super_L(Shift_L(Alt_L(Tab)))}",
"KPH*/STP*/THRA*/TKHRAO*ET": "{#Super_L(Shift_L(Alt_L(Delete)))}",
"KPH*/STP*/KHR*/THRA*/A*": "{#Super_L(Shift_L(Control_L(Alt_L(a))))}",
"KPH*/STP*/KHR*/THRA*/PW*": "{#Super_L(Shift_L(Control_L(Alt_L(b))))}",
"KPH*/STP*/KHR*/THRA*/KR*": "{#Super_L(Shift_L(Control_L(Alt_L(c))))}",
"KPH*/STP*/KHR*/THRA*/TK*": "{#Super_L(Shift_L(Control_L(Alt_L(d))))}",
"KPH*/STP*/KHR*/THRA*/*E": "{#Super_L(Shift_L(Control_L(Alt_L(e))))}",
"KPH*/STP*/KHR*/THRA*/TP*": "{#Super_L(Shift_L(Control_L(Alt_L(f))))}",
"KPH*/STP*/KHR*/THRA*/TKPW*": "{#Super_L(Shift_L(Control_L(Alt_L(g))))}",
"KPH*/STP*/KHR*/THRA*/H*": "{#Super_L(Shift_L(Control_L(Alt_L(h))))}",
"KPH*/STP*/KHR*/THRA*/*EU": "{#Super_L(Shift_L(Control_L(Alt_L(i))))}",
"KPH*/STP*/KHR*/THRA*/SKWR*": "{#Super_L(Shift_L(Control_L(Alt_L(j))))}",
"KPH*/STP*/KHR*/THRA*/K*": "{#Super_L(Shift_L(Control_L(Alt_L(k))))}",
"KPH*/STP*/KHR*/THRA*/HR*": "{#Super_L(Shift_L(Control_L(Alt_L(l))))}",
"KPH*/STP*/KHR*/THRA*/PH*": "{#Super_L(Shift_L(Control_L(Alt_L(m))))}",
"KPH*/STP*/KHR*/THRA*/TPH*": "{#Super_L(Shift_L(Control_L(Alt_L(n))))}",
"KPH*/STP*/KHR*/THRA*/O*": "{#Super_L(Shift_L(Control_L(Alt_L(o))))}",
"KPH*/STP*/KHR*/THRA*/P*": "{#Super_L(Shift_L(Control_L(Alt_L(p))))}",
"KPH*/STP*/KHR*/THRA*/KW*": "{#Super_L(Shift_L(Control_L(Alt_L(q))))}",
"KPH*/STP*/KHR*/THRA*/R*": "{#Super_L(Shift_L(Control_L(Alt_L(r))))}",
"KPH*/STP*/KHR*/THRA*/S*": "{#Super_L(Shift_L(Control_L(Alt_L(s))))}",
"KPH*/STP*/KHR*/THRA*/T*": "{#Super_L(Shift_L(Control_L(Alt_L(t))))}",
"KPH*/STP*/KHR*/THRA*/*U": "{#Super_L(Shift_L(Control_L(Alt_L(u))))}",
"KPH*/STP*/KHR*/THRA*/SR*": "{#Super_L(Shift_L(Control_L(Alt_L(v))))}",
"KPH*/STP*/KHR*/THRA*/W*": "{#Super_L(Shift_L(Control_L(Alt_L(w))))}",
"KPH*/STP*/KHR*/THRA*/KP*": "{#Super_L(Shift_L(Control_L(Alt_L(x))))}",
"KPH*/STP*/KHR*/THRA*/KWR*": "{#Super_L(Shift_L(Control_L(Alt_L(y))))}",
"KPH*/STP*/KHR*/THRA*/STKPW*": "{#Super_L(Shift_L(Control_L(Alt_L(z))))}",
"KPH*/STP*/KHR*/THRA*/0": "{#Super_L(Shift_L(Control_L(Alt_L(0))))}",
"KPH*/STP*/KHR*/THRA*/1": "{#Super_L(Shift_L(Control_L(Alt_L(1))))}",
"KPH*/STP*/KHR*/THRA*/2": "{#Super_L(Shift_L(Control_L(Alt_L(2))))}",
"KPH*/STP*/KHR*/THRA*/3": "{#Super_L(Shift_L(Control_L(Alt_L(3))))}",
"KPH*/STP*/KHR*/THRA*/4": "{#Super_L(Shift_L(Control_L(Alt_L(4))))}",
"KPH*/STP*/KHR*/THRA*/5": "{#Super_L(Shift_L(Control_L(Alt_L(5))))}",
"KPH*/STP*/KHR*/THRA*/6": "{#Super_L(Shift_L(Control_L(Alt_L(6))))}",
"KPH*/STP*/KHR*/THRA*/7": "{#Super_L(Shift_L(Control_L(Alt_L(7))))}",
"KPH*/STP*/KHR*/THRA*/8": "{#Super_L(Shift_L(Control_L(Alt_L(8))))}",
"KPH*/STP*/KHR*/THRA*/9": "{#Super_L(Shift_L(Control_L(Alt_L(9))))}",
"KPH*/STP*/KHR*/THRA*/KH-FG": "{#Super_L(Shift_L(Control_L(Alt_L(grave))))}",
"KPH*/STP*/KHR*/THRA*/KW-BG": "{#Super_L(Shift_L(Control_L(Alt_L(comma))))}",
"KPH*/STP*/KHR*/THRA*/PR*EPB": "{#Super_L(Shift_L(Control_L(Alt_L(parenright))))}",
"KPH*/STP*/KHR*/THRA*/PREPB": "{#Super_L(Shift_L(Control_L(Alt_L(parenleft))))}",
"KPH*/STP*/KHR*/THRA*/PW*FP": "{#Super_L(Shift_L(Control_L(Alt_L(BackSpace))))}",
"KPH*/STP*/KHR*/THRA*/PWR*BGT": "{#Super_L(Shift_L(Control_L(Alt_L(bracketright))))}",
"KPH*/STP*/KHR*/THRA*/PWR-BGT": "{#Super_L(Shift_L(Control_L(Alt_L(bracketleft))))}",
"KPH*/STP*/KHR*/THRA*/R-R": "{#Super_L(Shift_L(Control_L(Alt_L(Return))))}",
"KPH*/STP*/KHR*/THRA*/S-P": "{#Super_L(Shift_L(Control_L(Alt_L(space))))}",
"KPH*/STP*/KHR*/THRA*/SP*S": "{#Super_L(Shift_L(Control_L(Alt_L())))}",
"KPH*/STP*/KHR*/THRA*/SPWHRAERB": "{#Super_L(Shift_L(Control_L(Alt_L(backslash))))}",
"KPH*/STP*/KHR*/THRA*/STPH-G": "{#Super_L(Shift_L(Control_L(Alt_L(Right))))}",
"KPH*/STP*/KHR*/THRA*/STPH-B": "{#Super_L(Shift_L(Control_L(Alt_L(Down))))}",
"KPH*/STP*/KHR*/THRA*/STPH-P": "{#Super_L(Shift_L(Control_L(Alt_L(Up))))}",
"KPH*/STP*/KHR*/THRA*/STPH-R": "{#Super_L(Shift_L(Control_L(Alt_L(Left))))}",
"KPH*/STP*/KHR*/THRA*/TA*B": "{#Super_L(Shift_L(Control_L(Alt_L(Tab))))}",
"KPH*/STP*/KHR*/THRA*/TKHRAO*ET": "{#Super_L(Shift_L(Control_L(Alt_L(Delete))))}",
"KPH*/STP*/KHR*/A*": "{#Super_L(Shift_L(Control_L(a)))}",
"KPH*/STP*/KHR*/PW*": "{#Super_L(Shift_L(Control_L(b)))}",
"KPH*/STP*/KHR*/KR*": "{#Super_L(Shift_L(Control_L(c)))}",
"KPH*/STP*/KHR*/TK*": "{#Super_L(Shift_L(Control_L(d)))}",
"KPH*/STP*/KHR*/*E": "{#Super_L(Shift_L(Control_L(e)))}",
"KPH*/STP*/KHR*/TP*": "{#Super_L(Shift_L(Control_L(f)))}",
"KPH*/STP*/KHR*/TKPW*": "{#Super_L(Shift_L(Control_L(g)))}",
"KPH*/STP*/KHR*/H*": "{#Super_L(Shift_L(Control_L(h)))}",
"KPH*/STP*/KHR*/*EU": "{#Super_L(Shift_L(Control_L(i)))}",
"KPH*/STP*/KHR*/SKWR*": "{#Super_L(Shift_L(Control_L(j)))}",
"KPH*/STP*/KHR*/K*": "{#Super_L(Shift_L(Control_L(k)))}",
"KPH*/STP*/KHR*/HR*": "{#Super_L(Shift_L(Control_L(l)))}",
"KPH*/STP*/KHR*/PH*": "{#Super_L(Shift_L(Control_L(m)))}",
"KPH*/STP*/KHR*/TPH*": "{#Super_L(Shift_L(Control_L(n)))}",
"KPH*/STP*/KHR*/O*": "{#Super_L(Shift_L(Control_L(o)))}",
"KPH*/STP*/KHR*/P*": "{#Super_L(Shift_L(Control_L(p)))}",
"KPH*/STP*/KHR*/KW*": "{#Super_L(Shift_L(Control_L(q)))}",
"KPH*/STP*/KHR*/R*": "{#Super_L(Shift_L(Control_L(r)))}",
"KPH*/STP*/KHR*/S*": "{#Super_L(Shift_L(Control_L(s)))}",
"KPH*/STP*/KHR*/T*": "{#Super_L(Shift_L(Control_L(t)))}",
"KPH*/STP*/KHR*/*U": "{#Super_L(Shift_L(Control_L(u)))}",
"KPH*/STP*/KHR*/SR*": "{#Super_L(Shift_L(Control_L(v)))}",
"KPH*/STP*/KHR*/W*": "{#Super_L(Shift_L(Control_L(w)))}",
"KPH*/STP*/KHR*/KP*": "{#Super_L(Shift_L(Control_L(x)))}",
"KPH*/STP*/KHR*/KWR*": "{#Super_L(Shift_L(Control_L(y)))}",
"KPH*/STP*/KHR*/STKPW*": "{#Super_L(Shift_L(Control_L(z)))}",
"KPH*/STP*/KHR*/0": "{#Super_L(Shift_L(Control_L(0)))}",
"KPH*/STP*/KHR*/1": "{#Super_L(Shift_L(Control_L(1)))}",
"KPH*/STP*/KHR*/2": "{#Super_L(Shift_L(Control_L(2)))}",
"KPH*/STP*/KHR*/3": "{#Super_L(Shift_L(Control_L(3)))}",
"KPH*/STP*/KHR*/4": "{#Super_L(Shift_L(Control_L(4)))}",
"KPH*/STP*/KHR*/5": "{#Super_L(Shift_L(Control_L(5)))}",
"KPH*/STP*/KHR*/6": "{#Super_L(Shift_L(Control_L(6)))}",
"KPH*/STP*/KHR*/7": "{#Super_L(Shift_L(Control_L(7)))}",
"KPH*/STP*/KHR*/8": "{#Super_L(Shift_L(Control_L(8)))}",
"KPH*/STP*/KHR*/9": "{#Super_L(Shift_L(Control_L(9)))}",
"KPH*/STP*/KHR*/KH-FG": "{#Super_L(Shift_L(Control_L(grave)))}",
"KPH*/STP*/KHR*/KW-BG": "{#Super_L(Shift_L(Control_L(comma)))}",
"KPH*/STP*/KHR*/PR*EPB": "{#Super_L(Shift_L(Control_L(parenright)))}",
"KPH*/STP*/KHR*/PREPB": "{#Super_L(Shift_L(Control_L(parenleft)))}",
"KPH*/STP*/KHR*/PW*FP": "{#Super_L(Shift_L(Control_L(BackSpace)))}",
"KPH*/STP*/KHR*/PWR*BGT": "{#Super_L(Shift_L(Control_L(bracketright)))}",
"KPH*/STP*/KHR*/PWR-BGT": "{#Super_L(Shift_L(Control_L(bracketleft)))}",
"KPH*/STP*/KHR*/R-R": "{#Super_L(Shift_L(Control_L(Return)))}",
"KPH*/STP*/KHR*/S-P": "{#Super_L(Shift_L(Control_L(space)))}",
"KPH*/STP*/KHR*/SP*S": "{#Super_L(Shift_L(Control_L()))}",
"KPH*/STP*/KHR*/SPWHRAERB": "{#Super_L(Shift_L(Control_L(backslash)))}",
"KPH*/STP*/KHR*/STPH-G": "{#Super_L(Shift_L(Control_L(Right)))}",
"KPH*/STP*/KHR*/STPH-B": "{#Super_L(Shift_L(Control_L(Down)))}",
"KPH*/STP*/KHR*/STPH-P": "{#Super_L(Shift_L(Control_L(Up)))}",
"KPH*/STP*/KHR*/STPH-R": "{#Super_L(Shift_L(Control_L(Left)))}",
"KPH*/STP*/KHR*/TA*B": "{#Super_L(Shift_L(Control_L(Tab)))}",
"KPH*/STP*/KHR*/TKHRAO*ET": "{#Super_L(Shift_L(Control_L(Delete)))}",
"KPH*/STP*/THRA*/KHR*/A*": "{#Super_L(Shift_L(Alt_L(Control_L(a))))}",
"KPH*/STP*/THRA*/KHR*/PW*": "{#Super_L(Shift_L(Alt_L(Control_L(b))))}",
"KPH*/STP*/THRA*/KHR*/KR*": "{#Super_L(Shift_L(Alt_L(Control_L(c))))}",
"KPH*/STP*/THRA*/KHR*/TK*": "{#Super_L(Shift_L(Alt_L(Control_L(d))))}",
"KPH*/STP*/THRA*/KHR*/*E": "{#Super_L(Shift_L(Alt_L(Control_L(e))))}",
"KPH*/STP*/THRA*/KHR*/TP*": "{#Super_L(Shift_L(Alt_L(Control_L(f))))}",
"KPH*/STP*/THRA*/KHR*/TKPW*": "{#Super_L(Shift_L(Alt_L(Control_L(g))))}",
"KPH*/STP*/THRA*/KHR*/H*": "{#Super_L(Shift_L(Alt_L(Control_L(h))))}",
"KPH*/STP*/THRA*/KHR*/*EU": "{#Super_L(Shift_L(Alt_L(Control_L(i))))}",
"KPH*/STP*/THRA*/KHR*/SKWR*": "{#Super_L(Shift_L(Alt_L(Control_L(j))))}",
"KPH*/STP*/THRA*/KHR*/K*": "{#Super_L(Shift_L(Alt_L(Control_L(k))))}",
"KPH*/STP*/THRA*/KHR*/HR*": "{#Super_L(Shift_L(Alt_L(Control_L(l))))}",
"KPH*/STP*/THRA*/KHR*/PH*": "{#Super_L(Shift_L(Alt_L(Control_L(m))))}",
"KPH*/STP*/THRA*/KHR*/TPH*": "{#Super_L(Shift_L(Alt_L(Control_L(n))))}",
"KPH*/STP*/THRA*/KHR*/O*": "{#Super_L(Shift_L(Alt_L(Control_L(o))))}",
"KPH*/STP*/THRA*/KHR*/P*": "{#Super_L(Shift_L(Alt_L(Control_L(p))))}",
"KPH*/STP*/THRA*/KHR*/KW*": "{#Super_L(Shift_L(Alt_L(Control_L(q))))}",
"KPH*/STP*/THRA*/KHR*/R*": "{#Super_L(Shift_L(Alt_L(Control_L(r))))}",
"KPH*/STP*/THRA*/KHR*/S*": "{#Super_L(Shift_L(Alt_L(Control_L(s))))}",
"KPH*/STP*/THRA*/KHR*/T*": "{#Super_L(Shift_L(Alt_L(Control_L(t))))}",
"KPH*/STP*/THRA*/KHR*/*U": "{#Super_L(Shift_L(Alt_L(Control_L(u))))}",
"KPH*/STP*/THRA*/KHR*/SR*": "{#Super_L(Shift_L(Alt_L(Control_L(v))))}",
"KPH*/STP*/THRA*/KHR*/W*": "{#Super_L(Shift_L(Alt_L(Control_L(w))))}",
"KPH*/STP*/THRA*/KHR*/KP*": "{#Super_L(Shift_L(Alt_L(Control_L(x))))}",
"KPH*/STP*/THRA*/KHR*/KWR*": "{#Super_L(Shift_L(Alt_L(Control_L(y))))}",
"KPH*/STP*/THRA*/KHR*/STKPW*": "{#Super_L(Shift_L(Alt_L(Control_L(z))))}",
"KPH*/STP*/THRA*/KHR*/0": "{#Super_L(Shift_L(Alt_L(Control_L(0))))}",
"KPH*/STP*/THRA*/KHR*/1": "{#Super_L(Shift_L(Alt_L(Control_L(1))))}",
"KPH*/STP*/THRA*/KHR*/2": "{#Super_L(Shift_L(Alt_L(Control_L(2))))}",
"KPH*/STP*/THRA*/KHR*/3": "{#Super_L(Shift_L(Alt_L(Control_L(3))))}",
"KPH*/STP*/THRA*/KHR*/4": "{#Super_L(Shift_L(Alt_L(Control_L(4))))}",
"KPH*/STP*/THRA*/KHR*/5": "{#Super_L(Shift_L(Alt_L(Control_L(5))))}",
"KPH*/STP*/THRA*/KHR*/6": "{#Super_L(Shift_L(Alt_L(Control_L(6))))}",
"KPH*/STP*/THRA*/KHR*/7": "{#Super_L(Shift_L(Alt_L(Control_L(7))))}",
"KPH*/STP*/THRA*/KHR*/8": "{#Super_L(Shift_L(Alt_L(Control_L(8))))}",
"KPH*/STP*/THRA*/KHR*/9": "{#Super_L(Shift_L(Alt_L(Control_L(9))))}",
"KPH*/STP*/THRA*/KHR*/KH-FG": "{#Super_L(Shift_L(Alt_L(Control_L(grave))))}",
"KPH*/STP*/THRA*/KHR*/KW-BG": "{#Super_L(Shift_L(Alt_L(Control_L(comma))))}",
"KPH*/STP*/THRA*/KHR*/PR*EPB": "{#Super_L(Shift_L(Alt_L(Control_L(parenright))))}",
"KPH*/STP*/THRA*/KHR*/PREPB": "{#Super_L(Shift_L(Alt_L(Control_L(parenleft))))}",
"KPH*/STP*/THRA*/KHR*/PW*FP": "{#Super_L(Shift_L(Alt_L(Control_L(BackSpace))))}",
"KPH*/STP*/THRA*/KHR*/PWR*BGT": "{#Super_L(Shift_L(Alt_L(Control_L(bracketright))))}",
"KPH*/STP*/THRA*/KHR*/PWR-BGT": "{#Super_L(Shift_L(Alt_L(Control_L(bracketleft))))}",
"KPH*/STP*/THRA*/KHR*/R-R": "{#Super_L(Shift_L(Alt_L(Control_L(Return))))}",
"KPH*/STP*/THRA*/KHR*/S-P": "{#Super_L(Shift_L(Alt_L(Control_L(space))))}",
"KPH*/STP*/THRA*/KHR*/SP*S": "{#Super_L(Shift_L(Alt_L(Control_L())))}",
"KPH*/STP*/THRA*/KHR*/SPWHRAERB": "{#Super_L(Shift_L(Alt_L(Control_L(backslash))))}",
"KPH*/STP*/THRA*/KHR*/STPH-G": "{#Super_L(Shift_L(Alt_L(Control_L(Right))))}",
"KPH*/STP*/THRA*/KHR*/STPH-B": "{#Super_L(Shift_L(Alt_L(Control_L(Down))))}",
"KPH*/STP*/THRA*/KHR*/STPH-P": "{#Super_L(Shift_L(Alt_L(Control_L(Up))))}",
"KPH*/STP*/THRA*/KHR*/STPH-R": "{#Super_L(Shift_L(Alt_L(Control_L(Left))))}",
"KPH*/STP*/THRA*/KHR*/TA*B": "{#Super_L(Shift_L(Alt_L(Control_L(Tab))))}",
"KPH*/STP*/THRA*/KHR*/TKHRAO*ET": "{#Super_L(Shift_L(Alt_L(Control_L(Delete))))}",
"STP*/A*": "{#Shift_L(a)}",
"STP*/PW*": "{#Shift_L(b)}",
"STP*/KR*": "{#Shift_L(c)}",
"STP*/TK*": "{#Shift_L(d)}",
"STP*/*E": "{#Shift_L(e)}",
"STP*/TP*": "{#Shift_L(f)}",
"STP*/TKPW*": "{#Shift_L(g)}",
"STP*/H*": "{#Shift_L(h)}",
"STP*/*EU": "{#Shift_L(i)}",
"STP*/SKWR*": "{#Shift_L(j)}",
"STP*/K*": "{#Shift_L(k)}",
"STP*/HR*": "{#Shift_L(l)}",
"STP*/PH*": "{#Shift_L(m)}",
"STP*/TPH*": "{#Shift_L(n)}",
"STP*/O*": "{#Shift_L(o)}",
"STP*/P*": "{#Shift_L(p)}",
"STP*/KW*": "{#Shift_L(q)}",
"STP*/R*": "{#Shift_L(r)}",
"STP*/S*": "{#Shift_L(s)}",
"STP*/T*": "{#Shift_L(t)}",
"STP*/*U": "{#Shift_L(u)}",
"STP*/SR*": "{#Shift_L(v)}",
"STP*/W*": "{#Shift_L(w)}",
"STP*/KP*": "{#Shift_L(x)}",
"STP*/KWR*": "{#Shift_L(y)}",
"STP*/STKPW*": "{#Shift_L(z)}",
"STP*/0": "{#Shift_L(0)}",
"STP*/1": "{#Shift_L(1)}",
"STP*/2": "{#Shift_L(2)}",
"STP*/3": "{#Shift_L(3)}",
"STP*/4": "{#Shift_L(4)}",
"STP*/5": "{#Shift_L(5)}",
"STP*/6": "{#Shift_L(6)}",
"STP*/7": "{#Shift_L(7)}",
"STP*/8": "{#Shift_L(8)}",
"STP*/9": "{#Shift_L(9)}",
"STP*/KH-FG": "{#Shift_L(grave)}",
"STP*/KW-BG": "{#Shift_L(comma)}",
"STP*/PR*EPB": "{#Shift_L(parenright)}",
"STP*/PREPB": "{#Shift_L(parenleft)}",
"STP*/PW*FP": "{#Shift_L(BackSpace)}",
"STP*/PWR*BGT": "{#Shift_L(bracketright)}",
"STP*/PWR-BGT": "{#Shift_L(bracketleft)}",
"STP*/R-R": "{#Shift_L(Return)}",
"STP*/S-P": "{#Shift_L(space)}",
"STP*/SP*S": "{#Shift_L()}",
"STP*/SPWHRAERB": "{#Shift_L(backslash)}",
"STP*/STPH-G": "{#Shift_L(Right)}",
"STP*/STPH-B": "{#Shift_L(Down)}",
"STP*/STPH-P": "{#Shift_L(Up)}",
"STP*/STPH-R": "{#Shift_L(Left)}",
"STP*/TA*B": "{#Shift_L(Tab)}",
"STP*/TKHRAO*ET": "{#Shift_L(Delete)}",
"KPH*/STP*/A*": "{#Super_L(Shift_L(a))}",
"KPH*/STP*/PW*": "{#Super_L(Shift_L(b))}",
"KPH*/STP*/KR*": "{#Super_L(Shift_L(c))}",
"KPH*/STP*/TK*": "{#Super_L(Shift_L(d))}",
"KPH*/STP*/*E": "{#Super_L(Shift_L(e))}",
"KPH*/STP*/TP*": "{#Super_L(Shift_L(f))}",
"KPH*/STP*/TKPW*": "{#Super_L(Shift_L(g))}",
"KPH*/STP*/H*": "{#Super_L(Shift_L(h))}",
"KPH*/STP*/*EU": "{#Super_L(Shift_L(i))}",
"KPH*/STP*/SKWR*": "{#Super_L(Shift_L(j))}",
"KPH*/STP*/K*": "{#Super_L(Shift_L(k))}",
"KPH*/STP*/HR*": "{#Super_L(Shift_L(l))}",
"KPH*/STP*/PH*": "{#Super_L(Shift_L(m))}",
"KPH*/STP*/TPH*": "{#Super_L(Shift_L(n))}",
"KPH*/STP*/O*": "{#Super_L(Shift_L(o))}",
"KPH*/STP*/P*": "{#Super_L(Shift_L(p))}",
"KPH*/STP*/KW*": "{#Super_L(Shift_L(q))}",
"KPH*/STP*/R*": "{#Super_L(Shift_L(r))}",
"KPH*/STP*/S*": "{#Super_L(Shift_L(s))}",
"KPH*/STP*/T*": "{#Super_L(Shift_L(t))}",
"KPH*/STP*/*U": "{#Super_L(Shift_L(u))}",
"KPH*/STP*/SR*": "{#Super_L(Shift_L(v))}",
"KPH*/STP*/W*": "{#Super_L(Shift_L(w))}",
"KPH*/STP*/KP*": "{#Super_L(Shift_L(x))}",
"KPH*/STP*/KWR*": "{#Super_L(Shift_L(y))}",
"KPH*/STP*/STKPW*": "{#Super_L(Shift_L(z))}",
"KPH*/STP*/0": "{#Super_L(Shift_L(0))}",
"KPH*/STP*/1": "{#Super_L(Shift_L(1))}",
"KPH*/STP*/2": "{#Super_L(Shift_L(2))}",
"KPH*/STP*/3": "{#Super_L(Shift_L(3))}",
"KPH*/STP*/4": "{#Super_L(Shift_L(4))}",
"KPH*/STP*/5": "{#Super_L(Shift_L(5))}",
"KPH*/STP*/6": "{#Super_L(Shift_L(6))}",
"KPH*/STP*/7": "{#Super_L(Shift_L(7))}",
"KPH*/STP*/8": "{#Super_L(Shift_L(8))}",
"KPH*/STP*/9": "{#Super_L(Shift_L(9))}",
"KPH*/STP*/KH-FG": "{#Super_L(Shift_L(grave))}",
"KPH*/STP*/KW-BG": "{#Super_L(Shift_L(comma))}",
"KPH*/STP*/PR*EPB": "{#Super_L(Shift_L(parenright))}",
"KPH*/STP*/PREPB": "{#Super_L(Shift_L(parenleft))}",
"KPH*/STP*/PW*FP": "{#Super_L(Shift_L(BackSpace))}",
"KPH*/STP*/PWR*BGT": "{#Super_L(Shift_L(bracketright))}",
"KPH*/STP*/PWR-BGT": "{#Super_L(Shift_L(bracketleft))}",
"KPH*/STP*/R-R": "{#Super_L(Shift_L(Return))}",
"KPH*/STP*/S-P": "{#Super_L(Shift_L(space))}",
"KPH*/STP*/SP*S": "{#Super_L(Shift_L())}",
"KPH*/STP*/SPWHRAERB": "{#Super_L(Shift_L(backslash))}",
"KPH*/STP*/STPH-G": "{#Super_L(Shift_L(Right))}",
"KPH*/STP*/STPH-B": "{#Super_L(Shift_L(Down))}",
"KPH*/STP*/STPH-P": "{#Super_L(Shift_L(Up))}",
"KPH*/STP*/STPH-R": "{#Super_L(Shift_L(Left))}",
"KPH*/STP*/TA*B": "{#Super_L(Shift_L(Tab))}",
"KPH*/STP*/TKHRAO*ET": "{#Super_L(Shift_L(Delete))}",
"KPH*/A*": "{#Super_L(a)}",
"KPH*/PW*": "{#Super_L(b)}",
"KPH*/KR*": "{#Super_L(c)}",
"KPH*/TK*": "{#Super_L(d)}",
"KPH*/*E": "{#Super_L(e)}",
"KPH*/TP*": "{#Super_L(f)}",
"KPH*/TKPW*": "{#Super_L(g)}",
"KPH*/H*": "{#Super_L(h)}",
"KPH*/*EU": "{#Super_L(i)}",
"KPH*/SKWR*": "{#Super_L(j)}",
"KPH*/K*": "{#Super_L(k)}",
"KPH*/HR*": "{#Super_L(l)}",
"KPH*/PH*": "{#Super_L(m)}",
"KPH*/TPH*": "{#Super_L(n)}",
"KPH*/O*": "{#Super_L(o)}",
"KPH*/P*": "{#Super_L(p)}",
"KPH*/KW*": "{#Super_L(q)}",
"KPH*/R*": "{#Super_L(r)}",
"KPH*/S*": "{#Super_L(s)}",
"KPH*/T*": "{#Super_L(t)}",
"KPH*/*U": "{#Super_L(u)}",
"KPH*/SR*": "{#Super_L(v)}",
"KPH*/W*": "{#Super_L(w)}",
"KPH*/KP*": "{#Super_L(x)}",
"KPH*/KWR*": "{#Super_L(y)}",
"KPH*/STKPW*": "{#Super_L(z)}",
"KPH*/0": "{#Super_L(0)}",
"KPH*/1": "{#Super_L(1)}",
"KPH*/2": "{#Super_L(2)}",
"KPH*/3": "{#Super_L(3)}",
"KPH*/4": "{#Super_L(4)}",
"KPH*/5": "{#Super_L(5)}",
"KPH*/6": "{#Super_L(6)}",
"KPH*/7": "{#Super_L(7)}",
"KPH*/8": "{#Super_L(8)}",
"KPH*/9": "{#Super_L(9)}",
"KPH*/KH-FG": "{#Super_L(grave)}",
"KPH*/KW-BG": "{#Super_L(comma)}",
"KPH*/PR*EPB": "{#Super_L(parenright)}",
"KPH*/PREPB": "{#Super_L(parenleft)}",
"KPH*/PW*FP": "{#Super_L(BackSpace)}",
"KPH*/PWR*BGT": "{#Super_L(bracketright)}",
"KPH*/PWR-BGT": "{#Super_L(bracketleft)}",
"KPH*/R-R": "{#Super_L(Return)}",
"KPH*/S-P": "{#Super_L(space)}",
"KPH*/SP*S": "{#Super_L()}",
"KPH*/SPWHRAERB": "{#Super_L(backslash)}",
"KPH*/STPH-G": "{#Super_L(Right)}",
"KPH*/STPH-B": "{#Super_L(Down)}",
"KPH*/STPH-P": "{#Super_L(Up)}",
"KPH*/STPH-R": "{#Super_L(Left)}",
"KPH*/TA*B": "{#Super_L(Tab)}",
"KPH*/TKHRAO*ET": "{#Super_L(Delete)}",
"STP*/KPH*/A*": "{#Shift_L(Super_L(a))}",
"STP*/KPH*/PW*": "{#Shift_L(Super_L(b))}",
"STP*/KPH*/KR*": "{#Shift_L(Super_L(c))}",
"STP*/KPH*/TK*": "{#Shift_L(Super_L(d))}",
"STP*/KPH*/*E": "{#Shift_L(Super_L(e))}",
"STP*/KPH*/TP*": "{#Shift_L(Super_L(f))}",
"STP*/KPH*/TKPW*": "{#Shift_L(Super_L(g))}",
"STP*/KPH*/H*": "{#Shift_L(Super_L(h))}",
"STP*/KPH*/*EU": "{#Shift_L(Super_L(i))}",
"STP*/KPH*/SKWR*": "{#Shift_L(Super_L(j))}",
"STP*/KPH*/K*": "{#Shift_L(Super_L(k))}",
"STP*/KPH*/HR*": "{#Shift_L(Super_L(l))}",
"STP*/KPH*/PH*": "{#Shift_L(Super_L(m))}",
"STP*/KPH*/TPH*": "{#Shift_L(Super_L(n))}",
"STP*/KPH*/O*": "{#Shift_L(Super_L(o))}",
"STP*/KPH*/P*": "{#Shift_L(Super_L(p))}",
"STP*/KPH*/KW*": "{#Shift_L(Super_L(q))}",
"STP*/KPH*/R*": "{#Shift_L(Super_L(r))}",
"STP*/KPH*/S*": "{#Shift_L(Super_L(s))}",
"STP*/KPH*/T*": "{#Shift_L(Super_L(t))}",
"STP*/KPH*/*U": "{#Shift_L(Super_L(u))}",
"STP*/KPH*/SR*": "{#Shift_L(Super_L(v))}",
"STP*/KPH*/W*": "{#Shift_L(Super_L(w))}",
"STP*/KPH*/KP*": "{#Shift_L(Super_L(x))}",
"STP*/KPH*/KWR*": "{#Shift_L(Super_L(y))}",
"STP*/KPH*/STKPW*": "{#Shift_L(Super_L(z))}",
"STP*/KPH*/0": "{#Shift_L(Super_L(0))}",
"STP*/KPH*/1": "{#Shift_L(Super_L(1))}",
"STP*/KPH*/2": "{#Shift_L(Super_L(2))}",
"STP*/KPH*/3": "{#Shift_L(Super_L(3))}",
"STP*/KPH*/4": "{#Shift_L(Super_L(4))}",
"STP*/KPH*/5": "{#Shift_L(Super_L(5))}",
"STP*/KPH*/6": "{#Shift_L(Super_L(6))}",
"STP*/KPH*/7": "{#Shift_L(Super_L(7))}",
"STP*/KPH*/8": "{#Shift_L(Super_L(8))}",
"STP*/KPH*/9": "{#Shift_L(Super_L(9))}",
"STP*/KPH*/KH-FG": "{#Shift_L(Super_L(grave))}",
"STP*/KPH*/KW-BG": "{#Shift_L(Super_L(comma))}",
"STP*/KPH*/PR*EPB": "{#Shift_L(Super_L(parenright))}",
"STP*/KPH*/PREPB": "{#Shift_L(Super_L(parenleft))}",
"STP*/KPH*/PW*FP": "{#Shift_L(Super_L(BackSpace))}",
"STP*/KPH*/PWR*BGT": "{#Shift_L(Super_L(bracketright))}",
"STP*/KPH*/PWR-BGT": "{#Shift_L(Super_L(bracketleft))}",
"STP*/KPH*/R-R": "{#Shift_L(Super_L(Return))}",
"STP*/KPH*/S-P": "{#Shift_L(Super_L(space))}",
"STP*/KPH*/SP*S": "{#Shift_L(Super_L())}",
"STP*/KPH*/SPWHRAERB": "{#Shift_L(Super_L(backslash))}",
"STP*/KPH*/STPH-G": "{#Shift_L(Super_L(Right))}",
"STP*/KPH*/STPH-B": "{#Shift_L(Super_L(Down))}",
"STP*/KPH*/STPH-P": "{#Shift_L(Super_L(Up))}",
"STP*/KPH*/STPH-R": "{#Shift_L(Super_L(Left))}",
"STP*/KPH*/TA*B": "{#Shift_L(Super_L(Tab))}",
"STP*/KPH*/TKHRAO*ET": "{#Shift_L(Super_L(Delete))}",
"KHR*/STP*/A*": "{#Control_L(Shift_L(a))}",
"KHR*/STP*/PW*": "{#Control_L(Shift_L(b))}",
"KHR*/STP*/KR*": "{#Control_L(Shift_L(c))}",
"KHR*/STP*/TK*": "{#Control_L(Shift_L(d))}",
"KHR*/STP*/*E": "{#Control_L(Shift_L(e))}",
"KHR*/STP*/TP*": "{#Control_L(Shift_L(f))}",
"KHR*/STP*/TKPW*": "{#Control_L(Shift_L(g))}",
"KHR*/STP*/H*": "{#Control_L(Shift_L(h))}",
"KHR*/STP*/*EU": "{#Control_L(Shift_L(i))}",
"KHR*/STP*/SKWR*": "{#Control_L(Shift_L(j))}",
"KHR*/STP*/K*": "{#Control_L(Shift_L(k))}",
"KHR*/STP*/HR*": "{#Control_L(Shift_L(l))}",
"KHR*/STP*/PH*": "{#Control_L(Shift_L(m))}",
"KHR*/STP*/TPH*": "{#Control_L(Shift_L(n))}",
"KHR*/STP*/O*": "{#Control_L(Shift_L(o))}",
"KHR*/STP*/P*": "{#Control_L(Shift_L(p))}",
"KHR*/STP*/KW*": "{#Control_L(Shift_L(q))}",
"KHR*/STP*/R*": "{#Control_L(Shift_L(r))}",
"KHR*/STP*/S*": "{#Control_L(Shift_L(s))}",
"KHR*/STP*/T*": "{#Control_L(Shift_L(t))}",
"KHR*/STP*/*U": "{#Control_L(Shift_L(u))}",
"KHR*/STP*/SR*": "{#Control_L(Shift_L(v))}",
"KHR*/STP*/W*": "{#Control_L(Shift_L(w))}",
"KHR*/STP*/KP*": "{#Control_L(Shift_L(x))}",
"KHR*/STP*/KWR*": "{#Control_L(Shift_L(y))}",
"KHR*/STP*/STKPW*": "{#Control_L(Shift_L(z))}",
"KHR*/STP*/0": "{#Control_L(Shift_L(0))}",
"KHR*/STP*/1": "{#Control_L(Shift_L(1))}",
"KHR*/STP*/2": "{#Control_L(Shift_L(2))}",
"KHR*/STP*/3": "{#Control_L(Shift_L(3))}",
"KHR*/STP*/4": "{#Control_L(Shift_L(4))}",
"KHR*/STP*/5": "{#Control_L(Shift_L(5))}",
"KHR*/STP*/6": "{#Control_L(Shift_L(6))}",
"KHR*/STP*/7": "{#Control_L(Shift_L(7))}",
"KHR*/STP*/8": "{#Control_L(Shift_L(8))}",
"KHR*/STP*/9": "{#Control_L(Shift_L(9))}",
"KHR*/STP*/KH-FG": "{#Control_L(Shift_L(grave))}",
"KHR*/STP*/KW-BG": "{#Control_L(Shift_L(comma))}",
"KHR*/STP*/PR*EPB": "{#Control_L(Shift_L(parenright))}",
"KHR*/STP*/PREPB": "{#Control_L(Shift_L(parenleft))}",
"KHR*/STP*/PW*FP": "{#Control_L(Shift_L(BackSpace))}",
"KHR*/STP*/PWR*BGT": "{#Control_L(Shift_L(bracketright))}",
"KHR*/STP*/PWR-BGT": "{#Control_L(Shift_L(bracketleft))}",
"KHR*/STP*/R-R": "{#Control_L(Shift_L(Return))}",
"KHR*/STP*/S-P": "{#Control_L(Shift_L(space))}",
"KHR*/STP*/SP*S": "{#Control_L(Shift_L())}",
"KHR*/STP*/SPWHRAERB": "{#Control_L(Shift_L(backslash))}",
"KHR*/STP*/STPH-G": "{#Control_L(Shift_L(Right))}",
"KHR*/STP*/STPH-B": "{#Control_L(Shift_L(Down))}",
"KHR*/STP*/STPH-P": "{#Control_L(Shift_L(Up))}",
"KHR*/STP*/STPH-R": "{#Control_L(Shift_L(Left))}",
"KHR*/STP*/TA*B": "{#Control_L(Shift_L(Tab))}",
"KHR*/STP*/TKHRAO*ET": "{#Control_L(Shift_L(Delete))}",
"KHR*/KPH*/STP*/A*": "{#Control_L(Super_L(Shift_L(a)))}",
"KHR*/KPH*/STP*/PW*": "{#Control_L(Super_L(Shift_L(b)))}",
"KHR*/KPH*/STP*/KR*": "{#Control_L(Super_L(Shift_L(c)))}",
"KHR*/KPH*/STP*/TK*": "{#Control_L(Super_L(Shift_L(d)))}",
"KHR*/KPH*/STP*/*E": "{#Control_L(Super_L(Shift_L(e)))}",
"KHR*/KPH*/STP*/TP*": "{#Control_L(Super_L(Shift_L(f)))}",
"KHR*/KPH*/STP*/TKPW*": "{#Control_L(Super_L(Shift_L(g)))}",
"KHR*/KPH*/STP*/H*": "{#Control_L(Super_L(Shift_L(h)))}",
"KHR*/KPH*/STP*/*EU": "{#Control_L(Super_L(Shift_L(i)))}",
"KHR*/KPH*/STP*/SKWR*": "{#Control_L(Super_L(Shift_L(j)))}",
"KHR*/KPH*/STP*/K*": "{#Control_L(Super_L(Shift_L(k)))}",
"KHR*/KPH*/STP*/HR*": "{#Control_L(Super_L(Shift_L(l)))}",
"KHR*/KPH*/STP*/PH*": "{#Control_L(Super_L(Shift_L(m)))}",
"KHR*/KPH*/STP*/TPH*": "{#Control_L(Super_L(Shift_L(n)))}",
"KHR*/KPH*/STP*/O*": "{#Control_L(Super_L(Shift_L(o)))}",
"KHR*/KPH*/STP*/P*": "{#Control_L(Super_L(Shift_L(p)))}",
"KHR*/KPH*/STP*/KW*": "{#Control_L(Super_L(Shift_L(q)))}",
"KHR*/KPH*/STP*/R*": "{#Control_L(Super_L(Shift_L(r)))}",
"KHR*/KPH*/STP*/S*": "{#Control_L(Super_L(Shift_L(s)))}",
"KHR*/KPH*/STP*/T*": "{#Control_L(Super_L(Shift_L(t)))}",
"KHR*/KPH*/STP*/*U": "{#Control_L(Super_L(Shift_L(u)))}",
"KHR*/KPH*/STP*/SR*": "{#Control_L(Super_L(Shift_L(v)))}",
"KHR*/KPH*/STP*/W*": "{#Control_L(Super_L(Shift_L(w)))}",
"KHR*/KPH*/STP*/KP*": "{#Control_L(Super_L(Shift_L(x)))}",
"KHR*/KPH*/STP*/KWR*": "{#Control_L(Super_L(Shift_L(y)))}",
"KHR*/KPH*/STP*/STKPW*": "{#Control_L(Super_L(Shift_L(z)))}",
"KHR*/KPH*/STP*/0": "{#Control_L(Super_L(Shift_L(0)))}",
"KHR*/KPH*/STP*/1": "{#Control_L(Super_L(Shift_L(1)))}",
"KHR*/KPH*/STP*/2": "{#Control_L(Super_L(Shift_L(2)))}",
"KHR*/KPH*/STP*/3": "{#Control_L(Super_L(Shift_L(3)))}",
"KHR*/KPH*/STP*/4": "{#Control_L(Super_L(Shift_L(4)))}",
"KHR*/KPH*/STP*/5": "{#Control_L(Super_L(Shift_L(5)))}",
"KHR*/KPH*/STP*/6": "{#Control_L(Super_L(Shift_L(6)))}",
"KHR*/KPH*/STP*/7": "{#Control_L(Super_L(Shift_L(7)))}",
"KHR*/KPH*/STP*/8": "{#Control_L(Super_L(Shift_L(8)))}",
"KHR*/KPH*/STP*/9": "{#Control_L(Super_L(Shift_L(9)))}",
"KHR*/KPH*/STP*/KH-FG": "{#Control_L(Super_L(Shift_L(grave)))}",
"KHR*/KPH*/STP*/KW-BG": "{#Control_L(Super_L(Shift_L(comma)))}",
"KHR*/KPH*/STP*/PR*EPB": "{#Control_L(Super_L(Shift_L(parenright)))}",
"KHR*/KPH*/STP*/PREPB": "{#Control_L(Super_L(Shift_L(parenleft)))}",
"KHR*/KPH*/STP*/PW*FP": "{#Control_L(Super_L(Shift_L(BackSpace)))}",
"KHR*/KPH*/STP*/PWR*BGT": "{#Control_L(Super_L(Shift_L(bracketright)))}",
"KHR*/KPH*/STP*/PWR-BGT": "{#Control_L(Super_L(Shift_L(bracketleft)))}",
"KHR*/KPH*/STP*/R-R": "{#Control_L(Super_L(Shift_L(Return)))}",
"KHR*/KPH*/STP*/S-P": "{#Control_L(Super_L(Shift_L(space)))}",
"KHR*/KPH*/STP*/SP*S": "{#Control_L(Super_L(Shift_L()))}",
"KHR*/KPH*/STP*/SPWHRAERB": "{#Control_L(Super_L(Shift_L(backslash)))}",
"KHR*/KPH*/STP*/STPH-G": "{#Control_L(Super_L(Shift_L(Right)))}",
"KHR*/KPH*/STP*/STPH-B": "{#Control_L(Super_L(Shift_L(Down)))}",
"KHR*/KPH*/STP*/STPH-P": "{#Control_L(Super_L(Shift_L(Up)))}",
"KHR*/KPH*/STP*/STPH-R": "{#Control_L(Super_L(Shift_L(Left)))}",
"KHR*/KPH*/STP*/TA*B": "{#Control_L(Super_L(Shift_L(Tab)))}",
"KHR*/KPH*/STP*/TKHRAO*ET": "{#Control_L(Super_L(Shift_L(Delete)))}",
"KHR*/KPH*/A*": "{#Control_L(Super_L(a))}",
"KHR*/KPH*/PW*": "{#Control_L(Super_L(b))}",
"KHR*/KPH*/KR*": "{#Control_L(Super_L(c))}",
"KHR*/KPH*/TK*": "{#Control_L(Super_L(d))}",
"KHR*/KPH*/*E": "{#Control_L(Super_L(e))}",
"KHR*/KPH*/TP*": "{#Control_L(Super_L(f))}",
"KHR*/KPH*/TKPW*": "{#Control_L(Super_L(g))}",
"KHR*/KPH*/H*": "{#Control_L(Super_L(h))}",
"KHR*/KPH*/*EU": "{#Control_L(Super_L(i))}",
"KHR*/KPH*/SKWR*": "{#Control_L(Super_L(j))}",
"KHR*/KPH*/K*": "{#Control_L(Super_L(k))}",
"KHR*/KPH*/HR*": "{#Control_L(Super_L(l))}",
"KHR*/KPH*/PH*": "{#Control_L(Super_L(m))}",
"KHR*/KPH*/TPH*": "{#Control_L(Super_L(n))}",
"KHR*/KPH*/O*": "{#Control_L(Super_L(o))}",
"KHR*/KPH*/P*": "{#Control_L(Super_L(p))}",
"KHR*/KPH*/KW*": "{#Control_L(Super_L(q))}",
"KHR*/KPH*/R*": "{#Control_L(Super_L(r))}",
"KHR*/KPH*/S*": "{#Control_L(Super_L(s))}",
"KHR*/KPH*/T*": "{#Control_L(Super_L(t))}",
"KHR*/KPH*/*U": "{#Control_L(Super_L(u))}",
"KHR*/KPH*/SR*": "{#Control_L(Super_L(v))}",
"KHR*/KPH*/W*": "{#Control_L(Super_L(w))}",
"KHR*/KPH*/KP*": "{#Control_L(Super_L(x))}",
"KHR*/KPH*/KWR*": "{#Control_L(Super_L(y))}",
"KHR*/KPH*/STKPW*": "{#Control_L(Super_L(z))}",
"KHR*/KPH*/0": "{#Control_L(Super_L(0))}",
"KHR*/KPH*/1": "{#Control_L(Super_L(1))}",
"KHR*/KPH*/2": "{#Control_L(Super_L(2))}",
"KHR*/KPH*/3": "{#Control_L(Super_L(3))}",
"KHR*/KPH*/4": "{#Control_L(Super_L(4))}",
"KHR*/KPH*/5": "{#Control_L(Super_L(5))}",
"KHR*/KPH*/6": "{#Control_L(Super_L(6))}",
"KHR*/KPH*/7": "{#Control_L(Super_L(7))}",
"KHR*/KPH*/8": "{#Control_L(Super_L(8))}",
"KHR*/KPH*/9": "{#Control_L(Super_L(9))}",
"KHR*/KPH*/KH-FG": "{#Control_L(Super_L(grave))}",
"KHR*/KPH*/KW-BG": "{#Control_L(Super_L(comma))}",
"KHR*/KPH*/PR*EPB": "{#Control_L(Super_L(parenright))}",
"KHR*/KPH*/PREPB": "{#Control_L(Super_L(parenleft))}",
"KHR*/KPH*/PW*FP": "{#Control_L(Super_L(BackSpace))}",
"KHR*/KPH*/PWR*BGT": "{#Control_L(Super_L(bracketright))}",
"KHR*/KPH*/PWR-BGT": "{#Control_L(Super_L(bracketleft))}",
"KHR*/KPH*/R-R": "{#Control_L(Super_L(Return))}",
"KHR*/KPH*/S-P": "{#Control_L(Super_L(space))}",
"KHR*/KPH*/SP*S": "{#Control_L(Super_L())}",
"KHR*/KPH*/SPWHRAERB": "{#Control_L(Super_L(backslash))}",
"KHR*/KPH*/STPH-G": "{#Control_L(Super_L(Right))}",
"KHR*/KPH*/STPH-B": "{#Control_L(Super_L(Down))}",
"KHR*/KPH*/STPH-P": "{#Control_L(Super_L(Up))}",
"KHR*/KPH*/STPH-R": "{#Control_L(Super_L(Left))}",
"KHR*/KPH*/TA*B": "{#Control_L(Super_L(Tab))}",
"KHR*/KPH*/TKHRAO*ET": "{#Control_L(Super_L(Delete))}",
"KHR*/STP*/KPH*/A*": "{#Control_L(Shift_L(Super_L(a)))}",
"KHR*/STP*/KPH*/PW*": "{#Control_L(Shift_L(Super_L(b)))}",
"KHR*/STP*/KPH*/KR*": "{#Control_L(Shift_L(Super_L(c)))}",
"KHR*/STP*/KPH*/TK*": "{#Control_L(Shift_L(Super_L(d)))}",
"KHR*/STP*/KPH*/*E": "{#Control_L(Shift_L(Super_L(e)))}",
"KHR*/STP*/KPH*/TP*": "{#Control_L(Shift_L(Super_L(f)))}",
"KHR*/STP*/KPH*/TKPW*": "{#Control_L(Shift_L(Super_L(g)))}",
"KHR*/STP*/KPH*/H*": "{#Control_L(Shift_L(Super_L(h)))}",
"KHR*/STP*/KPH*/*EU": "{#Control_L(Shift_L(Super_L(i)))}",
"KHR*/STP*/KPH*/SKWR*": "{#Control_L(Shift_L(Super_L(j)))}",
"KHR*/STP*/KPH*/K*": "{#Control_L(Shift_L(Super_L(k)))}",
"KHR*/STP*/KPH*/HR*": "{#Control_L(Shift_L(Super_L(l)))}",
"KHR*/STP*/KPH*/PH*": "{#Control_L(Shift_L(Super_L(m)))}",
"KHR*/STP*/KPH*/TPH*": "{#Control_L(Shift_L(Super_L(n)))}",
"KHR*/STP*/KPH*/O*": "{#Control_L(Shift_L(Super_L(o)))}",
"KHR*/STP*/KPH*/P*": "{#Control_L(Shift_L(Super_L(p)))}",
"KHR*/STP*/KPH*/KW*": "{#Control_L(Shift_L(Super_L(q)))}",
"KHR*/STP*/KPH*/R*": "{#Control_L(Shift_L(Super_L(r)))}",
"KHR*/STP*/KPH*/S*": "{#Control_L(Shift_L(Super_L(s)))}",
"KHR*/STP*/KPH*/T*": "{#Control_L(Shift_L(Super_L(t)))}",
"KHR*/STP*/KPH*/*U": "{#Control_L(Shift_L(Super_L(u)))}",
"KHR*/STP*/KPH*/SR*": "{#Control_L(Shift_L(Super_L(v)))}",
"KHR*/STP*/KPH*/W*": "{#Control_L(Shift_L(Super_L(w)))}",
"KHR*/STP*/KPH*/KP*": "{#Control_L(Shift_L(Super_L(x)))}",
"KHR*/STP*/KPH*/KWR*": "{#Control_L(Shift_L(Super_L(y)))}",
"KHR*/STP*/KPH*/STKPW*": "{#Control_L(Shift_L(Super_L(z)))}",
"KHR*/STP*/KPH*/0": "{#Control_L(Shift_L(Super_L(0)))}",
"KHR*/STP*/KPH*/1": "{#Control_L(Shift_L(Super_L(1)))}",
"KHR*/STP*/KPH*/2": "{#Control_L(Shift_L(Super_L(2)))}",
"KHR*/STP*/KPH*/3": "{#Control_L(Shift_L(Super_L(3)))}",
"KHR*/STP*/KPH*/4": "{#Control_L(Shift_L(Super_L(4)))}",
"KHR*/STP*/KPH*/5": "{#Control_L(Shift_L(Super_L(5)))}",
"KHR*/STP*/KPH*/6": "{#Control_L(Shift_L(Super_L(6)))}",
"KHR*/STP*/KPH*/7": "{#Control_L(Shift_L(Super_L(7)))}",
"KHR*/STP*/KPH*/8": "{#Control_L(Shift_L(Super_L(8)))}",
"KHR*/STP*/KPH*/9": "{#Control_L(Shift_L(Super_L(9)))}",
"KHR*/STP*/KPH*/KH-FG": "{#Control_L(Shift_L(Super_L(grave)))}",
"KHR*/STP*/KPH*/KW-BG": "{#Control_L(Shift_L(Super_L(comma)))}",
"KHR*/STP*/KPH*/PR*EPB": "{#Control_L(Shift_L(Super_L(parenright)))}",
"KHR*/STP*/KPH*/PREPB": "{#Control_L(Shift_L(Super_L(parenleft)))}",
"KHR*/STP*/KPH*/PW*FP": "{#Control_L(Shift_L(Super_L(BackSpace)))}",
"KHR*/STP*/KPH*/PWR*BGT": "{#Control_L(Shift_L(Super_L(bracketright)))}",
"KHR*/STP*/KPH*/PWR-BGT": "{#Control_L(Shift_L(Super_L(bracketleft)))}",
"KHR*/STP*/KPH*/R-R": "{#Control_L(Shift_L(Super_L(Return)))}",
"KHR*/STP*/KPH*/S-P": "{#Control_L(Shift_L(Super_L(space)))}",
"KHR*/STP*/KPH*/SP*S": "{#Control_L(Shift_L(Super_L()))}",
"KHR*/STP*/KPH*/SPWHRAERB": "{#Control_L(Shift_L(Super_L(backslash)))}",
"KHR*/STP*/KPH*/STPH-G": "{#Control_L(Shift_L(Super_L(Right)))}",
"KHR*/STP*/KPH*/STPH-B": "{#Control_L(Shift_L(Super_L(Down)))}",
"KHR*/STP*/KPH*/STPH-P": "{#Control_L(Shift_L(Super_L(Up)))}",
"KHR*/STP*/KPH*/STPH-R": "{#Control_L(Shift_L(Super_L(Left)))}",
"KHR*/STP*/KPH*/TA*B": "{#Control_L(Shift_L(Super_L(Tab)))}",
"KHR*/STP*/KPH*/TKHRAO*ET": "{#Control_L(Shift_L(Super_L(Delete)))}",
"STP*/A*": "{#Shift_L(a)}",
"STP*/PW*": "{#Shift_L(b)}",
"STP*/KR*": "{#Shift_L(c)}",
"STP*/TK*": "{#Shift_L(d)}",
"STP*/*E": "{#Shift_L(e)}",
"STP*/TP*": "{#Shift_L(f)}",
"STP*/TKPW*": "{#Shift_L(g)}",
"STP*/H*": "{#Shift_L(h)}",
"STP*/*EU": "{#Shift_L(i)}",
"STP*/SKWR*": "{#Shift_L(j)}",
"STP*/K*": "{#Shift_L(k)}",
"STP*/HR*": "{#Shift_L(l)}",
"STP*/PH*": "{#Shift_L(m)}",
"STP*/TPH*": "{#Shift_L(n)}",
"STP*/O*": "{#Shift_L(o)}",
"STP*/P*": "{#Shift_L(p)}",
"STP*/KW*": "{#Shift_L(q)}",
"STP*/R*": "{#Shift_L(r)}",
"STP*/S*": "{#Shift_L(s)}",
"STP*/T*": "{#Shift_L(t)}",
"STP*/*U": "{#Shift_L(u)}",
"STP*/SR*": "{#Shift_L(v)}",
"STP*/W*": "{#Shift_L(w)}",
"STP*/KP*": "{#Shift_L(x)}",
"STP*/KWR*": "{#Shift_L(y)}",
"STP*/STKPW*": "{#Shift_L(z)}",
"STP*/0": "{#Shift_L(0)}",
"STP*/1": "{#Shift_L(1)}",
"STP*/2": "{#Shift_L(2)}",
"STP*/3": "{#Shift_L(3)}",
"STP*/4": "{#Shift_L(4)}",
"STP*/5": "{#Shift_L(5)}",
"STP*/6": "{#Shift_L(6)}",
"STP*/7": "{#Shift_L(7)}",
"STP*/8": "{#Shift_L(8)}",
"STP*/9": "{#Shift_L(9)}",
"STP*/KH-FG": "{#Shift_L(grave)}",
"STP*/KW-BG": "{#Shift_L(comma)}",
"STP*/PR*EPB": "{#Shift_L(parenright)}",
"STP*/PREPB": "{#Shift_L(parenleft)}",
"STP*/PW*FP": "{#Shift_L(BackSpace)}",
"STP*/PWR*BGT": "{#Shift_L(bracketright)}",
"STP*/PWR-BGT": "{#Shift_L(bracketleft)}",
"STP*/R-R": "{#Shift_L(Return)}",
"STP*/S-P": "{#Shift_L(space)}",
"STP*/SP*S": "{#Shift_L()}",
"STP*/SPWHRAERB": "{#Shift_L(backslash)}",
"STP*/STPH-G": "{#Shift_L(Right)}",
"STP*/STPH-B": "{#Shift_L(Down)}",
"STP*/STPH-P": "{#Shift_L(Up)}",
"STP*/STPH-R": "{#Shift_L(Left)}",
"STP*/TA*B": "{#Shift_L(Tab)}",
"STP*/TKHRAO*ET": "{#Shift_L(Delete)}",
"KHR*/STP*/A*": "{#Control_L(Shift_L(a))}",
"KHR*/STP*/PW*": "{#Control_L(Shift_L(b))}",
"KHR*/STP*/KR*": "{#Control_L(Shift_L(c))}",
"KHR*/STP*/TK*": "{#Control_L(Shift_L(d))}",
"KHR*/STP*/*E": "{#Control_L(Shift_L(e))}",
"KHR*/STP*/TP*": "{#Control_L(Shift_L(f))}",
"KHR*/STP*/TKPW*": "{#Control_L(Shift_L(g))}",
"KHR*/STP*/H*": "{#Control_L(Shift_L(h))}",
"KHR*/STP*/*EU": "{#Control_L(Shift_L(i))}",
"KHR*/STP*/SKWR*": "{#Control_L(Shift_L(j))}",
"KHR*/STP*/K*": "{#Control_L(Shift_L(k))}",
"KHR*/STP*/HR*": "{#Control_L(Shift_L(l))}",
"KHR*/STP*/PH*": "{#Control_L(Shift_L(m))}",
"KHR*/STP*/TPH*": "{#Control_L(Shift_L(n))}",
"KHR*/STP*/O*": "{#Control_L(Shift_L(o))}",
"KHR*/STP*/P*": "{#Control_L(Shift_L(p))}",
"KHR*/STP*/KW*": "{#Control_L(Shift_L(q))}",
"KHR*/STP*/R*": "{#Control_L(Shift_L(r))}",
"KHR*/STP*/S*": "{#Control_L(Shift_L(s))}",
"KHR*/STP*/T*": "{#Control_L(Shift_L(t))}",
"KHR*/STP*/*U": "{#Control_L(Shift_L(u))}",
"KHR*/STP*/SR*": "{#Control_L(Shift_L(v))}",
"KHR*/STP*/W*": "{#Control_L(Shift_L(w))}",
"KHR*/STP*/KP*": "{#Control_L(Shift_L(x))}",
"KHR*/STP*/KWR*": "{#Control_L(Shift_L(y))}",
"KHR*/STP*/STKPW*": "{#Control_L(Shift_L(z))}",
"KHR*/STP*/0": "{#Control_L(Shift_L(0))}",
"KHR*/STP*/1": "{#Control_L(Shift_L(1))}",
"KHR*/STP*/2": "{#Control_L(Shift_L(2))}",
"KHR*/STP*/3": "{#Control_L(Shift_L(3))}",
"KHR*/STP*/4": "{#Control_L(Shift_L(4))}",
"KHR*/STP*/5": "{#Control_L(Shift_L(5))}",
"KHR*/STP*/6": "{#Control_L(Shift_L(6))}",
"KHR*/STP*/7": "{#Control_L(Shift_L(7))}",
"KHR*/STP*/8": "{#Control_L(Shift_L(8))}",
"KHR*/STP*/9": "{#Control_L(Shift_L(9))}",
"KHR*/STP*/KH-FG": "{#Control_L(Shift_L(grave))}",
"KHR*/STP*/KW-BG": "{#Control_L(Shift_L(comma))}",
"KHR*/STP*/PR*EPB": "{#Control_L(Shift_L(parenright))}",
"KHR*/STP*/PREPB": "{#Control_L(Shift_L(parenleft))}",
"KHR*/STP*/PW*FP": "{#Control_L(Shift_L(BackSpace))}",
"KHR*/STP*/PWR*BGT": "{#Control_L(Shift_L(bracketright))}",
"KHR*/STP*/PWR-BGT": "{#Control_L(Shift_L(bracketleft))}",
"KHR*/STP*/R-R": "{#Control_L(Shift_L(Return))}",
"KHR*/STP*/S-P": "{#Control_L(Shift_L(space))}",
"KHR*/STP*/SP*S": "{#Control_L(Shift_L())}",
"KHR*/STP*/SPWHRAERB": "{#Control_L(Shift_L(backslash))}",
"KHR*/STP*/STPH-G": "{#Control_L(Shift_L(Right))}",
"KHR*/STP*/STPH-B": "{#Control_L(Shift_L(Down))}",
"KHR*/STP*/STPH-P": "{#Control_L(Shift_L(Up))}",
"KHR*/STP*/STPH-R": "{#Control_L(Shift_L(Left))}",
"KHR*/STP*/TA*B": "{#Control_L(Shift_L(Tab))}",
"KHR*/STP*/TKHRAO*ET": "{#Control_L(Shift_L(Delete))}",
"KHR*/A*": "{#Control_L(a)}",
"KHR*/PW*": "{#Control_L(b)}",
"KHR*/KR*": "{#Control_L(c)}",
"KHR*/TK*": "{#Control_L(d)}",
"KHR*/*E": "{#Control_L(e)}",
"KHR*/TP*": "{#Control_L(f)}",
"KHR*/TKPW*": "{#Control_L(g)}",
"KHR*/H*": "{#Control_L(h)}",
"KHR*/*EU": "{#Control_L(i)}",
"KHR*/SKWR*": "{#Control_L(j)}",
"KHR*/K*": "{#Control_L(k)}",
"KHR*/HR*": "{#Control_L(l)}",
"KHR*/PH*": "{#Control_L(m)}",
"KHR*/TPH*": "{#Control_L(n)}",
"KHR*/O*": "{#Control_L(o)}",
"KHR*/P*": "{#Control_L(p)}",
"KHR*/KW*": "{#Control_L(q)}",
"KHR*/R*": "{#Control_L(r)}",
"KHR*/S*": "{#Control_L(s)}",
"KHR*/T*": "{#Control_L(t)}",
"KHR*/*U": "{#Control_L(u)}",
"KHR*/SR*": "{#Control_L(v)}",
"KHR*/W*": "{#Control_L(w)}",
"KHR*/KP*": "{#Control_L(x)}",
"KHR*/KWR*": "{#Control_L(y)}",
"KHR*/STKPW*": "{#Control_L(z)}",
"KHR*/0": "{#Control_L(0)}",
"KHR*/1": "{#Control_L(1)}",
"KHR*/2": "{#Control_L(2)}",
"KHR*/3": "{#Control_L(3)}",
"KHR*/4": "{#Control_L(4)}",
"KHR*/5": "{#Control_L(5)}",
"KHR*/6": "{#Control_L(6)}",
"KHR*/7": "{#Control_L(7)}",
"KHR*/8": "{#Control_L(8)}",
"KHR*/9": "{#Control_L(9)}",
"KHR*/KH-FG": "{#Control_L(grave)}",
"KHR*/KW-BG": "{#Control_L(comma)}",
"KHR*/PR*EPB": "{#Control_L(parenright)}",
"KHR*/PREPB": "{#Control_L(parenleft)}",
"KHR*/PW*FP": "{#Control_L(BackSpace)}",
"KHR*/PWR*BGT": "{#Control_L(bracketright)}",
"KHR*/PWR-BGT": "{#Control_L(bracketleft)}",
"KHR*/R-R": "{#Control_L(Return)}",
"KHR*/S-P": "{#Control_L(space)}",
"KHR*/SP*S": "{#Control_L()}",
"KHR*/SPWHRAERB": "{#Control_L(backslash)}",
"KHR*/STPH-G": "{#Control_L(Right)}",
"KHR*/STPH-B": "{#Control_L(Down)}",
"KHR*/STPH-P": "{#Control_L(Up)}",
"KHR*/STPH-R": "{#Control_L(Left)}",
"KHR*/TA*B": "{#Control_L(Tab)}",
"KHR*/TKHRAO*ET": "{#Control_L(Delete)}",
"STP*/KHR*/A*": "{#Shift_L(Control_L(a))}",
"STP*/KHR*/PW*": "{#Shift_L(Control_L(b))}",
"STP*/KHR*/KR*": "{#Shift_L(Control_L(c))}",
"STP*/KHR*/TK*": "{#Shift_L(Control_L(d))}",
"STP*/KHR*/*E": "{#Shift_L(Control_L(e))}",
"STP*/KHR*/TP*": "{#Shift_L(Control_L(f))}",
"STP*/KHR*/TKPW*": "{#Shift_L(Control_L(g))}",
"STP*/KHR*/H*": "{#Shift_L(Control_L(h))}",
"STP*/KHR*/*EU": "{#Shift_L(Control_L(i))}",
"STP*/KHR*/SKWR*": "{#Shift_L(Control_L(j))}",
"STP*/KHR*/K*": "{#Shift_L(Control_L(k))}",
"STP*/KHR*/HR*": "{#Shift_L(Control_L(l))}",
"STP*/KHR*/PH*": "{#Shift_L(Control_L(m))}",
"STP*/KHR*/TPH*": "{#Shift_L(Control_L(n))}",
"STP*/KHR*/O*": "{#Shift_L(Control_L(o))}",
"STP*/KHR*/P*": "{#Shift_L(Control_L(p))}",
"STP*/KHR*/KW*": "{#Shift_L(Control_L(q))}",
"STP*/KHR*/R*": "{#Shift_L(Control_L(r))}",
"STP*/KHR*/S*": "{#Shift_L(Control_L(s))}",
"STP*/KHR*/T*": "{#Shift_L(Control_L(t))}",
"STP*/KHR*/*U": "{#Shift_L(Control_L(u))}",
"STP*/KHR*/SR*": "{#Shift_L(Control_L(v))}",
"STP*/KHR*/W*": "{#Shift_L(Control_L(w))}",
"STP*/KHR*/KP*": "{#Shift_L(Control_L(x))}",
"STP*/KHR*/KWR*": "{#Shift_L(Control_L(y))}",
"STP*/KHR*/STKPW*": "{#Shift_L(Control_L(z))}",
"STP*/KHR*/0": "{#Shift_L(Control_L(0))}",
"STP*/KHR*/1": "{#Shift_L(Control_L(1))}",
"STP*/KHR*/2": "{#Shift_L(Control_L(2))}",
"STP*/KHR*/3": "{#Shift_L(Control_L(3))}",
"STP*/KHR*/4": "{#Shift_L(Control_L(4))}",
"STP*/KHR*/5": "{#Shift_L(Control_L(5))}",
"STP*/KHR*/6": "{#Shift_L(Control_L(6))}",
"STP*/KHR*/7": "{#Shift_L(Control_L(7))}",
"STP*/KHR*/8": "{#Shift_L(Control_L(8))}",
"STP*/KHR*/9": "{#Shift_L(Control_L(9))}",
"STP*/KHR*/KH-FG": "{#Shift_L(Control_L(grave))}",
"STP*/KHR*/KW-BG": "{#Shift_L(Control_L(comma))}",
"STP*/KHR*/PR*EPB": "{#Shift_L(Control_L(parenright))}",
"STP*/KHR*/PREPB": "{#Shift_L(Control_L(parenleft))}",
"STP*/KHR*/PW*FP": "{#Shift_L(Control_L(BackSpace))}",
"STP*/KHR*/PWR*BGT": "{#Shift_L(Control_L(bracketright))}",
"STP*/KHR*/PWR-BGT": "{#Shift_L(Control_L(bracketleft))}",
"STP*/KHR*/R-R": "{#Shift_L(Control_L(Return))}",
"STP*/KHR*/S-P": "{#Shift_L(Control_L(space))}",
"STP*/KHR*/SP*S": "{#Shift_L(Control_L())}",
"STP*/KHR*/SPWHRAERB": "{#Shift_L(Control_L(backslash))}",
"STP*/KHR*/STPH-G": "{#Shift_L(Control_L(Right))}",
"STP*/KHR*/STPH-B": "{#Shift_L(Control_L(Down))}",
"STP*/KHR*/STPH-P": "{#Shift_L(Control_L(Up))}",
"STP*/KHR*/STPH-R": "{#Shift_L(Control_L(Left))}",
"STP*/KHR*/TA*B": "{#Shift_L(Control_L(Tab))}",
"STP*/KHR*/TKHRAO*ET": "{#Shift_L(Control_L(Delete))}",
"KPH*/STP*/A*": "{#Super_L(Shift_L(a))}",
"KPH*/STP*/PW*": "{#Super_L(Shift_L(b))}",
"KPH*/STP*/KR*": "{#Super_L(Shift_L(c))}",
"KPH*/STP*/TK*": "{#Super_L(Shift_L(d))}",
"KPH*/STP*/*E": "{#Super_L(Shift_L(e))}",
"KPH*/STP*/TP*": "{#Super_L(Shift_L(f))}",
"KPH*/STP*/TKPW*": "{#Super_L(Shift_L(g))}",
"KPH*/STP*/H*": "{#Super_L(Shift_L(h))}",
"KPH*/STP*/*EU": "{#Super_L(Shift_L(i))}",
"KPH*/STP*/SKWR*": "{#Super_L(Shift_L(j))}",
"KPH*/STP*/K*": "{#Super_L(Shift_L(k))}",
"KPH*/STP*/HR*": "{#Super_L(Shift_L(l))}",
"KPH*/STP*/PH*": "{#Super_L(Shift_L(m))}",
"KPH*/STP*/TPH*": "{#Super_L(Shift_L(n))}",
"KPH*/STP*/O*": "{#Super_L(Shift_L(o))}",
"KPH*/STP*/P*": "{#Super_L(Shift_L(p))}",
"KPH*/STP*/KW*": "{#Super_L(Shift_L(q))}",
"KPH*/STP*/R*": "{#Super_L(Shift_L(r))}",
"KPH*/STP*/S*": "{#Super_L(Shift_L(s))}",
"KPH*/STP*/T*": "{#Super_L(Shift_L(t))}",
"KPH*/STP*/*U": "{#Super_L(Shift_L(u))}",
"KPH*/STP*/SR*": "{#Super_L(Shift_L(v))}",
"KPH*/STP*/W*": "{#Super_L(Shift_L(w))}",
"KPH*/STP*/KP*": "{#Super_L(Shift_L(x))}",
"KPH*/STP*/KWR*": "{#Super_L(Shift_L(y))}",
"KPH*/STP*/STKPW*": "{#Super_L(Shift_L(z))}",
"KPH*/STP*/0": "{#Super_L(Shift_L(0))}",
"KPH*/STP*/1": "{#Super_L(Shift_L(1))}",
"KPH*/STP*/2": "{#Super_L(Shift_L(2))}",
"KPH*/STP*/3": "{#Super_L(Shift_L(3))}",
"KPH*/STP*/4": "{#Super_L(Shift_L(4))}",
"KPH*/STP*/5": "{#Super_L(Shift_L(5))}",
"KPH*/STP*/6": "{#Super_L(Shift_L(6))}",
"KPH*/STP*/7": "{#Super_L(Shift_L(7))}",
"KPH*/STP*/8": "{#Super_L(Shift_L(8))}",
"KPH*/STP*/9": "{#Super_L(Shift_L(9))}",
"KPH*/STP*/KH-FG": "{#Super_L(Shift_L(grave))}",
"KPH*/STP*/KW-BG": "{#Super_L(Shift_L(comma))}",
"KPH*/STP*/PR*EPB": "{#Super_L(Shift_L(parenright))}",
"KPH*/STP*/PREPB": "{#Super_L(Shift_L(parenleft))}",
"KPH*/STP*/PW*FP": "{#Super_L(Shift_L(BackSpace))}",
"KPH*/STP*/PWR*BGT": "{#Super_L(Shift_L(bracketright))}",
"KPH*/STP*/PWR-BGT": "{#Super_L(Shift_L(bracketleft))}",
"KPH*/STP*/R-R": "{#Super_L(Shift_L(Return))}",
"KPH*/STP*/S-P": "{#Super_L(Shift_L(space))}",
"KPH*/STP*/SP*S": "{#Super_L(Shift_L())}",
"KPH*/STP*/SPWHRAERB": "{#Super_L(Shift_L(backslash))}",
"KPH*/STP*/STPH-G": "{#Super_L(Shift_L(Right))}",
"KPH*/STP*/STPH-B": "{#Super_L(Shift_L(Down))}",
"KPH*/STP*/STPH-P": "{#Super_L(Shift_L(Up))}",
"KPH*/STP*/STPH-R": "{#Super_L(Shift_L(Left))}",
"KPH*/STP*/TA*B": "{#Super_L(Shift_L(Tab))}",
"KPH*/STP*/TKHRAO*ET": "{#Super_L(Shift_L(Delete))}",
"KPH*/KHR*/STP*/A*": "{#Super_L(Control_L(Shift_L(a)))}",
"KPH*/KHR*/STP*/PW*": "{#Super_L(Control_L(Shift_L(b)))}",
"KPH*/KHR*/STP*/KR*": "{#Super_L(Control_L(Shift_L(c)))}",
"KPH*/KHR*/STP*/TK*": "{#Super_L(Control_L(Shift_L(d)))}",
"KPH*/KHR*/STP*/*E": "{#Super_L(Control_L(Shift_L(e)))}",
"KPH*/KHR*/STP*/TP*": "{#Super_L(Control_L(Shift_L(f)))}",
"KPH*/KHR*/STP*/TKPW*": "{#Super_L(Control_L(Shift_L(g)))}",
"KPH*/KHR*/STP*/H*": "{#Super_L(Control_L(Shift_L(h)))}",
"KPH*/KHR*/STP*/*EU": "{#Super_L(Control_L(Shift_L(i)))}",
"KPH*/KHR*/STP*/SKWR*": "{#Super_L(Control_L(Shift_L(j)))}",
"KPH*/KHR*/STP*/K*": "{#Super_L(Control_L(Shift_L(k)))}",
"KPH*/KHR*/STP*/HR*": "{#Super_L(Control_L(Shift_L(l)))}",
"KPH*/KHR*/STP*/PH*": "{#Super_L(Control_L(Shift_L(m)))}",
"KPH*/KHR*/STP*/TPH*": "{#Super_L(Control_L(Shift_L(n)))}",
"KPH*/KHR*/STP*/O*": "{#Super_L(Control_L(Shift_L(o)))}",
"KPH*/KHR*/STP*/P*": "{#Super_L(Control_L(Shift_L(p)))}",
"KPH*/KHR*/STP*/KW*": "{#Super_L(Control_L(Shift_L(q)))}",
"KPH*/KHR*/STP*/R*": "{#Super_L(Control_L(Shift_L(r)))}",
"KPH*/KHR*/STP*/S*": "{#Super_L(Control_L(Shift_L(s)))}",
"KPH*/KHR*/STP*/T*": "{#Super_L(Control_L(Shift_L(t)))}",
"KPH*/KHR*/STP*/*U": "{#Super_L(Control_L(Shift_L(u)))}",
"KPH*/KHR*/STP*/SR*": "{#Super_L(Control_L(Shift_L(v)))}",
"KPH*/KHR*/STP*/W*": "{#Super_L(Control_L(Shift_L(w)))}",
"KPH*/KHR*/STP*/KP*": "{#Super_L(Control_L(Shift_L(x)))}",
"KPH*/KHR*/STP*/KWR*": "{#Super_L(Control_L(Shift_L(y)))}",
"KPH*/KHR*/STP*/STKPW*": "{#Super_L(Control_L(Shift_L(z)))}",
"KPH*/KHR*/STP*/0": "{#Super_L(Control_L(Shift_L(0)))}",
"KPH*/KHR*/STP*/1": "{#Super_L(Control_L(Shift_L(1)))}",
"KPH*/KHR*/STP*/2": "{#Super_L(Control_L(Shift_L(2)))}",
"KPH*/KHR*/STP*/3": "{#Super_L(Control_L(Shift_L(3)))}",
"KPH*/KHR*/STP*/4": "{#Super_L(Control_L(Shift_L(4)))}",
"KPH*/KHR*/STP*/5": "{#Super_L(Control_L(Shift_L(5)))}",
"KPH*/KHR*/STP*/6": "{#Super_L(Control_L(Shift_L(6)))}",
"KPH*/KHR*/STP*/7": "{#Super_L(Control_L(Shift_L(7)))}",
"KPH*/KHR*/STP*/8": "{#Super_L(Control_L(Shift_L(8)))}",
"KPH*/KHR*/STP*/9": "{#Super_L(Control_L(Shift_L(9)))}",
"KPH*/KHR*/STP*/KH-FG": "{#Super_L(Control_L(Shift_L(grave)))}",
"KPH*/KHR*/STP*/KW-BG": "{#Super_L(Control_L(Shift_L(comma)))}",
"KPH*/KHR*/STP*/PR*EPB": "{#Super_L(Control_L(Shift_L(parenright)))}",
"KPH*/KHR*/STP*/PREPB": "{#Super_L(Control_L(Shift_L(parenleft)))}",
"KPH*/KHR*/STP*/PW*FP": "{#Super_L(Control_L(Shift_L(BackSpace)))}",
"KPH*/KHR*/STP*/PWR*BGT": "{#Super_L(Control_L(Shift_L(bracketright)))}",
"KPH*/KHR*/STP*/PWR-BGT": "{#Super_L(Control_L(Shift_L(bracketleft)))}",
"KPH*/KHR*/STP*/R-R": "{#Super_L(Control_L(Shift_L(Return)))}",
"KPH*/KHR*/STP*/S-P": "{#Super_L(Control_L(Shift_L(space)))}",
"KPH*/KHR*/STP*/SP*S": "{#Super_L(Control_L(Shift_L()))}",
"KPH*/KHR*/STP*/SPWHRAERB": "{#Super_L(Control_L(Shift_L(backslash)))}",
"KPH*/KHR*/STP*/STPH-G": "{#Super_L(Control_L(Shift_L(Right)))}",
"KPH*/KHR*/STP*/STPH-B": "{#Super_L(Control_L(Shift_L(Down)))}",
"KPH*/KHR*/STP*/STPH-P": "{#Super_L(Control_L(Shift_L(Up)))}",
"KPH*/KHR*/STP*/STPH-R": "{#Super_L(Control_L(Shift_L(Left)))}",
"KPH*/KHR*/STP*/TA*B": "{#Super_L(Control_L(Shift_L(Tab)))}",
"KPH*/KHR*/STP*/TKHRAO*ET": "{#Super_L(Control_L(Shift_L(Delete)))}",
"KPH*/KHR*/A*": "{#Super_L(Control_L(a))}",
"KPH*/KHR*/PW*": "{#Super_L(Control_L(b))}",
"KPH*/KHR*/KR*": "{#Super_L(Control_L(c))}",
"KPH*/KHR*/TK*": "{#Super_L(Control_L(d))}",
"KPH*/KHR*/*E": "{#Super_L(Control_L(e))}",
"KPH*/KHR*/TP*": "{#Super_L(Control_L(f))}",
"KPH*/KHR*/TKPW*": "{#Super_L(Control_L(g))}",
"KPH*/KHR*/H*": "{#Super_L(Control_L(h))}",
"KPH*/KHR*/*EU": "{#Super_L(Control_L(i))}",
"KPH*/KHR*/SKWR*": "{#Super_L(Control_L(j))}",
"KPH*/KHR*/K*": "{#Super_L(Control_L(k))}",
"KPH*/KHR*/HR*": "{#Super_L(Control_L(l))}",
"KPH*/KHR*/PH*": "{#Super_L(Control_L(m))}",
"KPH*/KHR*/TPH*": "{#Super_L(Control_L(n))}",
"KPH*/KHR*/O*": "{#Super_L(Control_L(o))}",
"KPH*/KHR*/P*": "{#Super_L(Control_L(p))}",
"KPH*/KHR*/KW*": "{#Super_L(Control_L(q))}",
"KPH*/KHR*/R*": "{#Super_L(Control_L(r))}",
"KPH*/KHR*/S*": "{#Super_L(Control_L(s))}",
"KPH*/KHR*/T*": "{#Super_L(Control_L(t))}",
"KPH*/KHR*/*U": "{#Super_L(Control_L(u))}",
"KPH*/KHR*/SR*": "{#Super_L(Control_L(v))}",
"KPH*/KHR*/W*": "{#Super_L(Control_L(w))}",
"KPH*/KHR*/KP*": "{#Super_L(Control_L(x))}",
"KPH*/KHR*/KWR*": "{#Super_L(Control_L(y))}",
"KPH*/KHR*/STKPW*": "{#Super_L(Control_L(z))}",
"KPH*/KHR*/0": "{#Super_L(Control_L(0))}",
"KPH*/KHR*/1": "{#Super_L(Control_L(1))}",
"KPH*/KHR*/2": "{#Super_L(Control_L(2))}",
"KPH*/KHR*/3": "{#Super_L(Control_L(3))}",
"KPH*/KHR*/4": "{#Super_L(Control_L(4))}",
"KPH*/KHR*/5": "{#Super_L(Control_L(5))}",
"KPH*/KHR*/6": "{#Super_L(Control_L(6))}",
"KPH*/KHR*/7": "{#Super_L(Control_L(7))}",
"KPH*/KHR*/8": "{#Super_L(Control_L(8))}",
"KPH*/KHR*/9": "{#Super_L(Control_L(9))}",
"KPH*/KHR*/KH-FG": "{#Super_L(Control_L(grave))}",
"KPH*/KHR*/KW-BG": "{#Super_L(Control_L(comma))}",
"KPH*/KHR*/PR*EPB": "{#Super_L(Control_L(parenright))}",
"KPH*/KHR*/PREPB": "{#Super_L(Control_L(parenleft))}",
"KPH*/KHR*/PW*FP": "{#Super_L(Control_L(BackSpace))}",
"KPH*/KHR*/PWR*BGT": "{#Super_L(Control_L(bracketright))}",
"KPH*/KHR*/PWR-BGT": "{#Super_L(Control_L(bracketleft))}",
"KPH*/KHR*/R-R": "{#Super_L(Control_L(Return))}",
"KPH*/KHR*/S-P": "{#Super_L(Control_L(space))}",
"KPH*/KHR*/SP*S": "{#Super_L(Control_L())}",
"KPH*/KHR*/SPWHRAERB": "{#Super_L(Control_L(backslash))}",
"KPH*/KHR*/STPH-G": "{#Super_L(Control_L(Right))}",
"KPH*/KHR*/STPH-B": "{#Super_L(Control_L(Down))}",
"KPH*/KHR*/STPH-P": "{#Super_L(Control_L(Up))}",
"KPH*/KHR*/STPH-R": "{#Super_L(Control_L(Left))}",
"KPH*/KHR*/TA*B": "{#Super_L(Control_L(Tab))}",
"KPH*/KHR*/TKHRAO*ET": "{#Super_L(Control_L(Delete))}",
"KPH*/STP*/KHR*/A*": "{#Super_L(Shift_L(Control_L(a)))}",
"KPH*/STP*/KHR*/PW*": "{#Super_L(Shift_L(Control_L(b)))}",
"KPH*/STP*/KHR*/KR*": "{#Super_L(Shift_L(Control_L(c)))}",
"KPH*/STP*/KHR*/TK*": "{#Super_L(Shift_L(Control_L(d)))}",
"KPH*/STP*/KHR*/*E": "{#Super_L(Shift_L(Control_L(e)))}",
"KPH*/STP*/KHR*/TP*": "{#Super_L(Shift_L(Control_L(f)))}",
"KPH*/STP*/KHR*/TKPW*": "{#Super_L(Shift_L(Control_L(g)))}",
"KPH*/STP*/KHR*/H*": "{#Super_L(Shift_L(Control_L(h)))}",
"KPH*/STP*/KHR*/*EU": "{#Super_L(Shift_L(Control_L(i)))}",
"KPH*/STP*/KHR*/SKWR*": "{#Super_L(Shift_L(Control_L(j)))}",
"KPH*/STP*/KHR*/K*": "{#Super_L(Shift_L(Control_L(k)))}",
"KPH*/STP*/KHR*/HR*": "{#Super_L(Shift_L(Control_L(l)))}",
"KPH*/STP*/KHR*/PH*": "{#Super_L(Shift_L(Control_L(m)))}",
"KPH*/STP*/KHR*/TPH*": "{#Super_L(Shift_L(Control_L(n)))}",
"KPH*/STP*/KHR*/O*": "{#Super_L(Shift_L(Control_L(o)))}",
"KPH*/STP*/KHR*/P*": "{#Super_L(Shift_L(Control_L(p)))}",
"KPH*/STP*/KHR*/KW*": "{#Super_L(Shift_L(Control_L(q)))}",
"KPH*/STP*/KHR*/R*": "{#Super_L(Shift_L(Control_L(r)))}",
"KPH*/STP*/KHR*/S*": "{#Super_L(Shift_L(Control_L(s)))}",
"KPH*/STP*/KHR*/T*": "{#Super_L(Shift_L(Control_L(t)))}",
"KPH*/STP*/KHR*/*U": "{#Super_L(Shift_L(Control_L(u)))}",
"KPH*/STP*/KHR*/SR*": "{#Super_L(Shift_L(Control_L(v)))}",
"KPH*/STP*/KHR*/W*": "{#Super_L(Shift_L(Control_L(w)))}",
"KPH*/STP*/KHR*/KP*": "{#Super_L(Shift_L(Control_L(x)))}",
"KPH*/STP*/KHR*/KWR*": "{#Super_L(Shift_L(Control_L(y)))}",
"KPH*/STP*/KHR*/STKPW*": "{#Super_L(Shift_L(Control_L(z)))}",
"KPH*/STP*/KHR*/0": "{#Super_L(Shift_L(Control_L(0)))}",
"KPH*/STP*/KHR*/1": "{#Super_L(Shift_L(Control_L(1)))}",
"KPH*/STP*/KHR*/2": "{#Super_L(Shift_L(Control_L(2)))}",
"KPH*/STP*/KHR*/3": "{#Super_L(Shift_L(Control_L(3)))}",
"KPH*/STP*/KHR*/4": "{#Super_L(Shift_L(Control_L(4)))}",
"KPH*/STP*/KHR*/5": "{#Super_L(Shift_L(Control_L(5)))}",
"KPH*/STP*/KHR*/6": "{#Super_L(Shift_L(Control_L(6)))}",
"KPH*/STP*/KHR*/7": "{#Super_L(Shift_L(Control_L(7)))}",
"KPH*/STP*/KHR*/8": "{#Super_L(Shift_L(Control_L(8)))}",
"KPH*/STP*/KHR*/9": "{#Super_L(Shift_L(Control_L(9)))}",
"KPH*/STP*/KHR*/KH-FG": "{#Super_L(Shift_L(Control_L(grave)))}",
"KPH*/STP*/KHR*/KW-BG": "{#Super_L(Shift_L(Control_L(comma)))}",
"KPH*/STP*/KHR*/PR*EPB": "{#Super_L(Shift_L(Control_L(parenright)))}",
"KPH*/STP*/KHR*/PREPB": "{#Super_L(Shift_L(Control_L(parenleft)))}",
"KPH*/STP*/KHR*/PW*FP": "{#Super_L(Shift_L(Control_L(BackSpace)))}",
"KPH*/STP*/KHR*/PWR*BGT": "{#Super_L(Shift_L(Control_L(bracketright)))}",
"KPH*/STP*/KHR*/PWR-BGT": "{#Super_L(Shift_L(Control_L(bracketleft)))}",
"KPH*/STP*/KHR*/R-R": "{#Super_L(Shift_L(Control_L(Return)))}",
"KPH*/STP*/KHR*/S-P": "{#Super_L(Shift_L(Control_L(space)))}",
"KPH*/STP*/KHR*/SP*S": "{#Super_L(Shift_L(Control_L()))}",
"KPH*/STP*/KHR*/SPWHRAERB": "{#Super_L(Shift_L(Control_L(backslash)))}",
"KPH*/STP*/KHR*/STPH-G": "{#Super_L(Shift_L(Control_L(Right)))}",
"KPH*/STP*/KHR*/STPH-B": "{#Super_L(Shift_L(Control_L(Down)))}",
"KPH*/STP*/KHR*/STPH-P": "{#Super_L(Shift_L(Control_L(Up)))}",
"KPH*/STP*/KHR*/STPH-R": "{#Super_L(Shift_L(Control_L(Left)))}",
"KPH*/STP*/KHR*/TA*B": "{#Super_L(Shift_L(Control_L(Tab)))}",
"KPH*/STP*/KHR*/TKHRAO*ET": "{#Super_L(Shift_L(Control_L(Delete)))}",
"KPH*/A*": "{#Super_L(a)}",
"KPH*/PW*": "{#Super_L(b)}",
"KPH*/KR*": "{#Super_L(c)}",
"KPH*/TK*": "{#Super_L(d)}",
"KPH*/*E": "{#Super_L(e)}",
"KPH*/TP*": "{#Super_L(f)}",
"KPH*/TKPW*": "{#Super_L(g)}",
"KPH*/H*": "{#Super_L(h)}",
"KPH*/*EU": "{#Super_L(i)}",
"KPH*/SKWR*": "{#Super_L(j)}",
"KPH*/K*": "{#Super_L(k)}",
"KPH*/HR*": "{#Super_L(l)}",
"KPH*/PH*": "{#Super_L(m)}",
"KPH*/TPH*": "{#Super_L(n)}",
"KPH*/O*": "{#Super_L(o)}",
"KPH*/P*": "{#Super_L(p)}",
"KPH*/KW*": "{#Super_L(q)}",
"KPH*/R*": "{#Super_L(r)}",
"KPH*/S*": "{#Super_L(s)}",
"KPH*/T*": "{#Super_L(t)}",
"KPH*/*U": "{#Super_L(u)}",
"KPH*/SR*": "{#Super_L(v)}",
"KPH*/W*": "{#Super_L(w)}",
"KPH*/KP*": "{#Super_L(x)}",
"KPH*/KWR*": "{#Super_L(y)}",
"KPH*/STKPW*": "{#Super_L(z)}",
"KPH*/0": "{#Super_L(0)}",
"KPH*/1": "{#Super_L(1)}",
"KPH*/2": "{#Super_L(2)}",
"KPH*/3": "{#Super_L(3)}",
"KPH*/4": "{#Super_L(4)}",
"KPH*/5": "{#Super_L(5)}",
"KPH*/6": "{#Super_L(6)}",
"KPH*/7": "{#Super_L(7)}",
"KPH*/8": "{#Super_L(8)}",
"KPH*/9": "{#Super_L(9)}",
"KPH*/KH-FG": "{#Super_L(grave)}",
"KPH*/KW-BG": "{#Super_L(comma)}",
"KPH*/PR*EPB": "{#Super_L(parenright)}",
"KPH*/PREPB": "{#Super_L(parenleft)}",
"KPH*/PW*FP": "{#Super_L(BackSpace)}",
"KPH*/PWR*BGT": "{#Super_L(bracketright)}",
"KPH*/PWR-BGT": "{#Super_L(bracketleft)}",
"KPH*/R-R": "{#Super_L(Return)}",
"KPH*/S-P": "{#Super_L(space)}",
"KPH*/SP*S": "{#Super_L()}",
"KPH*/SPWHRAERB": "{#Super_L(backslash)}",
"KPH*/STPH-G": "{#Super_L(Right)}",
"KPH*/STPH-B": "{#Super_L(Down)}",
"KPH*/STPH-P": "{#Super_L(Up)}",
"KPH*/STPH-R": "{#Super_L(Left)}",
"KPH*/TA*B": "{#Super_L(Tab)}",
"KPH*/TKHRAO*ET": "{#Super_L(Delete)}",
"KHR*/KPH*/A*": "{#Control_L(Super_L(a))}",
"KHR*/KPH*/PW*": "{#Control_L(Super_L(b))}",
"KHR*/KPH*/KR*": "{#Control_L(Super_L(c))}",
"KHR*/KPH*/TK*": "{#Control_L(Super_L(d))}",
"KHR*/KPH*/*E": "{#Control_L(Super_L(e))}",
"KHR*/KPH*/TP*": "{#Control_L(Super_L(f))}",
"KHR*/KPH*/TKPW*": "{#Control_L(Super_L(g))}",
"KHR*/KPH*/H*": "{#Control_L(Super_L(h))}",
"KHR*/KPH*/*EU": "{#Control_L(Super_L(i))}",
"KHR*/KPH*/SKWR*": "{#Control_L(Super_L(j))}",
"KHR*/KPH*/K*": "{#Control_L(Super_L(k))}",
"KHR*/KPH*/HR*": "{#Control_L(Super_L(l))}",
"KHR*/KPH*/PH*": "{#Control_L(Super_L(m))}",
"KHR*/KPH*/TPH*": "{#Control_L(Super_L(n))}",
"KHR*/KPH*/O*": "{#Control_L(Super_L(o))}",
"KHR*/KPH*/P*": "{#Control_L(Super_L(p))}",
"KHR*/KPH*/KW*": "{#Control_L(Super_L(q))}",
"KHR*/KPH*/R*": "{#Control_L(Super_L(r))}",
"KHR*/KPH*/S*": "{#Control_L(Super_L(s))}",
"KHR*/KPH*/T*": "{#Control_L(Super_L(t))}",
"KHR*/KPH*/*U": "{#Control_L(Super_L(u))}",
"KHR*/KPH*/SR*": "{#Control_L(Super_L(v))}",
"KHR*/KPH*/W*": "{#Control_L(Super_L(w))}",
"KHR*/KPH*/KP*": "{#Control_L(Super_L(x))}",
"KHR*/KPH*/KWR*": "{#Control_L(Super_L(y))}",
"KHR*/KPH*/STKPW*": "{#Control_L(Super_L(z))}",
"KHR*/KPH*/0": "{#Control_L(Super_L(0))}",
"KHR*/KPH*/1": "{#Control_L(Super_L(1))}",
"KHR*/KPH*/2": "{#Control_L(Super_L(2))}",
"KHR*/KPH*/3": "{#Control_L(Super_L(3))}",
"KHR*/KPH*/4": "{#Control_L(Super_L(4))}",
"KHR*/KPH*/5": "{#Control_L(Super_L(5))}",
"KHR*/KPH*/6": "{#Control_L(Super_L(6))}",
"KHR*/KPH*/7": "{#Control_L(Super_L(7))}",
"KHR*/KPH*/8": "{#Control_L(Super_L(8))}",
"KHR*/KPH*/9": "{#Control_L(Super_L(9))}",
"KHR*/KPH*/KH-FG": "{#Control_L(Super_L(grave))}",
"KHR*/KPH*/KW-BG": "{#Control_L(Super_L(comma))}",
"KHR*/KPH*/PR*EPB": "{#Control_L(Super_L(parenright))}",
"KHR*/KPH*/PREPB": "{#Control_L(Super_L(parenleft))}",
"KHR*/KPH*/PW*FP": "{#Control_L(Super_L(BackSpace))}",
"KHR*/KPH*/PWR*BGT": "{#Control_L(Super_L(bracketright))}",
"KHR*/KPH*/PWR-BGT": "{#Control_L(Super_L(bracketleft))}",
"KHR*/KPH*/R-R": "{#Control_L(Super_L(Return))}",
"KHR*/KPH*/S-P": "{#Control_L(Super_L(space))}",
"KHR*/KPH*/SP*S": "{#Control_L(Super_L())}",
"KHR*/KPH*/SPWHRAERB": "{#Control_L(Super_L(backslash))}",
"KHR*/KPH*/STPH-G": "{#Control_L(Super_L(Right))}",
"KHR*/KPH*/STPH-B": "{#Control_L(Super_L(Down))}",
"KHR*/KPH*/STPH-P": "{#Control_L(Super_L(Up))}",
"KHR*/KPH*/STPH-R": "{#Control_L(Super_L(Left))}",
"KHR*/KPH*/TA*B": "{#Control_L(Super_L(Tab))}",
"KHR*/KPH*/TKHRAO*ET": "{#Control_L(Super_L(Delete))}",
"KHR*/A*": "{#Control_L(a)}",
"KHR*/PW*": "{#Control_L(b)}",
"KHR*/KR*": "{#Control_L(c)}",
"KHR*/TK*": "{#Control_L(d)}",
"KHR*/*E": "{#Control_L(e)}",
"KHR*/TP*": "{#Control_L(f)}",
"KHR*/TKPW*": "{#Control_L(g)}",
"KHR*/H*": "{#Control_L(h)}",
"KHR*/*EU": "{#Control_L(i)}",
"KHR*/SKWR*": "{#Control_L(j)}",
"KHR*/K*": "{#Control_L(k)}",
"KHR*/HR*": "{#Control_L(l)}",
"KHR*/PH*": "{#Control_L(m)}",
"KHR*/TPH*": "{#Control_L(n)}",
"KHR*/O*": "{#Control_L(o)}",
"KHR*/P*": "{#Control_L(p)}",
"KHR*/KW*": "{#Control_L(q)}",
"KHR*/R*": "{#Control_L(r)}",
"KHR*/S*": "{#Control_L(s)}",
"KHR*/T*": "{#Control_L(t)}",
"KHR*/*U": "{#Control_L(u)}",
"KHR*/SR*": "{#Control_L(v)}",
"KHR*/W*": "{#Control_L(w)}",
"KHR*/KP*": "{#Control_L(x)}",
"KHR*/KWR*": "{#Control_L(y)}",
"KHR*/STKPW*": "{#Control_L(z)}",
"KHR*/0": "{#Control_L(0)}",
"KHR*/1": "{#Control_L(1)}",
"KHR*/2": "{#Control_L(2)}",
"KHR*/3": "{#Control_L(3)}",
"KHR*/4": "{#Control_L(4)}",
"KHR*/5": "{#Control_L(5)}",
"KHR*/6": "{#Control_L(6)}",
"KHR*/7": "{#Control_L(7)}",
"KHR*/8": "{#Control_L(8)}",
"KHR*/9": "{#Control_L(9)}",
"KHR*/KH-FG": "{#Control_L(grave)}",
"KHR*/KW-BG": "{#Control_L(comma)}",
"KHR*/PR*EPB": "{#Control_L(parenright)}",
"KHR*/PREPB": "{#Control_L(parenleft)}",
"KHR*/PW*FP": "{#Control_L(BackSpace)}",
"KHR*/PWR*BGT": "{#Control_L(bracketright)}",
"KHR*/PWR-BGT": "{#Control_L(bracketleft)}",
"KHR*/R-R": "{#Control_L(Return)}",
"KHR*/S-P": "{#Control_L(space)}",
"KHR*/SP*S": "{#Control_L()}",
"KHR*/SPWHRAERB": "{#Control_L(backslash)}",
"KHR*/STPH-G": "{#Control_L(Right)}",
"KHR*/STPH-B": "{#Control_L(Down)}",
"KHR*/STPH-P": "{#Control_L(Up)}",
"KHR*/STPH-R": "{#Control_L(Left)}",
"KHR*/TA*B": "{#Control_L(Tab)}",
"KHR*/TKHRAO*ET": "{#Control_L(Delete)}",
"KPH*/KHR*/A*": "{#Super_L(Control_L(a))}",
"KPH*/KHR*/PW*": "{#Super_L(Control_L(b))}",
"KPH*/KHR*/KR*": "{#Super_L(Control_L(c))}",
"KPH*/KHR*/TK*": "{#Super_L(Control_L(d))}",
"KPH*/KHR*/*E": "{#Super_L(Control_L(e))}",
"KPH*/KHR*/TP*": "{#Super_L(Control_L(f))}",
"KPH*/KHR*/TKPW*": "{#Super_L(Control_L(g))}",
"KPH*/KHR*/H*": "{#Super_L(Control_L(h))}",
"KPH*/KHR*/*EU": "{#Super_L(Control_L(i))}",
"KPH*/KHR*/SKWR*": "{#Super_L(Control_L(j))}",
"KPH*/KHR*/K*": "{#Super_L(Control_L(k))}",
"KPH*/KHR*/HR*": "{#Super_L(Control_L(l))}",
"KPH*/KHR*/PH*": "{#Super_L(Control_L(m))}",
"KPH*/KHR*/TPH*": "{#Super_L(Control_L(n))}",
"KPH*/KHR*/O*": "{#Super_L(Control_L(o))}",
"KPH*/KHR*/P*": "{#Super_L(Control_L(p))}",
"KPH*/KHR*/KW*": "{#Super_L(Control_L(q))}",
"KPH*/KHR*/R*": "{#Super_L(Control_L(r))}",
"KPH*/KHR*/S*": "{#Super_L(Control_L(s))}",
"KPH*/KHR*/T*": "{#Super_L(Control_L(t))}",
"KPH*/KHR*/*U": "{#Super_L(Control_L(u))}",
"KPH*/KHR*/SR*": "{#Super_L(Control_L(v))}",
"KPH*/KHR*/W*": "{#Super_L(Control_L(w))}",
"KPH*/KHR*/KP*": "{#Super_L(Control_L(x))}",
"KPH*/KHR*/KWR*": "{#Super_L(Control_L(y))}",
"KPH*/KHR*/STKPW*": "{#Super_L(Control_L(z))}",
"KPH*/KHR*/0": "{#Super_L(Control_L(0))}",
"KPH*/KHR*/1": "{#Super_L(Control_L(1))}",
"KPH*/KHR*/2": "{#Super_L(Control_L(2))}",
"KPH*/KHR*/3": "{#Super_L(Control_L(3))}",
"KPH*/KHR*/4": "{#Super_L(Control_L(4))}",
"KPH*/KHR*/5": "{#Super_L(Control_L(5))}",
"KPH*/KHR*/6": "{#Super_L(Control_L(6))}",
"KPH*/KHR*/7": "{#Super_L(Control_L(7))}",
"KPH*/KHR*/8": "{#Super_L(Control_L(8))}",
"KPH*/KHR*/9": "{#Super_L(Control_L(9))}",
"KPH*/KHR*/KH-FG": "{#Super_L(Control_L(grave))}",
"KPH*/KHR*/KW-BG": "{#Super_L(Control_L(comma))}",
"KPH*/KHR*/PR*EPB": "{#Super_L(Control_L(parenright))}",
"KPH*/KHR*/PREPB": "{#Super_L(Control_L(parenleft))}",
"KPH*/KHR*/PW*FP": "{#Super_L(Control_L(BackSpace))}",
"KPH*/KHR*/PWR*BGT": "{#Super_L(Control_L(bracketright))}",
"KPH*/KHR*/PWR-BGT": "{#Super_L(Control_L(bracketleft))}",
"KPH*/KHR*/R-R": "{#Super_L(Control_L(Return))}",
"KPH*/KHR*/S-P": "{#Super_L(Control_L(space))}",
"KPH*/KHR*/SP*S": "{#Super_L(Control_L())}",
"KPH*/KHR*/SPWHRAERB": "{#Super_L(Control_L(backslash))}",
"KPH*/KHR*/STPH-G": "{#Super_L(Control_L(Right))}",
"KPH*/KHR*/STPH-B": "{#Super_L(Control_L(Down))}",
"KPH*/KHR*/STPH-P": "{#Super_L(Control_L(Up))}",
"KPH*/KHR*/STPH-R": "{#Super_L(Control_L(Left))}",
"KPH*/KHR*/TA*B": "{#Super_L(Control_L(Tab))}",
"KPH*/KHR*/TKHRAO*ET": "{#Super_L(Control_L(Delete))}",
"STP*/KPH*/A*": "{#Shift_L(Super_L(a))}",
"STP*/KPH*/PW*": "{#Shift_L(Super_L(b))}",
"STP*/KPH*/KR*": "{#Shift_L(Super_L(c))}",
"STP*/KPH*/TK*": "{#Shift_L(Super_L(d))}",
"STP*/KPH*/*E": "{#Shift_L(Super_L(e))}",
"STP*/KPH*/TP*": "{#Shift_L(Super_L(f))}",
"STP*/KPH*/TKPW*": "{#Shift_L(Super_L(g))}",
"STP*/KPH*/H*": "{#Shift_L(Super_L(h))}",
"STP*/KPH*/*EU": "{#Shift_L(Super_L(i))}",
"STP*/KPH*/SKWR*": "{#Shift_L(Super_L(j))}",
"STP*/KPH*/K*": "{#Shift_L(Super_L(k))}",
"STP*/KPH*/HR*": "{#Shift_L(Super_L(l))}",
"STP*/KPH*/PH*": "{#Shift_L(Super_L(m))}",
"STP*/KPH*/TPH*": "{#Shift_L(Super_L(n))}",
"STP*/KPH*/O*": "{#Shift_L(Super_L(o))}",
"STP*/KPH*/P*": "{#Shift_L(Super_L(p))}",
"STP*/KPH*/KW*": "{#Shift_L(Super_L(q))}",
"STP*/KPH*/R*": "{#Shift_L(Super_L(r))}",
"STP*/KPH*/S*": "{#Shift_L(Super_L(s))}",
"STP*/KPH*/T*": "{#Shift_L(Super_L(t))}",
"STP*/KPH*/*U": "{#Shift_L(Super_L(u))}",
"STP*/KPH*/SR*": "{#Shift_L(Super_L(v))}",
"STP*/KPH*/W*": "{#Shift_L(Super_L(w))}",
"STP*/KPH*/KP*": "{#Shift_L(Super_L(x))}",
"STP*/KPH*/KWR*": "{#Shift_L(Super_L(y))}",
"STP*/KPH*/STKPW*": "{#Shift_L(Super_L(z))}",
"STP*/KPH*/0": "{#Shift_L(Super_L(0))}",
"STP*/KPH*/1": "{#Shift_L(Super_L(1))}",
"STP*/KPH*/2": "{#Shift_L(Super_L(2))}",
"STP*/KPH*/3": "{#Shift_L(Super_L(3))}",
"STP*/KPH*/4": "{#Shift_L(Super_L(4))}",
"STP*/KPH*/5": "{#Shift_L(Super_L(5))}",
"STP*/KPH*/6": "{#Shift_L(Super_L(6))}",
"STP*/KPH*/7": "{#Shift_L(Super_L(7))}",
"STP*/KPH*/8": "{#Shift_L(Super_L(8))}",
"STP*/KPH*/9": "{#Shift_L(Super_L(9))}",
"STP*/KPH*/KH-FG": "{#Shift_L(Super_L(grave))}",
"STP*/KPH*/KW-BG": "{#Shift_L(Super_L(comma))}",
"STP*/KPH*/PR*EPB": "{#Shift_L(Super_L(parenright))}",
"STP*/KPH*/PREPB": "{#Shift_L(Super_L(parenleft))}",
"STP*/KPH*/PW*FP": "{#Shift_L(Super_L(BackSpace))}",
"STP*/KPH*/PWR*BGT": "{#Shift_L(Super_L(bracketright))}",
"STP*/KPH*/PWR-BGT": "{#Shift_L(Super_L(bracketleft))}",
"STP*/KPH*/R-R": "{#Shift_L(Super_L(Return))}",
"STP*/KPH*/S-P": "{#Shift_L(Super_L(space))}",
"STP*/KPH*/SP*S": "{#Shift_L(Super_L())}",
"STP*/KPH*/SPWHRAERB": "{#Shift_L(Super_L(backslash))}",
"STP*/KPH*/STPH-G": "{#Shift_L(Super_L(Right))}",
"STP*/KPH*/STPH-B": "{#Shift_L(Super_L(Down))}",
"STP*/KPH*/STPH-P": "{#Shift_L(Super_L(Up))}",
"STP*/KPH*/STPH-R": "{#Shift_L(Super_L(Left))}",
"STP*/KPH*/TA*B": "{#Shift_L(Super_L(Tab))}",
"STP*/KPH*/TKHRAO*ET": "{#Shift_L(Super_L(Delete))}",
"STP*/KHR*/KPH*/A*": "{#Shift_L(Control_L(Super_L(a)))}",
"STP*/KHR*/KPH*/PW*": "{#Shift_L(Control_L(Super_L(b)))}",
"STP*/KHR*/KPH*/KR*": "{#Shift_L(Control_L(Super_L(c)))}",
"STP*/KHR*/KPH*/TK*": "{#Shift_L(Control_L(Super_L(d)))}",
"STP*/KHR*/KPH*/*E": "{#Shift_L(Control_L(Super_L(e)))}",
"STP*/KHR*/KPH*/TP*": "{#Shift_L(Control_L(Super_L(f)))}",
"STP*/KHR*/KPH*/TKPW*": "{#Shift_L(Control_L(Super_L(g)))}",
"STP*/KHR*/KPH*/H*": "{#Shift_L(Control_L(Super_L(h)))}",
"STP*/KHR*/KPH*/*EU": "{#Shift_L(Control_L(Super_L(i)))}",
"STP*/KHR*/KPH*/SKWR*": "{#Shift_L(Control_L(Super_L(j)))}",
"STP*/KHR*/KPH*/K*": "{#Shift_L(Control_L(Super_L(k)))}",
"STP*/KHR*/KPH*/HR*": "{#Shift_L(Control_L(Super_L(l)))}",
"STP*/KHR*/KPH*/PH*": "{#Shift_L(Control_L(Super_L(m)))}",
"STP*/KHR*/KPH*/TPH*": "{#Shift_L(Control_L(Super_L(n)))}",
"STP*/KHR*/KPH*/O*": "{#Shift_L(Control_L(Super_L(o)))}",
"STP*/KHR*/KPH*/P*": "{#Shift_L(Control_L(Super_L(p)))}",
"STP*/KHR*/KPH*/KW*": "{#Shift_L(Control_L(Super_L(q)))}",
"STP*/KHR*/KPH*/R*": "{#Shift_L(Control_L(Super_L(r)))}",
"STP*/KHR*/KPH*/S*": "{#Shift_L(Control_L(Super_L(s)))}",
"STP*/KHR*/KPH*/T*": "{#Shift_L(Control_L(Super_L(t)))}",
"STP*/KHR*/KPH*/*U": "{#Shift_L(Control_L(Super_L(u)))}",
"STP*/KHR*/KPH*/SR*": "{#Shift_L(Control_L(Super_L(v)))}",
"STP*/KHR*/KPH*/W*": "{#Shift_L(Control_L(Super_L(w)))}",
"STP*/KHR*/KPH*/KP*": "{#Shift_L(Control_L(Super_L(x)))}",
"STP*/KHR*/KPH*/KWR*": "{#Shift_L(Control_L(Super_L(y)))}",
"STP*/KHR*/KPH*/STKPW*": "{#Shift_L(Control_L(Super_L(z)))}",
"STP*/KHR*/KPH*/0": "{#Shift_L(Control_L(Super_L(0)))}",
"STP*/KHR*/KPH*/1": "{#Shift_L(Control_L(Super_L(1)))}",
"STP*/KHR*/KPH*/2": "{#Shift_L(Control_L(Super_L(2)))}",
"STP*/KHR*/KPH*/3": "{#Shift_L(Control_L(Super_L(3)))}",
"STP*/KHR*/KPH*/4": "{#Shift_L(Control_L(Super_L(4)))}",
"STP*/KHR*/KPH*/5": "{#Shift_L(Control_L(Super_L(5)))}",
"STP*/KHR*/KPH*/6": "{#Shift_L(Control_L(Super_L(6)))}",
"STP*/KHR*/KPH*/7": "{#Shift_L(Control_L(Super_L(7)))}",
"STP*/KHR*/KPH*/8": "{#Shift_L(Control_L(Super_L(8)))}",
"STP*/KHR*/KPH*/9": "{#Shift_L(Control_L(Super_L(9)))}",
"STP*/KHR*/KPH*/KH-FG": "{#Shift_L(Control_L(Super_L(grave)))}",
"STP*/KHR*/KPH*/KW-BG": "{#Shift_L(Control_L(Super_L(comma)))}",
"STP*/KHR*/KPH*/PR*EPB": "{#Shift_L(Control_L(Super_L(parenright)))}",
"STP*/KHR*/KPH*/PREPB": "{#Shift_L(Control_L(Super_L(parenleft)))}",
"STP*/KHR*/KPH*/PW*FP": "{#Shift_L(Control_L(Super_L(BackSpace)))}",
"STP*/KHR*/KPH*/PWR*BGT": "{#Shift_L(Control_L(Super_L(bracketright)))}",
"STP*/KHR*/KPH*/PWR-BGT": "{#Shift_L(Control_L(Super_L(bracketleft)))}",
"STP*/KHR*/KPH*/R-R": "{#Shift_L(Control_L(Super_L(Return)))}",
"STP*/KHR*/KPH*/S-P": "{#Shift_L(Control_L(Super_L(space)))}",
"STP*/KHR*/KPH*/SP*S": "{#Shift_L(Control_L(Super_L()))}",
"STP*/KHR*/KPH*/SPWHRAERB": "{#Shift_L(Control_L(Super_L(backslash)))}",
"STP*/KHR*/KPH*/STPH-G": "{#Shift_L(Control_L(Super_L(Right)))}",
"STP*/KHR*/KPH*/STPH-B": "{#Shift_L(Control_L(Super_L(Down)))}",
"STP*/KHR*/KPH*/STPH-P": "{#Shift_L(Control_L(Super_L(Up)))}",
"STP*/KHR*/KPH*/STPH-R": "{#Shift_L(Control_L(Super_L(Left)))}",
"STP*/KHR*/KPH*/TA*B": "{#Shift_L(Control_L(Super_L(Tab)))}",
"STP*/KHR*/KPH*/TKHRAO*ET": "{#Shift_L(Control_L(Super_L(Delete)))}",
"STP*/KHR*/A*": "{#Shift_L(Control_L(a))}",
"STP*/KHR*/PW*": "{#Shift_L(Control_L(b))}",
"STP*/KHR*/KR*": "{#Shift_L(Control_L(c))}",
"STP*/KHR*/TK*": "{#Shift_L(Control_L(d))}",
"STP*/KHR*/*E": "{#Shift_L(Control_L(e))}",
"STP*/KHR*/TP*": "{#Shift_L(Control_L(f))}",
"STP*/KHR*/TKPW*": "{#Shift_L(Control_L(g))}",
"STP*/KHR*/H*": "{#Shift_L(Control_L(h))}",
"STP*/KHR*/*EU": "{#Shift_L(Control_L(i))}",
"STP*/KHR*/SKWR*": "{#Shift_L(Control_L(j))}",
"STP*/KHR*/K*": "{#Shift_L(Control_L(k))}",
"STP*/KHR*/HR*": "{#Shift_L(Control_L(l))}",
"STP*/KHR*/PH*": "{#Shift_L(Control_L(m))}",
"STP*/KHR*/TPH*": "{#Shift_L(Control_L(n))}",
"STP*/KHR*/O*": "{#Shift_L(Control_L(o))}",
"STP*/KHR*/P*": "{#Shift_L(Control_L(p))}",
"STP*/KHR*/KW*": "{#Shift_L(Control_L(q))}",
"STP*/KHR*/R*": "{#Shift_L(Control_L(r))}",
"STP*/KHR*/S*": "{#Shift_L(Control_L(s))}",
"STP*/KHR*/T*": "{#Shift_L(Control_L(t))}",
"STP*/KHR*/*U": "{#Shift_L(Control_L(u))}",
"STP*/KHR*/SR*": "{#Shift_L(Control_L(v))}",
"STP*/KHR*/W*": "{#Shift_L(Control_L(w))}",
"STP*/KHR*/KP*": "{#Shift_L(Control_L(x))}",
"STP*/KHR*/KWR*": "{#Shift_L(Control_L(y))}",
"STP*/KHR*/STKPW*": "{#Shift_L(Control_L(z))}",
"STP*/KHR*/0": "{#Shift_L(Control_L(0))}",
"STP*/KHR*/1": "{#Shift_L(Control_L(1))}",
"STP*/KHR*/2": "{#Shift_L(Control_L(2))}",
"STP*/KHR*/3": "{#Shift_L(Control_L(3))}",
"STP*/KHR*/4": "{#Shift_L(Control_L(4))}",
"STP*/KHR*/5": "{#Shift_L(Control_L(5))}",
"STP*/KHR*/6": "{#Shift_L(Control_L(6))}",
"STP*/KHR*/7": "{#Shift_L(Control_L(7))}",
"STP*/KHR*/8": "{#Shift_L(Control_L(8))}",
"STP*/KHR*/9": "{#Shift_L(Control_L(9))}",
"STP*/KHR*/KH-FG": "{#Shift_L(Control_L(grave))}",
"STP*/KHR*/KW-BG": "{#Shift_L(Control_L(comma))}",
"STP*/KHR*/PR*EPB": "{#Shift_L(Control_L(parenright))}",
"STP*/KHR*/PREPB": "{#Shift_L(Control_L(parenleft))}",
"STP*/KHR*/PW*FP": "{#Shift_L(Control_L(BackSpace))}",
"STP*/KHR*/PWR*BGT": "{#Shift_L(Control_L(bracketright))}",
"STP*/KHR*/PWR-BGT": "{#Shift_L(Control_L(bracketleft))}",
"STP*/KHR*/R-R": "{#Shift_L(Control_L(Return))}",
"STP*/KHR*/S-P": "{#Shift_L(Control_L(space))}",
"STP*/KHR*/SP*S": "{#Shift_L(Control_L())}",
"STP*/KHR*/SPWHRAERB": "{#Shift_L(Control_L(backslash))}",
"STP*/KHR*/STPH-G": "{#Shift_L(Control_L(Right))}",
"STP*/KHR*/STPH-B": "{#Shift_L(Control_L(Down))}",
"STP*/KHR*/STPH-P": "{#Shift_L(Control_L(Up))}",
"STP*/KHR*/STPH-R": "{#Shift_L(Control_L(Left))}",
"STP*/KHR*/TA*B": "{#Shift_L(Control_L(Tab))}",
"STP*/KHR*/TKHRAO*ET": "{#Shift_L(Control_L(Delete))}",
"STP*/KPH*/KHR*/A*": "{#Shift_L(Super_L(Control_L(a)))}",
"STP*/KPH*/KHR*/PW*": "{#Shift_L(Super_L(Control_L(b)))}",
"STP*/KPH*/KHR*/KR*": "{#Shift_L(Super_L(Control_L(c)))}",
"STP*/KPH*/KHR*/TK*": "{#Shift_L(Super_L(Control_L(d)))}",
"STP*/KPH*/KHR*/*E": "{#Shift_L(Super_L(Control_L(e)))}",
"STP*/KPH*/KHR*/TP*": "{#Shift_L(Super_L(Control_L(f)))}",
"STP*/KPH*/KHR*/TKPW*": "{#Shift_L(Super_L(Control_L(g)))}",
"STP*/KPH*/KHR*/H*": "{#Shift_L(Super_L(Control_L(h)))}",
"STP*/KPH*/KHR*/*EU": "{#Shift_L(Super_L(Control_L(i)))}",
"STP*/KPH*/KHR*/SKWR*": "{#Shift_L(Super_L(Control_L(j)))}",
"STP*/KPH*/KHR*/K*": "{#Shift_L(Super_L(Control_L(k)))}",
"STP*/KPH*/KHR*/HR*": "{#Shift_L(Super_L(Control_L(l)))}",
"STP*/KPH*/KHR*/PH*": "{#Shift_L(Super_L(Control_L(m)))}",
"STP*/KPH*/KHR*/TPH*": "{#Shift_L(Super_L(Control_L(n)))}",
"STP*/KPH*/KHR*/O*": "{#Shift_L(Super_L(Control_L(o)))}",
"STP*/KPH*/KHR*/P*": "{#Shift_L(Super_L(Control_L(p)))}",
"STP*/KPH*/KHR*/KW*": "{#Shift_L(Super_L(Control_L(q)))}",
"STP*/KPH*/KHR*/R*": "{#Shift_L(Super_L(Control_L(r)))}",
"STP*/KPH*/KHR*/S*": "{#Shift_L(Super_L(Control_L(s)))}",
"STP*/KPH*/KHR*/T*": "{#Shift_L(Super_L(Control_L(t)))}",
"STP*/KPH*/KHR*/*U": "{#Shift_L(Super_L(Control_L(u)))}",
"STP*/KPH*/KHR*/SR*": "{#Shift_L(Super_L(Control_L(v)))}",
"STP*/KPH*/KHR*/W*": "{#Shift_L(Super_L(Control_L(w)))}",
"STP*/KPH*/KHR*/KP*": "{#Shift_L(Super_L(Control_L(x)))}",
"STP*/KPH*/KHR*/KWR*": "{#Shift_L(Super_L(Control_L(y)))}",
"STP*/KPH*/KHR*/STKPW*": "{#Shift_L(Super_L(Control_L(z)))}",
"STP*/KPH*/KHR*/0": "{#Shift_L(Super_L(Control_L(0)))}",
"STP*/KPH*/KHR*/1": "{#Shift_L(Super_L(Control_L(1)))}",
"STP*/KPH*/KHR*/2": "{#Shift_L(Super_L(Control_L(2)))}",
"STP*/KPH*/KHR*/3": "{#Shift_L(Super_L(Control_L(3)))}",
"STP*/KPH*/KHR*/4": "{#Shift_L(Super_L(Control_L(4)))}",
"STP*/KPH*/KHR*/5": "{#Shift_L(Super_L(Control_L(5)))}",
"STP*/KPH*/KHR*/6": "{#Shift_L(Super_L(Control_L(6)))}",
"STP*/KPH*/KHR*/7": "{#Shift_L(Super_L(Control_L(7)))}",
"STP*/KPH*/KHR*/8": "{#Shift_L(Super_L(Control_L(8)))}",
"STP*/KPH*/KHR*/9": "{#Shift_L(Super_L(Control_L(9)))}",
"STP*/KPH*/KHR*/KH-FG": "{#Shift_L(Super_L(Control_L(grave)))}",
"STP*/KPH*/KHR*/KW-BG": "{#Shift_L(Super_L(Control_L(comma)))}",
"STP*/KPH*/KHR*/PR*EPB": "{#Shift_L(Super_L(Control_L(parenright)))}",
"STP*/KPH*/KHR*/PREPB": "{#Shift_L(Super_L(Control_L(parenleft)))}",
"STP*/KPH*/KHR*/PW*FP": "{#Shift_L(Super_L(Control_L(BackSpace)))}",
"STP*/KPH*/KHR*/PWR*BGT": "{#Shift_L(Super_L(Control_L(bracketright)))}",
"STP*/KPH*/KHR*/PWR-BGT": "{#Shift_L(Super_L(Control_L(bracketleft)))}",
"STP*/KPH*/KHR*/R-R": "{#Shift_L(Super_L(Control_L(Return)))}",
"STP*/KPH*/KHR*/S-P": "{#Shift_L(Super_L(Control_L(space)))}",
"STP*/KPH*/KHR*/SP*S": "{#Shift_L(Super_L(Control_L()))}",
"STP*/KPH*/KHR*/SPWHRAERB": "{#Shift_L(Super_L(Control_L(backslash)))}",
"STP*/KPH*/KHR*/STPH-G": "{#Shift_L(Super_L(Control_L(Right)))}",
"STP*/KPH*/KHR*/STPH-B": "{#Shift_L(Super_L(Control_L(Down)))}",
"STP*/KPH*/KHR*/STPH-P": "{#Shift_L(Super_L(Control_L(Up)))}",
"STP*/KPH*/KHR*/STPH-R": "{#Shift_L(Super_L(Control_L(Left)))}",
"STP*/KPH*/KHR*/TA*B": "{#Shift_L(Super_L(Control_L(Tab)))}",
"STP*/KPH*/KHR*/TKHRAO*ET": "{#Shift_L(Super_L(Control_L(Delete)))}",
"THRA*/STP*/A*": "{#Alt_L(Shift_L(a))}",
"THRA*/STP*/PW*": "{#Alt_L(Shift_L(b))}",
"THRA*/STP*/KR*": "{#Alt_L(Shift_L(c))}",
"THRA*/STP*/TK*": "{#Alt_L(Shift_L(d))}",
"THRA*/STP*/*E": "{#Alt_L(Shift_L(e))}",
"THRA*/STP*/TP*": "{#Alt_L(Shift_L(f))}",
"THRA*/STP*/TKPW*": "{#Alt_L(Shift_L(g))}",
"THRA*/STP*/H*": "{#Alt_L(Shift_L(h))}",
"THRA*/STP*/*EU": "{#Alt_L(Shift_L(i))}",
"THRA*/STP*/SKWR*": "{#Alt_L(Shift_L(j))}",
"THRA*/STP*/K*": "{#Alt_L(Shift_L(k))}",
"THRA*/STP*/HR*": "{#Alt_L(Shift_L(l))}",
"THRA*/STP*/PH*": "{#Alt_L(Shift_L(m))}",
"THRA*/STP*/TPH*": "{#Alt_L(Shift_L(n))}",
"THRA*/STP*/O*": "{#Alt_L(Shift_L(o))}",
"THRA*/STP*/P*": "{#Alt_L(Shift_L(p))}",
"THRA*/STP*/KW*": "{#Alt_L(Shift_L(q))}",
"THRA*/STP*/R*": "{#Alt_L(Shift_L(r))}",
"THRA*/STP*/S*": "{#Alt_L(Shift_L(s))}",
"THRA*/STP*/T*": "{#Alt_L(Shift_L(t))}",
"THRA*/STP*/*U": "{#Alt_L(Shift_L(u))}",
"THRA*/STP*/SR*": "{#Alt_L(Shift_L(v))}",
"THRA*/STP*/W*": "{#Alt_L(Shift_L(w))}",
"THRA*/STP*/KP*": "{#Alt_L(Shift_L(x))}",
"THRA*/STP*/KWR*": "{#Alt_L(Shift_L(y))}",
"THRA*/STP*/STKPW*": "{#Alt_L(Shift_L(z))}",
"THRA*/STP*/0": "{#Alt_L(Shift_L(0))}",
"THRA*/STP*/1": "{#Alt_L(Shift_L(1))}",
"THRA*/STP*/2": "{#Alt_L(Shift_L(2))}",
"THRA*/STP*/3": "{#Alt_L(Shift_L(3))}",
"THRA*/STP*/4": "{#Alt_L(Shift_L(4))}",
"THRA*/STP*/5": "{#Alt_L(Shift_L(5))}",
"THRA*/STP*/6": "{#Alt_L(Shift_L(6))}",
"THRA*/STP*/7": "{#Alt_L(Shift_L(7))}",
"THRA*/STP*/8": "{#Alt_L(Shift_L(8))}",
"THRA*/STP*/9": "{#Alt_L(Shift_L(9))}",
"THRA*/STP*/KH-FG": "{#Alt_L(Shift_L(grave))}",
"THRA*/STP*/KW-BG": "{#Alt_L(Shift_L(comma))}",
"THRA*/STP*/PR*EPB": "{#Alt_L(Shift_L(parenright))}",
"THRA*/STP*/PREPB": "{#Alt_L(Shift_L(parenleft))}",
"THRA*/STP*/PW*FP": "{#Alt_L(Shift_L(BackSpace))}",
"THRA*/STP*/PWR*BGT": "{#Alt_L(Shift_L(bracketright))}",
"THRA*/STP*/PWR-BGT": "{#Alt_L(Shift_L(bracketleft))}",
"THRA*/STP*/R-R": "{#Alt_L(Shift_L(Return))}",
"THRA*/STP*/S-P": "{#Alt_L(Shift_L(space))}",
"THRA*/STP*/SP*S": "{#Alt_L(Shift_L())}",
"THRA*/STP*/SPWHRAERB": "{#Alt_L(Shift_L(backslash))}",
"THRA*/STP*/STPH-G": "{#Alt_L(Shift_L(Right))}",
"THRA*/STP*/STPH-B": "{#Alt_L(Shift_L(Down))}",
"THRA*/STP*/STPH-P": "{#Alt_L(Shift_L(Up))}",
"THRA*/STP*/STPH-R": "{#Alt_L(Shift_L(Left))}",
"THRA*/STP*/TA*B": "{#Alt_L(Shift_L(Tab))}",
"THRA*/STP*/TKHRAO*ET": "{#Alt_L(Shift_L(Delete))}",
"THRA*/KPH*/STP*/A*": "{#Alt_L(Super_L(Shift_L(a)))}",
"THRA*/KPH*/STP*/PW*": "{#Alt_L(Super_L(Shift_L(b)))}",
"THRA*/KPH*/STP*/KR*": "{#Alt_L(Super_L(Shift_L(c)))}",
"THRA*/KPH*/STP*/TK*": "{#Alt_L(Super_L(Shift_L(d)))}",
"THRA*/KPH*/STP*/*E": "{#Alt_L(Super_L(Shift_L(e)))}",
"THRA*/KPH*/STP*/TP*": "{#Alt_L(Super_L(Shift_L(f)))}",
"THRA*/KPH*/STP*/TKPW*": "{#Alt_L(Super_L(Shift_L(g)))}",
"THRA*/KPH*/STP*/H*": "{#Alt_L(Super_L(Shift_L(h)))}",
"THRA*/KPH*/STP*/*EU": "{#Alt_L(Super_L(Shift_L(i)))}",
"THRA*/KPH*/STP*/SKWR*": "{#Alt_L(Super_L(Shift_L(j)))}",
"THRA*/KPH*/STP*/K*": "{#Alt_L(Super_L(Shift_L(k)))}",
"THRA*/KPH*/STP*/HR*": "{#Alt_L(Super_L(Shift_L(l)))}",
"THRA*/KPH*/STP*/PH*": "{#Alt_L(Super_L(Shift_L(m)))}",
"THRA*/KPH*/STP*/TPH*": "{#Alt_L(Super_L(Shift_L(n)))}",
"THRA*/KPH*/STP*/O*": "{#Alt_L(Super_L(Shift_L(o)))}",
"THRA*/KPH*/STP*/P*": "{#Alt_L(Super_L(Shift_L(p)))}",
"THRA*/KPH*/STP*/KW*": "{#Alt_L(Super_L(Shift_L(q)))}",
"THRA*/KPH*/STP*/R*": "{#Alt_L(Super_L(Shift_L(r)))}",
"THRA*/KPH*/STP*/S*": "{#Alt_L(Super_L(Shift_L(s)))}",
"THRA*/KPH*/STP*/T*": "{#Alt_L(Super_L(Shift_L(t)))}",
"THRA*/KPH*/STP*/*U": "{#Alt_L(Super_L(Shift_L(u)))}",
"THRA*/KPH*/STP*/SR*": "{#Alt_L(Super_L(Shift_L(v)))}",
"THRA*/KPH*/STP*/W*": "{#Alt_L(Super_L(Shift_L(w)))}",
"THRA*/KPH*/STP*/KP*": "{#Alt_L(Super_L(Shift_L(x)))}",
"THRA*/KPH*/STP*/KWR*": "{#Alt_L(Super_L(Shift_L(y)))}",
"THRA*/KPH*/STP*/STKPW*": "{#Alt_L(Super_L(Shift_L(z)))}",
"THRA*/KPH*/STP*/0": "{#Alt_L(Super_L(Shift_L(0)))}",
"THRA*/KPH*/STP*/1": "{#Alt_L(Super_L(Shift_L(1)))}",
"THRA*/KPH*/STP*/2": "{#Alt_L(Super_L(Shift_L(2)))}",
"THRA*/KPH*/STP*/3": "{#Alt_L(Super_L(Shift_L(3)))}",
"THRA*/KPH*/STP*/4": "{#Alt_L(Super_L(Shift_L(4)))}",
"THRA*/KPH*/STP*/5": "{#Alt_L(Super_L(Shift_L(5)))}",
"THRA*/KPH*/STP*/6": "{#Alt_L(Super_L(Shift_L(6)))}",
"THRA*/KPH*/STP*/7": "{#Alt_L(Super_L(Shift_L(7)))}",
"THRA*/KPH*/STP*/8": "{#Alt_L(Super_L(Shift_L(8)))}",
"THRA*/KPH*/STP*/9": "{#Alt_L(Super_L(Shift_L(9)))}",
"THRA*/KPH*/STP*/KH-FG": "{#Alt_L(Super_L(Shift_L(grave)))}",
"THRA*/KPH*/STP*/KW-BG": "{#Alt_L(Super_L(Shift_L(comma)))}",
"THRA*/KPH*/STP*/PR*EPB": "{#Alt_L(Super_L(Shift_L(parenright)))}",
"THRA*/KPH*/STP*/PREPB": "{#Alt_L(Super_L(Shift_L(parenleft)))}",
"THRA*/KPH*/STP*/PW*FP": "{#Alt_L(Super_L(Shift_L(BackSpace)))}",
"THRA*/KPH*/STP*/PWR*BGT": "{#Alt_L(Super_L(Shift_L(bracketright)))}",
"THRA*/KPH*/STP*/PWR-BGT": "{#Alt_L(Super_L(Shift_L(bracketleft)))}",
"THRA*/KPH*/STP*/R-R": "{#Alt_L(Super_L(Shift_L(Return)))}",
"THRA*/KPH*/STP*/S-P": "{#Alt_L(Super_L(Shift_L(space)))}",
"THRA*/KPH*/STP*/SP*S": "{#Alt_L(Super_L(Shift_L()))}",
"THRA*/KPH*/STP*/SPWHRAERB": "{#Alt_L(Super_L(Shift_L(backslash)))}",
"THRA*/KPH*/STP*/STPH-G": "{#Alt_L(Super_L(Shift_L(Right)))}",
"THRA*/KPH*/STP*/STPH-B": "{#Alt_L(Super_L(Shift_L(Down)))}",
"THRA*/KPH*/STP*/STPH-P": "{#Alt_L(Super_L(Shift_L(Up)))}",
"THRA*/KPH*/STP*/STPH-R": "{#Alt_L(Super_L(Shift_L(Left)))}",
"THRA*/KPH*/STP*/TA*B": "{#Alt_L(Super_L(Shift_L(Tab)))}",
"THRA*/KPH*/STP*/TKHRAO*ET": "{#Alt_L(Super_L(Shift_L(Delete)))}",
"THRA*/KPH*/A*": "{#Alt_L(Super_L(a))}",
"THRA*/KPH*/PW*": "{#Alt_L(Super_L(b))}",
"THRA*/KPH*/KR*": "{#Alt_L(Super_L(c))}",
"THRA*/KPH*/TK*": "{#Alt_L(Super_L(d))}",
"THRA*/KPH*/*E": "{#Alt_L(Super_L(e))}",
"THRA*/KPH*/TP*": "{#Alt_L(Super_L(f))}",
"THRA*/KPH*/TKPW*": "{#Alt_L(Super_L(g))}",
"THRA*/KPH*/H*": "{#Alt_L(Super_L(h))}",
"THRA*/KPH*/*EU": "{#Alt_L(Super_L(i))}",
"THRA*/KPH*/SKWR*": "{#Alt_L(Super_L(j))}",
"THRA*/KPH*/K*": "{#Alt_L(Super_L(k))}",
"THRA*/KPH*/HR*": "{#Alt_L(Super_L(l))}",
"THRA*/KPH*/PH*": "{#Alt_L(Super_L(m))}",
"THRA*/KPH*/TPH*": "{#Alt_L(Super_L(n))}",
"THRA*/KPH*/O*": "{#Alt_L(Super_L(o))}",
"THRA*/KPH*/P*": "{#Alt_L(Super_L(p))}",
"THRA*/KPH*/KW*": "{#Alt_L(Super_L(q))}",
"THRA*/KPH*/R*": "{#Alt_L(Super_L(r))}",
"THRA*/KPH*/S*": "{#Alt_L(Super_L(s))}",
"THRA*/KPH*/T*": "{#Alt_L(Super_L(t))}",
"THRA*/KPH*/*U": "{#Alt_L(Super_L(u))}",
"THRA*/KPH*/SR*": "{#Alt_L(Super_L(v))}",
"THRA*/KPH*/W*": "{#Alt_L(Super_L(w))}",
"THRA*/KPH*/KP*": "{#Alt_L(Super_L(x))}",
"THRA*/KPH*/KWR*": "{#Alt_L(Super_L(y))}",
"THRA*/KPH*/STKPW*": "{#Alt_L(Super_L(z))}",
"THRA*/KPH*/0": "{#Alt_L(Super_L(0))}",
"THRA*/KPH*/1": "{#Alt_L(Super_L(1))}",
"THRA*/KPH*/2": "{#Alt_L(Super_L(2))}",
"THRA*/KPH*/3": "{#Alt_L(Super_L(3))}",
"THRA*/KPH*/4": "{#Alt_L(Super_L(4))}",
"THRA*/KPH*/5": "{#Alt_L(Super_L(5))}",
"THRA*/KPH*/6": "{#Alt_L(Super_L(6))}",
"THRA*/KPH*/7": "{#Alt_L(Super_L(7))}",
"THRA*/KPH*/8": "{#Alt_L(Super_L(8))}",
"THRA*/KPH*/9": "{#Alt_L(Super_L(9))}",
"THRA*/KPH*/KH-FG": "{#Alt_L(Super_L(grave))}",
"THRA*/KPH*/KW-BG": "{#Alt_L(Super_L(comma))}",
"THRA*/KPH*/PR*EPB": "{#Alt_L(Super_L(parenright))}",
"THRA*/KPH*/PREPB": "{#Alt_L(Super_L(parenleft))}",
"THRA*/KPH*/PW*FP": "{#Alt_L(Super_L(BackSpace))}",
"THRA*/KPH*/PWR*BGT": "{#Alt_L(Super_L(bracketright))}",
"THRA*/KPH*/PWR-BGT": "{#Alt_L(Super_L(bracketleft))}",
"THRA*/KPH*/R-R": "{#Alt_L(Super_L(Return))}",
"THRA*/KPH*/S-P": "{#Alt_L(Super_L(space))}",
"THRA*/KPH*/SP*S": "{#Alt_L(Super_L())}",
"THRA*/KPH*/SPWHRAERB": "{#Alt_L(Super_L(backslash))}",
"THRA*/KPH*/STPH-G": "{#Alt_L(Super_L(Right))}",
"THRA*/KPH*/STPH-B": "{#Alt_L(Super_L(Down))}",
"THRA*/KPH*/STPH-P": "{#Alt_L(Super_L(Up))}",
"THRA*/KPH*/STPH-R": "{#Alt_L(Super_L(Left))}",
"THRA*/KPH*/TA*B": "{#Alt_L(Super_L(Tab))}",
"THRA*/KPH*/TKHRAO*ET": "{#Alt_L(Super_L(Delete))}",
"THRA*/STP*/KPH*/A*": "{#Alt_L(Shift_L(Super_L(a)))}",
"THRA*/STP*/KPH*/PW*": "{#Alt_L(Shift_L(Super_L(b)))}",
"THRA*/STP*/KPH*/KR*": "{#Alt_L(Shift_L(Super_L(c)))}",
"THRA*/STP*/KPH*/TK*": "{#Alt_L(Shift_L(Super_L(d)))}",
"THRA*/STP*/KPH*/*E": "{#Alt_L(Shift_L(Super_L(e)))}",
"THRA*/STP*/KPH*/TP*": "{#Alt_L(Shift_L(Super_L(f)))}",
"THRA*/STP*/KPH*/TKPW*": "{#Alt_L(Shift_L(Super_L(g)))}",
"THRA*/STP*/KPH*/H*": "{#Alt_L(Shift_L(Super_L(h)))}",
"THRA*/STP*/KPH*/*EU": "{#Alt_L(Shift_L(Super_L(i)))}",
"THRA*/STP*/KPH*/SKWR*": "{#Alt_L(Shift_L(Super_L(j)))}",
"THRA*/STP*/KPH*/K*": "{#Alt_L(Shift_L(Super_L(k)))}",
"THRA*/STP*/KPH*/HR*": "{#Alt_L(Shift_L(Super_L(l)))}",
"THRA*/STP*/KPH*/PH*": "{#Alt_L(Shift_L(Super_L(m)))}",
"THRA*/STP*/KPH*/TPH*": "{#Alt_L(Shift_L(Super_L(n)))}",
"THRA*/STP*/KPH*/O*": "{#Alt_L(Shift_L(Super_L(o)))}",
"THRA*/STP*/KPH*/P*": "{#Alt_L(Shift_L(Super_L(p)))}",
"THRA*/STP*/KPH*/KW*": "{#Alt_L(Shift_L(Super_L(q)))}",
"THRA*/STP*/KPH*/R*": "{#Alt_L(Shift_L(Super_L(r)))}",
"THRA*/STP*/KPH*/S*": "{#Alt_L(Shift_L(Super_L(s)))}",
"THRA*/STP*/KPH*/T*": "{#Alt_L(Shift_L(Super_L(t)))}",
"THRA*/STP*/KPH*/*U": "{#Alt_L(Shift_L(Super_L(u)))}",
"THRA*/STP*/KPH*/SR*": "{#Alt_L(Shift_L(Super_L(v)))}",
"THRA*/STP*/KPH*/W*": "{#Alt_L(Shift_L(Super_L(w)))}",
"THRA*/STP*/KPH*/KP*": "{#Alt_L(Shift_L(Super_L(x)))}",
"THRA*/STP*/KPH*/KWR*": "{#Alt_L(Shift_L(Super_L(y)))}",
"THRA*/STP*/KPH*/STKPW*": "{#Alt_L(Shift_L(Super_L(z)))}",
"THRA*/STP*/KPH*/0": "{#Alt_L(Shift_L(Super_L(0)))}",
"THRA*/STP*/KPH*/1": "{#Alt_L(Shift_L(Super_L(1)))}",
"THRA*/STP*/KPH*/2": "{#Alt_L(Shift_L(Super_L(2)))}",
"THRA*/STP*/KPH*/3": "{#Alt_L(Shift_L(Super_L(3)))}",
"THRA*/STP*/KPH*/4": "{#Alt_L(Shift_L(Super_L(4)))}",
"THRA*/STP*/KPH*/5": "{#Alt_L(Shift_L(Super_L(5)))}",
"THRA*/STP*/KPH*/6": "{#Alt_L(Shift_L(Super_L(6)))}",
"THRA*/STP*/KPH*/7": "{#Alt_L(Shift_L(Super_L(7)))}",
"THRA*/STP*/KPH*/8": "{#Alt_L(Shift_L(Super_L(8)))}",
"THRA*/STP*/KPH*/9": "{#Alt_L(Shift_L(Super_L(9)))}",
"THRA*/STP*/KPH*/KH-FG": "{#Alt_L(Shift_L(Super_L(grave)))}",
"THRA*/STP*/KPH*/KW-BG": "{#Alt_L(Shift_L(Super_L(comma)))}",
"THRA*/STP*/KPH*/PR*EPB": "{#Alt_L(Shift_L(Super_L(parenright)))}",
"THRA*/STP*/KPH*/PREPB": "{#Alt_L(Shift_L(Super_L(parenleft)))}",
"THRA*/STP*/KPH*/PW*FP": "{#Alt_L(Shift_L(Super_L(BackSpace)))}",
"THRA*/STP*/KPH*/PWR*BGT": "{#Alt_L(Shift_L(Super_L(bracketright)))}",
"THRA*/STP*/KPH*/PWR-BGT": "{#Alt_L(Shift_L(Super_L(bracketleft)))}",
"THRA*/STP*/KPH*/R-R": "{#Alt_L(Shift_L(Super_L(Return)))}",
"THRA*/STP*/KPH*/S-P": "{#Alt_L(Shift_L(Super_L(space)))}",
"THRA*/STP*/KPH*/SP*S": "{#Alt_L(Shift_L(Super_L()))}",
"THRA*/STP*/KPH*/SPWHRAERB": "{#Alt_L(Shift_L(Super_L(backslash)))}",
"THRA*/STP*/KPH*/STPH-G": "{#Alt_L(Shift_L(Super_L(Right)))}",
"THRA*/STP*/KPH*/STPH-B": "{#Alt_L(Shift_L(Super_L(Down)))}",
"THRA*/STP*/KPH*/STPH-P": "{#Alt_L(Shift_L(Super_L(Up)))}",
"THRA*/STP*/KPH*/STPH-R": "{#Alt_L(Shift_L(Super_L(Left)))}",
"THRA*/STP*/KPH*/TA*B": "{#Alt_L(Shift_L(Super_L(Tab)))}",
"THRA*/STP*/KPH*/TKHRAO*ET": "{#Alt_L(Shift_L(Super_L(Delete)))}",
"THRA*/KHR*/STP*/A*": "{#Alt_L(Control_L(Shift_L(a)))}",
"THRA*/KHR*/STP*/PW*": "{#Alt_L(Control_L(Shift_L(b)))}",
"THRA*/KHR*/STP*/KR*": "{#Alt_L(Control_L(Shift_L(c)))}",
"THRA*/KHR*/STP*/TK*": "{#Alt_L(Control_L(Shift_L(d)))}",
"THRA*/KHR*/STP*/*E": "{#Alt_L(Control_L(Shift_L(e)))}",
"THRA*/KHR*/STP*/TP*": "{#Alt_L(Control_L(Shift_L(f)))}",
"THRA*/KHR*/STP*/TKPW*": "{#Alt_L(Control_L(Shift_L(g)))}",
"THRA*/KHR*/STP*/H*": "{#Alt_L(Control_L(Shift_L(h)))}",
"THRA*/KHR*/STP*/*EU": "{#Alt_L(Control_L(Shift_L(i)))}",
"THRA*/KHR*/STP*/SKWR*": "{#Alt_L(Control_L(Shift_L(j)))}",
"THRA*/KHR*/STP*/K*": "{#Alt_L(Control_L(Shift_L(k)))}",
"THRA*/KHR*/STP*/HR*": "{#Alt_L(Control_L(Shift_L(l)))}",
"THRA*/KHR*/STP*/PH*": "{#Alt_L(Control_L(Shift_L(m)))}",
"THRA*/KHR*/STP*/TPH*": "{#Alt_L(Control_L(Shift_L(n)))}",
"THRA*/KHR*/STP*/O*": "{#Alt_L(Control_L(Shift_L(o)))}",
"THRA*/KHR*/STP*/P*": "{#Alt_L(Control_L(Shift_L(p)))}",
"THRA*/KHR*/STP*/KW*": "{#Alt_L(Control_L(Shift_L(q)))}",
"THRA*/KHR*/STP*/R*": "{#Alt_L(Control_L(Shift_L(r)))}",
"THRA*/KHR*/STP*/S*": "{#Alt_L(Control_L(Shift_L(s)))}",
"THRA*/KHR*/STP*/T*": "{#Alt_L(Control_L(Shift_L(t)))}",
"THRA*/KHR*/STP*/*U": "{#Alt_L(Control_L(Shift_L(u)))}",
"THRA*/KHR*/STP*/SR*": "{#Alt_L(Control_L(Shift_L(v)))}",
"THRA*/KHR*/STP*/W*": "{#Alt_L(Control_L(Shift_L(w)))}",
"THRA*/KHR*/STP*/KP*": "{#Alt_L(Control_L(Shift_L(x)))}",
"THRA*/KHR*/STP*/KWR*": "{#Alt_L(Control_L(Shift_L(y)))}",
"THRA*/KHR*/STP*/STKPW*": "{#Alt_L(Control_L(Shift_L(z)))}",
"THRA*/KHR*/STP*/0": "{#Alt_L(Control_L(Shift_L(0)))}",
"THRA*/KHR*/STP*/1": "{#Alt_L(Control_L(Shift_L(1)))}",
"THRA*/KHR*/STP*/2": "{#Alt_L(Control_L(Shift_L(2)))}",
"THRA*/KHR*/STP*/3": "{#Alt_L(Control_L(Shift_L(3)))}",
"THRA*/KHR*/STP*/4": "{#Alt_L(Control_L(Shift_L(4)))}",
"THRA*/KHR*/STP*/5": "{#Alt_L(Control_L(Shift_L(5)))}",
"THRA*/KHR*/STP*/6": "{#Alt_L(Control_L(Shift_L(6)))}",
"THRA*/KHR*/STP*/7": "{#Alt_L(Control_L(Shift_L(7)))}",
"THRA*/KHR*/STP*/8": "{#Alt_L(Control_L(Shift_L(8)))}",
"THRA*/KHR*/STP*/9": "{#Alt_L(Control_L(Shift_L(9)))}",
"THRA*/KHR*/STP*/KH-FG": "{#Alt_L(Control_L(Shift_L(grave)))}",
"THRA*/KHR*/STP*/KW-BG": "{#Alt_L(Control_L(Shift_L(comma)))}",
"THRA*/KHR*/STP*/PR*EPB": "{#Alt_L(Control_L(Shift_L(parenright)))}",
"THRA*/KHR*/STP*/PREPB": "{#Alt_L(Control_L(Shift_L(parenleft)))}",
"THRA*/KHR*/STP*/PW*FP": "{#Alt_L(Control_L(Shift_L(BackSpace)))}",
"THRA*/KHR*/STP*/PWR*BGT": "{#Alt_L(Control_L(Shift_L(bracketright)))}",
"THRA*/KHR*/STP*/PWR-BGT": "{#Alt_L(Control_L(Shift_L(bracketleft)))}",
"THRA*/KHR*/STP*/R-R": "{#Alt_L(Control_L(Shift_L(Return)))}",
"THRA*/KHR*/STP*/S-P": "{#Alt_L(Control_L(Shift_L(space)))}",
"THRA*/KHR*/STP*/SP*S": "{#Alt_L(Control_L(Shift_L()))}",
"THRA*/KHR*/STP*/SPWHRAERB": "{#Alt_L(Control_L(Shift_L(backslash)))}",
"THRA*/KHR*/STP*/STPH-G": "{#Alt_L(Control_L(Shift_L(Right)))}",
"THRA*/KHR*/STP*/STPH-B": "{#Alt_L(Control_L(Shift_L(Down)))}",
"THRA*/KHR*/STP*/STPH-P": "{#Alt_L(Control_L(Shift_L(Up)))}",
"THRA*/KHR*/STP*/STPH-R": "{#Alt_L(Control_L(Shift_L(Left)))}",
"THRA*/KHR*/STP*/TA*B": "{#Alt_L(Control_L(Shift_L(Tab)))}",
"THRA*/KHR*/STP*/TKHRAO*ET": "{#Alt_L(Control_L(Shift_L(Delete)))}",
"THRA*/KHR*/KPH*/STP*/A*": "{#Alt_L(Control_L(Super_L(Shift_L(a))))}",
"THRA*/KHR*/KPH*/STP*/PW*": "{#Alt_L(Control_L(Super_L(Shift_L(b))))}",
"THRA*/KHR*/KPH*/STP*/KR*": "{#Alt_L(Control_L(Super_L(Shift_L(c))))}",
"THRA*/KHR*/KPH*/STP*/TK*": "{#Alt_L(Control_L(Super_L(Shift_L(d))))}",
"THRA*/KHR*/KPH*/STP*/*E": "{#Alt_L(Control_L(Super_L(Shift_L(e))))}",
"THRA*/KHR*/KPH*/STP*/TP*": "{#Alt_L(Control_L(Super_L(Shift_L(f))))}",
"THRA*/KHR*/KPH*/STP*/TKPW*": "{#Alt_L(Control_L(Super_L(Shift_L(g))))}",
"THRA*/KHR*/KPH*/STP*/H*": "{#Alt_L(Control_L(Super_L(Shift_L(h))))}",
"THRA*/KHR*/KPH*/STP*/*EU": "{#Alt_L(Control_L(Super_L(Shift_L(i))))}",
"THRA*/KHR*/KPH*/STP*/SKWR*": "{#Alt_L(Control_L(Super_L(Shift_L(j))))}",
"THRA*/KHR*/KPH*/STP*/K*": "{#Alt_L(Control_L(Super_L(Shift_L(k))))}",
"THRA*/KHR*/KPH*/STP*/HR*": "{#Alt_L(Control_L(Super_L(Shift_L(l))))}",
"THRA*/KHR*/KPH*/STP*/PH*": "{#Alt_L(Control_L(Super_L(Shift_L(m))))}",
"THRA*/KHR*/KPH*/STP*/TPH*": "{#Alt_L(Control_L(Super_L(Shift_L(n))))}",
"THRA*/KHR*/KPH*/STP*/O*": "{#Alt_L(Control_L(Super_L(Shift_L(o))))}",
"THRA*/KHR*/KPH*/STP*/P*": "{#Alt_L(Control_L(Super_L(Shift_L(p))))}",
"THRA*/KHR*/KPH*/STP*/KW*": "{#Alt_L(Control_L(Super_L(Shift_L(q))))}",
"THRA*/KHR*/KPH*/STP*/R*": "{#Alt_L(Control_L(Super_L(Shift_L(r))))}",
"THRA*/KHR*/KPH*/STP*/S*": "{#Alt_L(Control_L(Super_L(Shift_L(s))))}",
"THRA*/KHR*/KPH*/STP*/T*": "{#Alt_L(Control_L(Super_L(Shift_L(t))))}",
"THRA*/KHR*/KPH*/STP*/*U": "{#Alt_L(Control_L(Super_L(Shift_L(u))))}",
"THRA*/KHR*/KPH*/STP*/SR*": "{#Alt_L(Control_L(Super_L(Shift_L(v))))}",
"THRA*/KHR*/KPH*/STP*/W*": "{#Alt_L(Control_L(Super_L(Shift_L(w))))}",
"THRA*/KHR*/KPH*/STP*/KP*": "{#Alt_L(Control_L(Super_L(Shift_L(x))))}",
"THRA*/KHR*/KPH*/STP*/KWR*": "{#Alt_L(Control_L(Super_L(Shift_L(y))))}",
"THRA*/KHR*/KPH*/STP*/STKPW*": "{#Alt_L(Control_L(Super_L(Shift_L(z))))}",
"THRA*/KHR*/KPH*/STP*/0": "{#Alt_L(Control_L(Super_L(Shift_L(0))))}",
"THRA*/KHR*/KPH*/STP*/1": "{#Alt_L(Control_L(Super_L(Shift_L(1))))}",
"THRA*/KHR*/KPH*/STP*/2": "{#Alt_L(Control_L(Super_L(Shift_L(2))))}",
"THRA*/KHR*/KPH*/STP*/3": "{#Alt_L(Control_L(Super_L(Shift_L(3))))}",
"THRA*/KHR*/KPH*/STP*/4": "{#Alt_L(Control_L(Super_L(Shift_L(4))))}",
"THRA*/KHR*/KPH*/STP*/5": "{#Alt_L(Control_L(Super_L(Shift_L(5))))}",
"THRA*/KHR*/KPH*/STP*/6": "{#Alt_L(Control_L(Super_L(Shift_L(6))))}",
"THRA*/KHR*/KPH*/STP*/7": "{#Alt_L(Control_L(Super_L(Shift_L(7))))}",
"THRA*/KHR*/KPH*/STP*/8": "{#Alt_L(Control_L(Super_L(Shift_L(8))))}",
"THRA*/KHR*/KPH*/STP*/9": "{#Alt_L(Control_L(Super_L(Shift_L(9))))}",
"THRA*/KHR*/KPH*/STP*/KH-FG": "{#Alt_L(Control_L(Super_L(Shift_L(grave))))}",
"THRA*/KHR*/KPH*/STP*/KW-BG": "{#Alt_L(Control_L(Super_L(Shift_L(comma))))}",
"THRA*/KHR*/KPH*/STP*/PR*EPB": "{#Alt_L(Control_L(Super_L(Shift_L(parenright))))}",
"THRA*/KHR*/KPH*/STP*/PREPB": "{#Alt_L(Control_L(Super_L(Shift_L(parenleft))))}",
"THRA*/KHR*/KPH*/STP*/PW*FP": "{#Alt_L(Control_L(Super_L(Shift_L(BackSpace))))}",
"THRA*/KHR*/KPH*/STP*/PWR*BGT": "{#Alt_L(Control_L(Super_L(Shift_L(bracketright))))}",
"THRA*/KHR*/KPH*/STP*/PWR-BGT": "{#Alt_L(Control_L(Super_L(Shift_L(bracketleft))))}",
"THRA*/KHR*/KPH*/STP*/R-R": "{#Alt_L(Control_L(Super_L(Shift_L(Return))))}",
"THRA*/KHR*/KPH*/STP*/S-P": "{#Alt_L(Control_L(Super_L(Shift_L(space))))}",
"THRA*/KHR*/KPH*/STP*/SP*S": "{#Alt_L(Control_L(Super_L(Shift_L())))}",
"THRA*/KHR*/KPH*/STP*/SPWHRAERB": "{#Alt_L(Control_L(Super_L(Shift_L(backslash))))}",
"THRA*/KHR*/KPH*/STP*/STPH-G": "{#Alt_L(Control_L(Super_L(Shift_L(Right))))}",
"THRA*/KHR*/KPH*/STP*/STPH-B": "{#Alt_L(Control_L(Super_L(Shift_L(Down))))}",
"THRA*/KHR*/KPH*/STP*/STPH-P": "{#Alt_L(Control_L(Super_L(Shift_L(Up))))}",
"THRA*/KHR*/KPH*/STP*/STPH-R": "{#Alt_L(Control_L(Super_L(Shift_L(Left))))}",
"THRA*/KHR*/KPH*/STP*/TA*B": "{#Alt_L(Control_L(Super_L(Shift_L(Tab))))}",
"THRA*/KHR*/KPH*/STP*/TKHRAO*ET": "{#Alt_L(Control_L(Super_L(Shift_L(Delete))))}",
"THRA*/KHR*/KPH*/A*": "{#Alt_L(Control_L(Super_L(a)))}",
"THRA*/KHR*/KPH*/PW*": "{#Alt_L(Control_L(Super_L(b)))}",
"THRA*/KHR*/KPH*/KR*": "{#Alt_L(Control_L(Super_L(c)))}",
"THRA*/KHR*/KPH*/TK*": "{#Alt_L(Control_L(Super_L(d)))}",
"THRA*/KHR*/KPH*/*E": "{#Alt_L(Control_L(Super_L(e)))}",
"THRA*/KHR*/KPH*/TP*": "{#Alt_L(Control_L(Super_L(f)))}",
"THRA*/KHR*/KPH*/TKPW*": "{#Alt_L(Control_L(Super_L(g)))}",
"THRA*/KHR*/KPH*/H*": "{#Alt_L(Control_L(Super_L(h)))}",
"THRA*/KHR*/KPH*/*EU": "{#Alt_L(Control_L(Super_L(i)))}",
"THRA*/KHR*/KPH*/SKWR*": "{#Alt_L(Control_L(Super_L(j)))}",
"THRA*/KHR*/KPH*/K*": "{#Alt_L(Control_L(Super_L(k)))}",
"THRA*/KHR*/KPH*/HR*": "{#Alt_L(Control_L(Super_L(l)))}",
"THRA*/KHR*/KPH*/PH*": "{#Alt_L(Control_L(Super_L(m)))}",
"THRA*/KHR*/KPH*/TPH*": "{#Alt_L(Control_L(Super_L(n)))}",
"THRA*/KHR*/KPH*/O*": "{#Alt_L(Control_L(Super_L(o)))}",
"THRA*/KHR*/KPH*/P*": "{#Alt_L(Control_L(Super_L(p)))}",
"THRA*/KHR*/KPH*/KW*": "{#Alt_L(Control_L(Super_L(q)))}",
"THRA*/KHR*/KPH*/R*": "{#Alt_L(Control_L(Super_L(r)))}",
"THRA*/KHR*/KPH*/S*": "{#Alt_L(Control_L(Super_L(s)))}",
"THRA*/KHR*/KPH*/T*": "{#Alt_L(Control_L(Super_L(t)))}",
"THRA*/KHR*/KPH*/*U": "{#Alt_L(Control_L(Super_L(u)))}",
"THRA*/KHR*/KPH*/SR*": "{#Alt_L(Control_L(Super_L(v)))}",
"THRA*/KHR*/KPH*/W*": "{#Alt_L(Control_L(Super_L(w)))}",
"THRA*/KHR*/KPH*/KP*": "{#Alt_L(Control_L(Super_L(x)))}",
"THRA*/KHR*/KPH*/KWR*": "{#Alt_L(Control_L(Super_L(y)))}",
"THRA*/KHR*/KPH*/STKPW*": "{#Alt_L(Control_L(Super_L(z)))}",
"THRA*/KHR*/KPH*/0": "{#Alt_L(Control_L(Super_L(0)))}",
"THRA*/KHR*/KPH*/1": "{#Alt_L(Control_L(Super_L(1)))}",
"THRA*/KHR*/KPH*/2": "{#Alt_L(Control_L(Super_L(2)))}",
"THRA*/KHR*/KPH*/3": "{#Alt_L(Control_L(Super_L(3)))}",
"THRA*/KHR*/KPH*/4": "{#Alt_L(Control_L(Super_L(4)))}",
"THRA*/KHR*/KPH*/5": "{#Alt_L(Control_L(Super_L(5)))}",
"THRA*/KHR*/KPH*/6": "{#Alt_L(Control_L(Super_L(6)))}",
"THRA*/KHR*/KPH*/7": "{#Alt_L(Control_L(Super_L(7)))}",
"THRA*/KHR*/KPH*/8": "{#Alt_L(Control_L(Super_L(8)))}",
"THRA*/KHR*/KPH*/9": "{#Alt_L(Control_L(Super_L(9)))}",
"THRA*/KHR*/KPH*/KH-FG": "{#Alt_L(Control_L(Super_L(grave)))}",
"THRA*/KHR*/KPH*/KW-BG": "{#Alt_L(Control_L(Super_L(comma)))}",
"THRA*/KHR*/KPH*/PR*EPB": "{#Alt_L(Control_L(Super_L(parenright)))}",
"THRA*/KHR*/KPH*/PREPB": "{#Alt_L(Control_L(Super_L(parenleft)))}",
"THRA*/KHR*/KPH*/PW*FP": "{#Alt_L(Control_L(Super_L(BackSpace)))}",
"THRA*/KHR*/KPH*/PWR*BGT": "{#Alt_L(Control_L(Super_L(bracketright)))}",
"THRA*/KHR*/KPH*/PWR-BGT": "{#Alt_L(Control_L(Super_L(bracketleft)))}",
"THRA*/KHR*/KPH*/R-R": "{#Alt_L(Control_L(Super_L(Return)))}",
"THRA*/KHR*/KPH*/S-P": "{#Alt_L(Control_L(Super_L(space)))}",
"THRA*/KHR*/KPH*/SP*S": "{#Alt_L(Control_L(Super_L()))}",
"THRA*/KHR*/KPH*/SPWHRAERB": "{#Alt_L(Control_L(Super_L(backslash)))}",
"THRA*/KHR*/KPH*/STPH-G": "{#Alt_L(Control_L(Super_L(Right)))}",
"THRA*/KHR*/KPH*/STPH-B": "{#Alt_L(Control_L(Super_L(Down)))}",
"THRA*/KHR*/KPH*/STPH-P": "{#Alt_L(Control_L(Super_L(Up)))}",
"THRA*/KHR*/KPH*/STPH-R": "{#Alt_L(Control_L(Super_L(Left)))}",
"THRA*/KHR*/KPH*/TA*B": "{#Alt_L(Control_L(Super_L(Tab)))}",
"THRA*/KHR*/KPH*/TKHRAO*ET": "{#Alt_L(Control_L(Super_L(Delete)))}",
"THRA*/KHR*/STP*/KPH*/A*": "{#Alt_L(Control_L(Shift_L(Super_L(a))))}",
"THRA*/KHR*/STP*/KPH*/PW*": "{#Alt_L(Control_L(Shift_L(Super_L(b))))}",
"THRA*/KHR*/STP*/KPH*/KR*": "{#Alt_L(Control_L(Shift_L(Super_L(c))))}",
"THRA*/KHR*/STP*/KPH*/TK*": "{#Alt_L(Control_L(Shift_L(Super_L(d))))}",
"THRA*/KHR*/STP*/KPH*/*E": "{#Alt_L(Control_L(Shift_L(Super_L(e))))}",
"THRA*/KHR*/STP*/KPH*/TP*": "{#Alt_L(Control_L(Shift_L(Super_L(f))))}",
"THRA*/KHR*/STP*/KPH*/TKPW*": "{#Alt_L(Control_L(Shift_L(Super_L(g))))}",
"THRA*/KHR*/STP*/KPH*/H*": "{#Alt_L(Control_L(Shift_L(Super_L(h))))}",
"THRA*/KHR*/STP*/KPH*/*EU": "{#Alt_L(Control_L(Shift_L(Super_L(i))))}",
"THRA*/KHR*/STP*/KPH*/SKWR*": "{#Alt_L(Control_L(Shift_L(Super_L(j))))}",
"THRA*/KHR*/STP*/KPH*/K*": "{#Alt_L(Control_L(Shift_L(Super_L(k))))}",
"THRA*/KHR*/STP*/KPH*/HR*": "{#Alt_L(Control_L(Shift_L(Super_L(l))))}",
"THRA*/KHR*/STP*/KPH*/PH*": "{#Alt_L(Control_L(Shift_L(Super_L(m))))}",
"THRA*/KHR*/STP*/KPH*/TPH*": "{#Alt_L(Control_L(Shift_L(Super_L(n))))}",
"THRA*/KHR*/STP*/KPH*/O*": "{#Alt_L(Control_L(Shift_L(Super_L(o))))}",
"THRA*/KHR*/STP*/KPH*/P*": "{#Alt_L(Control_L(Shift_L(Super_L(p))))}",
"THRA*/KHR*/STP*/KPH*/KW*": "{#Alt_L(Control_L(Shift_L(Super_L(q))))}",
"THRA*/KHR*/STP*/KPH*/R*": "{#Alt_L(Control_L(Shift_L(Super_L(r))))}",
"THRA*/KHR*/STP*/KPH*/S*": "{#Alt_L(Control_L(Shift_L(Super_L(s))))}",
"THRA*/KHR*/STP*/KPH*/T*": "{#Alt_L(Control_L(Shift_L(Super_L(t))))}",
"THRA*/KHR*/STP*/KPH*/*U": "{#Alt_L(Control_L(Shift_L(Super_L(u))))}",
"THRA*/KHR*/STP*/KPH*/SR*": "{#Alt_L(Control_L(Shift_L(Super_L(v))))}",
"THRA*/KHR*/STP*/KPH*/W*": "{#Alt_L(Control_L(Shift_L(Super_L(w))))}",
"THRA*/KHR*/STP*/KPH*/KP*": "{#Alt_L(Control_L(Shift_L(Super_L(x))))}",
"THRA*/KHR*/STP*/KPH*/KWR*": "{#Alt_L(Control_L(Shift_L(Super_L(y))))}",
"THRA*/KHR*/STP*/KPH*/STKPW*": "{#Alt_L(Control_L(Shift_L(Super_L(z))))}",
"THRA*/KHR*/STP*/KPH*/0": "{#Alt_L(Control_L(Shift_L(Super_L(0))))}",
"THRA*/KHR*/STP*/KPH*/1": "{#Alt_L(Control_L(Shift_L(Super_L(1))))}",
"THRA*/KHR*/STP*/KPH*/2": "{#Alt_L(Control_L(Shift_L(Super_L(2))))}",
"THRA*/KHR*/STP*/KPH*/3": "{#Alt_L(Control_L(Shift_L(Super_L(3))))}",
"THRA*/KHR*/STP*/KPH*/4": "{#Alt_L(Control_L(Shift_L(Super_L(4))))}",
"THRA*/KHR*/STP*/KPH*/5": "{#Alt_L(Control_L(Shift_L(Super_L(5))))}",
"THRA*/KHR*/STP*/KPH*/6": "{#Alt_L(Control_L(Shift_L(Super_L(6))))}",
"THRA*/KHR*/STP*/KPH*/7": "{#Alt_L(Control_L(Shift_L(Super_L(7))))}",
"THRA*/KHR*/STP*/KPH*/8": "{#Alt_L(Control_L(Shift_L(Super_L(8))))}",
"THRA*/KHR*/STP*/KPH*/9": "{#Alt_L(Control_L(Shift_L(Super_L(9))))}",
"THRA*/KHR*/STP*/KPH*/KH-FG": "{#Alt_L(Control_L(Shift_L(Super_L(grave))))}",
"THRA*/KHR*/STP*/KPH*/KW-BG": "{#Alt_L(Control_L(Shift_L(Super_L(comma))))}",
"THRA*/KHR*/STP*/KPH*/PR*EPB": "{#Alt_L(Control_L(Shift_L(Super_L(parenright))))}",
"THRA*/KHR*/STP*/KPH*/PREPB": "{#Alt_L(Control_L(Shift_L(Super_L(parenleft))))}",
"THRA*/KHR*/STP*/KPH*/PW*FP": "{#Alt_L(Control_L(Shift_L(Super_L(BackSpace))))}",
"THRA*/KHR*/STP*/KPH*/PWR*BGT": "{#Alt_L(Control_L(Shift_L(Super_L(bracketright))))}",
"THRA*/KHR*/STP*/KPH*/PWR-BGT": "{#Alt_L(Control_L(Shift_L(Super_L(bracketleft))))}",
"THRA*/KHR*/STP*/KPH*/R-R": "{#Alt_L(Control_L(Shift_L(Super_L(Return))))}",
"THRA*/KHR*/STP*/KPH*/S-P": "{#Alt_L(Control_L(Shift_L(Super_L(space))))}",
"THRA*/KHR*/STP*/KPH*/SP*S": "{#Alt_L(Control_L(Shift_L(Super_L())))}",
"THRA*/KHR*/STP*/KPH*/SPWHRAERB": "{#Alt_L(Control_L(Shift_L(Super_L(backslash))))}",
"THRA*/KHR*/STP*/KPH*/STPH-G": "{#Alt_L(Control_L(Shift_L(Super_L(Right))))}",
"THRA*/KHR*/STP*/KPH*/STPH-B": "{#Alt_L(Control_L(Shift_L(Super_L(Down))))}",
"THRA*/KHR*/STP*/KPH*/STPH-P": "{#Alt_L(Control_L(Shift_L(Super_L(Up))))}",
"THRA*/KHR*/STP*/KPH*/STPH-R": "{#Alt_L(Control_L(Shift_L(Super_L(Left))))}",
"THRA*/KHR*/STP*/KPH*/TA*B": "{#Alt_L(Control_L(Shift_L(Super_L(Tab))))}",
"THRA*/KHR*/STP*/KPH*/TKHRAO*ET": "{#Alt_L(Control_L(Shift_L(Super_L(Delete))))}",
"THRA*/STP*/A*": "{#Alt_L(Shift_L(a))}",
"THRA*/STP*/PW*": "{#Alt_L(Shift_L(b))}",
"THRA*/STP*/KR*": "{#Alt_L(Shift_L(c))}",
"THRA*/STP*/TK*": "{#Alt_L(Shift_L(d))}",
"THRA*/STP*/*E": "{#Alt_L(Shift_L(e))}",
"THRA*/STP*/TP*": "{#Alt_L(Shift_L(f))}",
"THRA*/STP*/TKPW*": "{#Alt_L(Shift_L(g))}",
"THRA*/STP*/H*": "{#Alt_L(Shift_L(h))}",
"THRA*/STP*/*EU": "{#Alt_L(Shift_L(i))}",
"THRA*/STP*/SKWR*": "{#Alt_L(Shift_L(j))}",
"THRA*/STP*/K*": "{#Alt_L(Shift_L(k))}",
"THRA*/STP*/HR*": "{#Alt_L(Shift_L(l))}",
"THRA*/STP*/PH*": "{#Alt_L(Shift_L(m))}",
"THRA*/STP*/TPH*": "{#Alt_L(Shift_L(n))}",
"THRA*/STP*/O*": "{#Alt_L(Shift_L(o))}",
"THRA*/STP*/P*": "{#Alt_L(Shift_L(p))}",
"THRA*/STP*/KW*": "{#Alt_L(Shift_L(q))}",
"THRA*/STP*/R*": "{#Alt_L(Shift_L(r))}",
"THRA*/STP*/S*": "{#Alt_L(Shift_L(s))}",
"THRA*/STP*/T*": "{#Alt_L(Shift_L(t))}",
"THRA*/STP*/*U": "{#Alt_L(Shift_L(u))}",
"THRA*/STP*/SR*": "{#Alt_L(Shift_L(v))}",
"THRA*/STP*/W*": "{#Alt_L(Shift_L(w))}",
"THRA*/STP*/KP*": "{#Alt_L(Shift_L(x))}",
"THRA*/STP*/KWR*": "{#Alt_L(Shift_L(y))}",
"THRA*/STP*/STKPW*": "{#Alt_L(Shift_L(z))}",
"THRA*/STP*/0": "{#Alt_L(Shift_L(0))}",
"THRA*/STP*/1": "{#Alt_L(Shift_L(1))}",
"THRA*/STP*/2": "{#Alt_L(Shift_L(2))}",
"THRA*/STP*/3": "{#Alt_L(Shift_L(3))}",
"THRA*/STP*/4": "{#Alt_L(Shift_L(4))}",
"THRA*/STP*/5": "{#Alt_L(Shift_L(5))}",
"THRA*/STP*/6": "{#Alt_L(Shift_L(6))}",
"THRA*/STP*/7": "{#Alt_L(Shift_L(7))}",
"THRA*/STP*/8": "{#Alt_L(Shift_L(8))}",
"THRA*/STP*/9": "{#Alt_L(Shift_L(9))}",
"THRA*/STP*/KH-FG": "{#Alt_L(Shift_L(grave))}",
"THRA*/STP*/KW-BG": "{#Alt_L(Shift_L(comma))}",
"THRA*/STP*/PR*EPB": "{#Alt_L(Shift_L(parenright))}",
"THRA*/STP*/PREPB": "{#Alt_L(Shift_L(parenleft))}",
"THRA*/STP*/PW*FP": "{#Alt_L(Shift_L(BackSpace))}",
"THRA*/STP*/PWR*BGT": "{#Alt_L(Shift_L(bracketright))}",
"THRA*/STP*/PWR-BGT": "{#Alt_L(Shift_L(bracketleft))}",
"THRA*/STP*/R-R": "{#Alt_L(Shift_L(Return))}",
"THRA*/STP*/S-P": "{#Alt_L(Shift_L(space))}",
"THRA*/STP*/SP*S": "{#Alt_L(Shift_L())}",
"THRA*/STP*/SPWHRAERB": "{#Alt_L(Shift_L(backslash))}",
"THRA*/STP*/STPH-G": "{#Alt_L(Shift_L(Right))}",
"THRA*/STP*/STPH-B": "{#Alt_L(Shift_L(Down))}",
"THRA*/STP*/STPH-P": "{#Alt_L(Shift_L(Up))}",
"THRA*/STP*/STPH-R": "{#Alt_L(Shift_L(Left))}",
"THRA*/STP*/TA*B": "{#Alt_L(Shift_L(Tab))}",
"THRA*/STP*/TKHRAO*ET": "{#Alt_L(Shift_L(Delete))}",
"THRA*/KHR*/STP*/A*": "{#Alt_L(Control_L(Shift_L(a)))}",
"THRA*/KHR*/STP*/PW*": "{#Alt_L(Control_L(Shift_L(b)))}",
"THRA*/KHR*/STP*/KR*": "{#Alt_L(Control_L(Shift_L(c)))}",
"THRA*/KHR*/STP*/TK*": "{#Alt_L(Control_L(Shift_L(d)))}",
"THRA*/KHR*/STP*/*E": "{#Alt_L(Control_L(Shift_L(e)))}",
"THRA*/KHR*/STP*/TP*": "{#Alt_L(Control_L(Shift_L(f)))}",
"THRA*/KHR*/STP*/TKPW*": "{#Alt_L(Control_L(Shift_L(g)))}",
"THRA*/KHR*/STP*/H*": "{#Alt_L(Control_L(Shift_L(h)))}",
"THRA*/KHR*/STP*/*EU": "{#Alt_L(Control_L(Shift_L(i)))}",
"THRA*/KHR*/STP*/SKWR*": "{#Alt_L(Control_L(Shift_L(j)))}",
"THRA*/KHR*/STP*/K*": "{#Alt_L(Control_L(Shift_L(k)))}",
"THRA*/KHR*/STP*/HR*": "{#Alt_L(Control_L(Shift_L(l)))}",
"THRA*/KHR*/STP*/PH*": "{#Alt_L(Control_L(Shift_L(m)))}",
"THRA*/KHR*/STP*/TPH*": "{#Alt_L(Control_L(Shift_L(n)))}",
"THRA*/KHR*/STP*/O*": "{#Alt_L(Control_L(Shift_L(o)))}",
"THRA*/KHR*/STP*/P*": "{#Alt_L(Control_L(Shift_L(p)))}",
"THRA*/KHR*/STP*/KW*": "{#Alt_L(Control_L(Shift_L(q)))}",
"THRA*/KHR*/STP*/R*": "{#Alt_L(Control_L(Shift_L(r)))}",
"THRA*/KHR*/STP*/S*": "{#Alt_L(Control_L(Shift_L(s)))}",
"THRA*/KHR*/STP*/T*": "{#Alt_L(Control_L(Shift_L(t)))}",
"THRA*/KHR*/STP*/*U": "{#Alt_L(Control_L(Shift_L(u)))}",
"THRA*/KHR*/STP*/SR*": "{#Alt_L(Control_L(Shift_L(v)))}",
"THRA*/KHR*/STP*/W*": "{#Alt_L(Control_L(Shift_L(w)))}",
"THRA*/KHR*/STP*/KP*": "{#Alt_L(Control_L(Shift_L(x)))}",
"THRA*/KHR*/STP*/KWR*": "{#Alt_L(Control_L(Shift_L(y)))}",
"THRA*/KHR*/STP*/STKPW*": "{#Alt_L(Control_L(Shift_L(z)))}",
"THRA*/KHR*/STP*/0": "{#Alt_L(Control_L(Shift_L(0)))}",
"THRA*/KHR*/STP*/1": "{#Alt_L(Control_L(Shift_L(1)))}",
"THRA*/KHR*/STP*/2": "{#Alt_L(Control_L(Shift_L(2)))}",
"THRA*/KHR*/STP*/3": "{#Alt_L(Control_L(Shift_L(3)))}",
"THRA*/KHR*/STP*/4": "{#Alt_L(Control_L(Shift_L(4)))}",
"THRA*/KHR*/STP*/5": "{#Alt_L(Control_L(Shift_L(5)))}",
"THRA*/KHR*/STP*/6": "{#Alt_L(Control_L(Shift_L(6)))}",
"THRA*/KHR*/STP*/7": "{#Alt_L(Control_L(Shift_L(7)))}",
"THRA*/KHR*/STP*/8": "{#Alt_L(Control_L(Shift_L(8)))}",
"THRA*/KHR*/STP*/9": "{#Alt_L(Control_L(Shift_L(9)))}",
"THRA*/KHR*/STP*/KH-FG": "{#Alt_L(Control_L(Shift_L(grave)))}",
"THRA*/KHR*/STP*/KW-BG": "{#Alt_L(Control_L(Shift_L(comma)))}",
"THRA*/KHR*/STP*/PR*EPB": "{#Alt_L(Control_L(Shift_L(parenright)))}",
"THRA*/KHR*/STP*/PREPB": "{#Alt_L(Control_L(Shift_L(parenleft)))}",
"THRA*/KHR*/STP*/PW*FP": "{#Alt_L(Control_L(Shift_L(BackSpace)))}",
"THRA*/KHR*/STP*/PWR*BGT": "{#Alt_L(Control_L(Shift_L(bracketright)))}",
"THRA*/KHR*/STP*/PWR-BGT": "{#Alt_L(Control_L(Shift_L(bracketleft)))}",
"THRA*/KHR*/STP*/R-R": "{#Alt_L(Control_L(Shift_L(Return)))}",
"THRA*/KHR*/STP*/S-P": "{#Alt_L(Control_L(Shift_L(space)))}",
"THRA*/KHR*/STP*/SP*S": "{#Alt_L(Control_L(Shift_L()))}",
"THRA*/KHR*/STP*/SPWHRAERB": "{#Alt_L(Control_L(Shift_L(backslash)))}",
"THRA*/KHR*/STP*/STPH-G": "{#Alt_L(Control_L(Shift_L(Right)))}",
"THRA*/KHR*/STP*/STPH-B": "{#Alt_L(Control_L(Shift_L(Down)))}",
"THRA*/KHR*/STP*/STPH-P": "{#Alt_L(Control_L(Shift_L(Up)))}",
"THRA*/KHR*/STP*/STPH-R": "{#Alt_L(Control_L(Shift_L(Left)))}",
"THRA*/KHR*/STP*/TA*B": "{#Alt_L(Control_L(Shift_L(Tab)))}",
"THRA*/KHR*/STP*/TKHRAO*ET": "{#Alt_L(Control_L(Shift_L(Delete)))}",
"THRA*/KHR*/A*": "{#Alt_L(Control_L(a))}",
"THRA*/KHR*/PW*": "{#Alt_L(Control_L(b))}",
"THRA*/KHR*/KR*": "{#Alt_L(Control_L(c))}",
"THRA*/KHR*/TK*": "{#Alt_L(Control_L(d))}",
"THRA*/KHR*/*E": "{#Alt_L(Control_L(e))}",
"THRA*/KHR*/TP*": "{#Alt_L(Control_L(f))}",
"THRA*/KHR*/TKPW*": "{#Alt_L(Control_L(g))}",
"THRA*/KHR*/H*": "{#Alt_L(Control_L(h))}",
"THRA*/KHR*/*EU": "{#Alt_L(Control_L(i))}",
"THRA*/KHR*/SKWR*": "{#Alt_L(Control_L(j))}",
"THRA*/KHR*/K*": "{#Alt_L(Control_L(k))}",
"THRA*/KHR*/HR*": "{#Alt_L(Control_L(l))}",
"THRA*/KHR*/PH*": "{#Alt_L(Control_L(m))}",
"THRA*/KHR*/TPH*": "{#Alt_L(Control_L(n))}",
"THRA*/KHR*/O*": "{#Alt_L(Control_L(o))}",
"THRA*/KHR*/P*": "{#Alt_L(Control_L(p))}",
"THRA*/KHR*/KW*": "{#Alt_L(Control_L(q))}",
"THRA*/KHR*/R*": "{#Alt_L(Control_L(r))}",
"THRA*/KHR*/S*": "{#Alt_L(Control_L(s))}",
"THRA*/KHR*/T*": "{#Alt_L(Control_L(t))}",
"THRA*/KHR*/*U": "{#Alt_L(Control_L(u))}",
"THRA*/KHR*/SR*": "{#Alt_L(Control_L(v))}",
"THRA*/KHR*/W*": "{#Alt_L(Control_L(w))}",
"THRA*/KHR*/KP*": "{#Alt_L(Control_L(x))}",
"THRA*/KHR*/KWR*": "{#Alt_L(Control_L(y))}",
"THRA*/KHR*/STKPW*": "{#Alt_L(Control_L(z))}",
"THRA*/KHR*/0": "{#Alt_L(Control_L(0))}",
"THRA*/KHR*/1": "{#Alt_L(Control_L(1))}",
"THRA*/KHR*/2": "{#Alt_L(Control_L(2))}",
"THRA*/KHR*/3": "{#Alt_L(Control_L(3))}",
"THRA*/KHR*/4": "{#Alt_L(Control_L(4))}",
"THRA*/KHR*/5": "{#Alt_L(Control_L(5))}",
"THRA*/KHR*/6": "{#Alt_L(Control_L(6))}",
"THRA*/KHR*/7": "{#Alt_L(Control_L(7))}",
"THRA*/KHR*/8": "{#Alt_L(Control_L(8))}",
"THRA*/KHR*/9": "{#Alt_L(Control_L(9))}",
"THRA*/KHR*/KH-FG": "{#Alt_L(Control_L(grave))}",
"THRA*/KHR*/KW-BG": "{#Alt_L(Control_L(comma))}",
"THRA*/KHR*/PR*EPB": "{#Alt_L(Control_L(parenright))}",
"THRA*/KHR*/PREPB": "{#Alt_L(Control_L(parenleft))}",
"THRA*/KHR*/PW*FP": "{#Alt_L(Control_L(BackSpace))}",
"THRA*/KHR*/PWR*BGT": "{#Alt_L(Control_L(bracketright))}",
"THRA*/KHR*/PWR-BGT": "{#Alt_L(Control_L(bracketleft))}",
"THRA*/KHR*/R-R": "{#Alt_L(Control_L(Return))}",
"THRA*/KHR*/S-P": "{#Alt_L(Control_L(space))}",
"THRA*/KHR*/SP*S": "{#Alt_L(Control_L())}",
"THRA*/KHR*/SPWHRAERB": "{#Alt_L(Control_L(backslash))}",
"THRA*/KHR*/STPH-G": "{#Alt_L(Control_L(Right))}",
"THRA*/KHR*/STPH-B": "{#Alt_L(Control_L(Down))}",
"THRA*/KHR*/STPH-P": "{#Alt_L(Control_L(Up))}",
"THRA*/KHR*/STPH-R": "{#Alt_L(Control_L(Left))}",
"THRA*/KHR*/TA*B": "{#Alt_L(Control_L(Tab))}",
"THRA*/KHR*/TKHRAO*ET": "{#Alt_L(Control_L(Delete))}",
"THRA*/STP*/KHR*/A*": "{#Alt_L(Shift_L(Control_L(a)))}",
"THRA*/STP*/KHR*/PW*": "{#Alt_L(Shift_L(Control_L(b)))}",
"THRA*/STP*/KHR*/KR*": "{#Alt_L(Shift_L(Control_L(c)))}",
"THRA*/STP*/KHR*/TK*": "{#Alt_L(Shift_L(Control_L(d)))}",
"THRA*/STP*/KHR*/*E": "{#Alt_L(Shift_L(Control_L(e)))}",
"THRA*/STP*/KHR*/TP*": "{#Alt_L(Shift_L(Control_L(f)))}",
"THRA*/STP*/KHR*/TKPW*": "{#Alt_L(Shift_L(Control_L(g)))}",
"THRA*/STP*/KHR*/H*": "{#Alt_L(Shift_L(Control_L(h)))}",
"THRA*/STP*/KHR*/*EU": "{#Alt_L(Shift_L(Control_L(i)))}",
"THRA*/STP*/KHR*/SKWR*": "{#Alt_L(Shift_L(Control_L(j)))}",
"THRA*/STP*/KHR*/K*": "{#Alt_L(Shift_L(Control_L(k)))}",
"THRA*/STP*/KHR*/HR*": "{#Alt_L(Shift_L(Control_L(l)))}",
"THRA*/STP*/KHR*/PH*": "{#Alt_L(Shift_L(Control_L(m)))}",
"THRA*/STP*/KHR*/TPH*": "{#Alt_L(Shift_L(Control_L(n)))}",
"THRA*/STP*/KHR*/O*": "{#Alt_L(Shift_L(Control_L(o)))}",
"THRA*/STP*/KHR*/P*": "{#Alt_L(Shift_L(Control_L(p)))}",
"THRA*/STP*/KHR*/KW*": "{#Alt_L(Shift_L(Control_L(q)))}",
"THRA*/STP*/KHR*/R*": "{#Alt_L(Shift_L(Control_L(r)))}",
"THRA*/STP*/KHR*/S*": "{#Alt_L(Shift_L(Control_L(s)))}",
"THRA*/STP*/KHR*/T*": "{#Alt_L(Shift_L(Control_L(t)))}",
"THRA*/STP*/KHR*/*U": "{#Alt_L(Shift_L(Control_L(u)))}",
"THRA*/STP*/KHR*/SR*": "{#Alt_L(Shift_L(Control_L(v)))}",
"THRA*/STP*/KHR*/W*": "{#Alt_L(Shift_L(Control_L(w)))}",
"THRA*/STP*/KHR*/KP*": "{#Alt_L(Shift_L(Control_L(x)))}",
"THRA*/STP*/KHR*/KWR*": "{#Alt_L(Shift_L(Control_L(y)))}",
"THRA*/STP*/KHR*/STKPW*": "{#Alt_L(Shift_L(Control_L(z)))}",
"THRA*/STP*/KHR*/0": "{#Alt_L(Shift_L(Control_L(0)))}",
"THRA*/STP*/KHR*/1": "{#Alt_L(Shift_L(Control_L(1)))}",
"THRA*/STP*/KHR*/2": "{#Alt_L(Shift_L(Control_L(2)))}",
"THRA*/STP*/KHR*/3": "{#Alt_L(Shift_L(Control_L(3)))}",
"THRA*/STP*/KHR*/4": "{#Alt_L(Shift_L(Control_L(4)))}",
"THRA*/STP*/KHR*/5": "{#Alt_L(Shift_L(Control_L(5)))}",
"THRA*/STP*/KHR*/6": "{#Alt_L(Shift_L(Control_L(6)))}",
"THRA*/STP*/KHR*/7": "{#Alt_L(Shift_L(Control_L(7)))}",
"THRA*/STP*/KHR*/8": "{#Alt_L(Shift_L(Control_L(8)))}",
"THRA*/STP*/KHR*/9": "{#Alt_L(Shift_L(Control_L(9)))}",
"THRA*/STP*/KHR*/KH-FG": "{#Alt_L(Shift_L(Control_L(grave)))}",
"THRA*/STP*/KHR*/KW-BG": "{#Alt_L(Shift_L(Control_L(comma)))}",
"THRA*/STP*/KHR*/PR*EPB": "{#Alt_L(Shift_L(Control_L(parenright)))}",
"THRA*/STP*/KHR*/PREPB": "{#Alt_L(Shift_L(Control_L(parenleft)))}",
"THRA*/STP*/KHR*/PW*FP": "{#Alt_L(Shift_L(Control_L(BackSpace)))}",
"THRA*/STP*/KHR*/PWR*BGT": "{#Alt_L(Shift_L(Control_L(bracketright)))}",
"THRA*/STP*/KHR*/PWR-BGT": "{#Alt_L(Shift_L(Control_L(bracketleft)))}",
"THRA*/STP*/KHR*/R-R": "{#Alt_L(Shift_L(Control_L(Return)))}",
"THRA*/STP*/KHR*/S-P": "{#Alt_L(Shift_L(Control_L(space)))}",
"THRA*/STP*/KHR*/SP*S": "{#Alt_L(Shift_L(Control_L()))}",
"THRA*/STP*/KHR*/SPWHRAERB": "{#Alt_L(Shift_L(Control_L(backslash)))}",
"THRA*/STP*/KHR*/STPH-G": "{#Alt_L(Shift_L(Control_L(Right)))}",
"THRA*/STP*/KHR*/STPH-B": "{#Alt_L(Shift_L(Control_L(Down)))}",
"THRA*/STP*/KHR*/STPH-P": "{#Alt_L(Shift_L(Control_L(Up)))}",
"THRA*/STP*/KHR*/STPH-R": "{#Alt_L(Shift_L(Control_L(Left)))}",
"THRA*/STP*/KHR*/TA*B": "{#Alt_L(Shift_L(Control_L(Tab)))}",
"THRA*/STP*/KHR*/TKHRAO*ET": "{#Alt_L(Shift_L(Control_L(Delete)))}",
"THRA*/KPH*/STP*/A*": "{#Alt_L(Super_L(Shift_L(a)))}",
"THRA*/KPH*/STP*/PW*": "{#Alt_L(Super_L(Shift_L(b)))}",
"THRA*/KPH*/STP*/KR*": "{#Alt_L(Super_L(Shift_L(c)))}",
"THRA*/KPH*/STP*/TK*": "{#Alt_L(Super_L(Shift_L(d)))}",
"THRA*/KPH*/STP*/*E": "{#Alt_L(Super_L(Shift_L(e)))}",
"THRA*/KPH*/STP*/TP*": "{#Alt_L(Super_L(Shift_L(f)))}",
"THRA*/KPH*/STP*/TKPW*": "{#Alt_L(Super_L(Shift_L(g)))}",
"THRA*/KPH*/STP*/H*": "{#Alt_L(Super_L(Shift_L(h)))}",
"THRA*/KPH*/STP*/*EU": "{#Alt_L(Super_L(Shift_L(i)))}",
"THRA*/KPH*/STP*/SKWR*": "{#Alt_L(Super_L(Shift_L(j)))}",
"THRA*/KPH*/STP*/K*": "{#Alt_L(Super_L(Shift_L(k)))}",
"THRA*/KPH*/STP*/HR*": "{#Alt_L(Super_L(Shift_L(l)))}",
"THRA*/KPH*/STP*/PH*": "{#Alt_L(Super_L(Shift_L(m)))}",
"THRA*/KPH*/STP*/TPH*": "{#Alt_L(Super_L(Shift_L(n)))}",
"THRA*/KPH*/STP*/O*": "{#Alt_L(Super_L(Shift_L(o)))}",
"THRA*/KPH*/STP*/P*": "{#Alt_L(Super_L(Shift_L(p)))}",
"THRA*/KPH*/STP*/KW*": "{#Alt_L(Super_L(Shift_L(q)))}",
"THRA*/KPH*/STP*/R*": "{#Alt_L(Super_L(Shift_L(r)))}",
"THRA*/KPH*/STP*/S*": "{#Alt_L(Super_L(Shift_L(s)))}",
"THRA*/KPH*/STP*/T*": "{#Alt_L(Super_L(Shift_L(t)))}",
"THRA*/KPH*/STP*/*U": "{#Alt_L(Super_L(Shift_L(u)))}",
"THRA*/KPH*/STP*/SR*": "{#Alt_L(Super_L(Shift_L(v)))}",
"THRA*/KPH*/STP*/W*": "{#Alt_L(Super_L(Shift_L(w)))}",
"THRA*/KPH*/STP*/KP*": "{#Alt_L(Super_L(Shift_L(x)))}",
"THRA*/KPH*/STP*/KWR*": "{#Alt_L(Super_L(Shift_L(y)))}",
"THRA*/KPH*/STP*/STKPW*": "{#Alt_L(Super_L(Shift_L(z)))}",
"THRA*/KPH*/STP*/0": "{#Alt_L(Super_L(Shift_L(0)))}",
"THRA*/KPH*/STP*/1": "{#Alt_L(Super_L(Shift_L(1)))}",
"THRA*/KPH*/STP*/2": "{#Alt_L(Super_L(Shift_L(2)))}",
"THRA*/KPH*/STP*/3": "{#Alt_L(Super_L(Shift_L(3)))}",
"THRA*/KPH*/STP*/4": "{#Alt_L(Super_L(Shift_L(4)))}",
"THRA*/KPH*/STP*/5": "{#Alt_L(Super_L(Shift_L(5)))}",
"THRA*/KPH*/STP*/6": "{#Alt_L(Super_L(Shift_L(6)))}",
"THRA*/KPH*/STP*/7": "{#Alt_L(Super_L(Shift_L(7)))}",
"THRA*/KPH*/STP*/8": "{#Alt_L(Super_L(Shift_L(8)))}",
"THRA*/KPH*/STP*/9": "{#Alt_L(Super_L(Shift_L(9)))}",
"THRA*/KPH*/STP*/KH-FG": "{#Alt_L(Super_L(Shift_L(grave)))}",
"THRA*/KPH*/STP*/KW-BG": "{#Alt_L(Super_L(Shift_L(comma)))}",
"THRA*/KPH*/STP*/PR*EPB": "{#Alt_L(Super_L(Shift_L(parenright)))}",
"THRA*/KPH*/STP*/PREPB": "{#Alt_L(Super_L(Shift_L(parenleft)))}",
"THRA*/KPH*/STP*/PW*FP": "{#Alt_L(Super_L(Shift_L(BackSpace)))}",
"THRA*/KPH*/STP*/PWR*BGT": "{#Alt_L(Super_L(Shift_L(bracketright)))}",
"THRA*/KPH*/STP*/PWR-BGT": "{#Alt_L(Super_L(Shift_L(bracketleft)))}",
"THRA*/KPH*/STP*/R-R": "{#Alt_L(Super_L(Shift_L(Return)))}",
"THRA*/KPH*/STP*/S-P": "{#Alt_L(Super_L(Shift_L(space)))}",
"THRA*/KPH*/STP*/SP*S": "{#Alt_L(Super_L(Shift_L()))}",
"THRA*/KPH*/STP*/SPWHRAERB": "{#Alt_L(Super_L(Shift_L(backslash)))}",
"THRA*/KPH*/STP*/STPH-G": "{#Alt_L(Super_L(Shift_L(Right)))}",
"THRA*/KPH*/STP*/STPH-B": "{#Alt_L(Super_L(Shift_L(Down)))}",
"THRA*/KPH*/STP*/STPH-P": "{#Alt_L(Super_L(Shift_L(Up)))}",
"THRA*/KPH*/STP*/STPH-R": "{#Alt_L(Super_L(Shift_L(Left)))}",
"THRA*/KPH*/STP*/TA*B": "{#Alt_L(Super_L(Shift_L(Tab)))}",
"THRA*/KPH*/STP*/TKHRAO*ET": "{#Alt_L(Super_L(Shift_L(Delete)))}",
"THRA*/KPH*/KHR*/STP*/A*": "{#Alt_L(Super_L(Control_L(Shift_L(a))))}",
"THRA*/KPH*/KHR*/STP*/PW*": "{#Alt_L(Super_L(Control_L(Shift_L(b))))}",
"THRA*/KPH*/KHR*/STP*/KR*": "{#Alt_L(Super_L(Control_L(Shift_L(c))))}",
"THRA*/KPH*/KHR*/STP*/TK*": "{#Alt_L(Super_L(Control_L(Shift_L(d))))}",
"THRA*/KPH*/KHR*/STP*/*E": "{#Alt_L(Super_L(Control_L(Shift_L(e))))}",
"THRA*/KPH*/KHR*/STP*/TP*": "{#Alt_L(Super_L(Control_L(Shift_L(f))))}",
"THRA*/KPH*/KHR*/STP*/TKPW*": "{#Alt_L(Super_L(Control_L(Shift_L(g))))}",
"THRA*/KPH*/KHR*/STP*/H*": "{#Alt_L(Super_L(Control_L(Shift_L(h))))}",
"THRA*/KPH*/KHR*/STP*/*EU": "{#Alt_L(Super_L(Control_L(Shift_L(i))))}",
"THRA*/KPH*/KHR*/STP*/SKWR*": "{#Alt_L(Super_L(Control_L(Shift_L(j))))}",
"THRA*/KPH*/KHR*/STP*/K*": "{#Alt_L(Super_L(Control_L(Shift_L(k))))}",
"THRA*/KPH*/KHR*/STP*/HR*": "{#Alt_L(Super_L(Control_L(Shift_L(l))))}",
"THRA*/KPH*/KHR*/STP*/PH*": "{#Alt_L(Super_L(Control_L(Shift_L(m))))}",
"THRA*/KPH*/KHR*/STP*/TPH*": "{#Alt_L(Super_L(Control_L(Shift_L(n))))}",
"THRA*/KPH*/KHR*/STP*/O*": "{#Alt_L(Super_L(Control_L(Shift_L(o))))}",
"THRA*/KPH*/KHR*/STP*/P*": "{#Alt_L(Super_L(Control_L(Shift_L(p))))}",
"THRA*/KPH*/KHR*/STP*/KW*": "{#Alt_L(Super_L(Control_L(Shift_L(q))))}",
"THRA*/KPH*/KHR*/STP*/R*": "{#Alt_L(Super_L(Control_L(Shift_L(r))))}",
"THRA*/KPH*/KHR*/STP*/S*": "{#Alt_L(Super_L(Control_L(Shift_L(s))))}",
"THRA*/KPH*/KHR*/STP*/T*": "{#Alt_L(Super_L(Control_L(Shift_L(t))))}",
"THRA*/KPH*/KHR*/STP*/*U": "{#Alt_L(Super_L(Control_L(Shift_L(u))))}",
"THRA*/KPH*/KHR*/STP*/SR*": "{#Alt_L(Super_L(Control_L(Shift_L(v))))}",
"THRA*/KPH*/KHR*/STP*/W*": "{#Alt_L(Super_L(Control_L(Shift_L(w))))}",
"THRA*/KPH*/KHR*/STP*/KP*": "{#Alt_L(Super_L(Control_L(Shift_L(x))))}",
"THRA*/KPH*/KHR*/STP*/KWR*": "{#Alt_L(Super_L(Control_L(Shift_L(y))))}",
"THRA*/KPH*/KHR*/STP*/STKPW*": "{#Alt_L(Super_L(Control_L(Shift_L(z))))}",
"THRA*/KPH*/KHR*/STP*/0": "{#Alt_L(Super_L(Control_L(Shift_L(0))))}",
"THRA*/KPH*/KHR*/STP*/1": "{#Alt_L(Super_L(Control_L(Shift_L(1))))}",
"THRA*/KPH*/KHR*/STP*/2": "{#Alt_L(Super_L(Control_L(Shift_L(2))))}",
"THRA*/KPH*/KHR*/STP*/3": "{#Alt_L(Super_L(Control_L(Shift_L(3))))}",
"THRA*/KPH*/KHR*/STP*/4": "{#Alt_L(Super_L(Control_L(Shift_L(4))))}",
"THRA*/KPH*/KHR*/STP*/5": "{#Alt_L(Super_L(Control_L(Shift_L(5))))}",
"THRA*/KPH*/KHR*/STP*/6": "{#Alt_L(Super_L(Control_L(Shift_L(6))))}",
"THRA*/KPH*/KHR*/STP*/7": "{#Alt_L(Super_L(Control_L(Shift_L(7))))}",
"THRA*/KPH*/KHR*/STP*/8": "{#Alt_L(Super_L(Control_L(Shift_L(8))))}",
"THRA*/KPH*/KHR*/STP*/9": "{#Alt_L(Super_L(Control_L(Shift_L(9))))}",
"THRA*/KPH*/KHR*/STP*/KH-FG": "{#Alt_L(Super_L(Control_L(Shift_L(grave))))}",
"THRA*/KPH*/KHR*/STP*/KW-BG": "{#Alt_L(Super_L(Control_L(Shift_L(comma))))}",
"THRA*/KPH*/KHR*/STP*/PR*EPB": "{#Alt_L(Super_L(Control_L(Shift_L(parenright))))}",
"THRA*/KPH*/KHR*/STP*/PREPB": "{#Alt_L(Super_L(Control_L(Shift_L(parenleft))))}",
"THRA*/KPH*/KHR*/STP*/PW*FP": "{#Alt_L(Super_L(Control_L(Shift_L(BackSpace))))}",
"THRA*/KPH*/KHR*/STP*/PWR*BGT": "{#Alt_L(Super_L(Control_L(Shift_L(bracketright))))}",
"THRA*/KPH*/KHR*/STP*/PWR-BGT": "{#Alt_L(Super_L(Control_L(Shift_L(bracketleft))))}",
"THRA*/KPH*/KHR*/STP*/R-R": "{#Alt_L(Super_L(Control_L(Shift_L(Return))))}",
"THRA*/KPH*/KHR*/STP*/S-P": "{#Alt_L(Super_L(Control_L(Shift_L(space))))}",
"THRA*/KPH*/KHR*/STP*/SP*S": "{#Alt_L(Super_L(Control_L(Shift_L())))}",
"THRA*/KPH*/KHR*/STP*/SPWHRAERB": "{#Alt_L(Super_L(Control_L(Shift_L(backslash))))}",
"THRA*/KPH*/KHR*/STP*/STPH-G": "{#Alt_L(Super_L(Control_L(Shift_L(Right))))}",
"THRA*/KPH*/KHR*/STP*/STPH-B": "{#Alt_L(Super_L(Control_L(Shift_L(Down))))}",
"THRA*/KPH*/KHR*/STP*/STPH-P": "{#Alt_L(Super_L(Control_L(Shift_L(Up))))}",
"THRA*/KPH*/KHR*/STP*/STPH-R": "{#Alt_L(Super_L(Control_L(Shift_L(Left))))}",
"THRA*/KPH*/KHR*/STP*/TA*B": "{#Alt_L(Super_L(Control_L(Shift_L(Tab))))}",
"THRA*/KPH*/KHR*/STP*/TKHRAO*ET": "{#Alt_L(Super_L(Control_L(Shift_L(Delete))))}",
"THRA*/KPH*/KHR*/A*": "{#Alt_L(Super_L(Control_L(a)))}",
"THRA*/KPH*/KHR*/PW*": "{#Alt_L(Super_L(Control_L(b)))}",
"THRA*/KPH*/KHR*/KR*": "{#Alt_L(Super_L(Control_L(c)))}",
"THRA*/KPH*/KHR*/TK*": "{#Alt_L(Super_L(Control_L(d)))}",
"THRA*/KPH*/KHR*/*E": "{#Alt_L(Super_L(Control_L(e)))}",
"THRA*/KPH*/KHR*/TP*": "{#Alt_L(Super_L(Control_L(f)))}",
"THRA*/KPH*/KHR*/TKPW*": "{#Alt_L(Super_L(Control_L(g)))}",
"THRA*/KPH*/KHR*/H*": "{#Alt_L(Super_L(Control_L(h)))}",
"THRA*/KPH*/KHR*/*EU": "{#Alt_L(Super_L(Control_L(i)))}",
"THRA*/KPH*/KHR*/SKWR*": "{#Alt_L(Super_L(Control_L(j)))}",
"THRA*/KPH*/KHR*/K*": "{#Alt_L(Super_L(Control_L(k)))}",
"THRA*/KPH*/KHR*/HR*": "{#Alt_L(Super_L(Control_L(l)))}",
"THRA*/KPH*/KHR*/PH*": "{#Alt_L(Super_L(Control_L(m)))}",
"THRA*/KPH*/KHR*/TPH*": "{#Alt_L(Super_L(Control_L(n)))}",
"THRA*/KPH*/KHR*/O*": "{#Alt_L(Super_L(Control_L(o)))}",
"THRA*/KPH*/KHR*/P*": "{#Alt_L(Super_L(Control_L(p)))}",
"THRA*/KPH*/KHR*/KW*": "{#Alt_L(Super_L(Control_L(q)))}",
"THRA*/KPH*/KHR*/R*": "{#Alt_L(Super_L(Control_L(r)))}",
"THRA*/KPH*/KHR*/S*": "{#Alt_L(Super_L(Control_L(s)))}",
"THRA*/KPH*/KHR*/T*": "{#Alt_L(Super_L(Control_L(t)))}",
"THRA*/KPH*/KHR*/*U": "{#Alt_L(Super_L(Control_L(u)))}",
"THRA*/KPH*/KHR*/SR*": "{#Alt_L(Super_L(Control_L(v)))}",
"THRA*/KPH*/KHR*/W*": "{#Alt_L(Super_L(Control_L(w)))}",
"THRA*/KPH*/KHR*/KP*": "{#Alt_L(Super_L(Control_L(x)))}",
"THRA*/KPH*/KHR*/KWR*": "{#Alt_L(Super_L(Control_L(y)))}",
"THRA*/KPH*/KHR*/STKPW*": "{#Alt_L(Super_L(Control_L(z)))}",
"THRA*/KPH*/KHR*/0": "{#Alt_L(Super_L(Control_L(0)))}",
"THRA*/KPH*/KHR*/1": "{#Alt_L(Super_L(Control_L(1)))}",
"THRA*/KPH*/KHR*/2": "{#Alt_L(Super_L(Control_L(2)))}",
"THRA*/KPH*/KHR*/3": "{#Alt_L(Super_L(Control_L(3)))}",
"THRA*/KPH*/KHR*/4": "{#Alt_L(Super_L(Control_L(4)))}",
"THRA*/KPH*/KHR*/5": "{#Alt_L(Super_L(Control_L(5)))}",
"THRA*/KPH*/KHR*/6": "{#Alt_L(Super_L(Control_L(6)))}",
"THRA*/KPH*/KHR*/7": "{#Alt_L(Super_L(Control_L(7)))}",
"THRA*/KPH*/KHR*/8": "{#Alt_L(Super_L(Control_L(8)))}",
"THRA*/KPH*/KHR*/9": "{#Alt_L(Super_L(Control_L(9)))}",
"THRA*/KPH*/KHR*/KH-FG": "{#Alt_L(Super_L(Control_L(grave)))}",
"THRA*/KPH*/KHR*/KW-BG": "{#Alt_L(Super_L(Control_L(comma)))}",
"THRA*/KPH*/KHR*/PR*EPB": "{#Alt_L(Super_L(Control_L(parenright)))}",
"THRA*/KPH*/KHR*/PREPB": "{#Alt_L(Super_L(Control_L(parenleft)))}",
"THRA*/KPH*/KHR*/PW*FP": "{#Alt_L(Super_L(Control_L(BackSpace)))}",
"THRA*/KPH*/KHR*/PWR*BGT": "{#Alt_L(Super_L(Control_L(bracketright)))}",
"THRA*/KPH*/KHR*/PWR-BGT": "{#Alt_L(Super_L(Control_L(bracketleft)))}",
"THRA*/KPH*/KHR*/R-R": "{#Alt_L(Super_L(Control_L(Return)))}",
"THRA*/KPH*/KHR*/S-P": "{#Alt_L(Super_L(Control_L(space)))}",
"THRA*/KPH*/KHR*/SP*S": "{#Alt_L(Super_L(Control_L()))}",
"THRA*/KPH*/KHR*/SPWHRAERB": "{#Alt_L(Super_L(Control_L(backslash)))}",
"THRA*/KPH*/KHR*/STPH-G": "{#Alt_L(Super_L(Control_L(Right)))}",
"THRA*/KPH*/KHR*/STPH-B": "{#Alt_L(Super_L(Control_L(Down)))}",
"THRA*/KPH*/KHR*/STPH-P": "{#Alt_L(Super_L(Control_L(Up)))}",
"THRA*/KPH*/KHR*/STPH-R": "{#Alt_L(Super_L(Control_L(Left)))}",
"THRA*/KPH*/KHR*/TA*B": "{#Alt_L(Super_L(Control_L(Tab)))}",
"THRA*/KPH*/KHR*/TKHRAO*ET": "{#Alt_L(Super_L(Control_L(Delete)))}",
"THRA*/KPH*/STP*/KHR*/A*": "{#Alt_L(Super_L(Shift_L(Control_L(a))))}",
"THRA*/KPH*/STP*/KHR*/PW*": "{#Alt_L(Super_L(Shift_L(Control_L(b))))}",
"THRA*/KPH*/STP*/KHR*/KR*": "{#Alt_L(Super_L(Shift_L(Control_L(c))))}",
"THRA*/KPH*/STP*/KHR*/TK*": "{#Alt_L(Super_L(Shift_L(Control_L(d))))}",
"THRA*/KPH*/STP*/KHR*/*E": "{#Alt_L(Super_L(Shift_L(Control_L(e))))}",
"THRA*/KPH*/STP*/KHR*/TP*": "{#Alt_L(Super_L(Shift_L(Control_L(f))))}",
"THRA*/KPH*/STP*/KHR*/TKPW*": "{#Alt_L(Super_L(Shift_L(Control_L(g))))}",
"THRA*/KPH*/STP*/KHR*/H*": "{#Alt_L(Super_L(Shift_L(Control_L(h))))}",
"THRA*/KPH*/STP*/KHR*/*EU": "{#Alt_L(Super_L(Shift_L(Control_L(i))))}",
"THRA*/KPH*/STP*/KHR*/SKWR*": "{#Alt_L(Super_L(Shift_L(Control_L(j))))}",
"THRA*/KPH*/STP*/KHR*/K*": "{#Alt_L(Super_L(Shift_L(Control_L(k))))}",
"THRA*/KPH*/STP*/KHR*/HR*": "{#Alt_L(Super_L(Shift_L(Control_L(l))))}",
"THRA*/KPH*/STP*/KHR*/PH*": "{#Alt_L(Super_L(Shift_L(Control_L(m))))}",
"THRA*/KPH*/STP*/KHR*/TPH*": "{#Alt_L(Super_L(Shift_L(Control_L(n))))}",
"THRA*/KPH*/STP*/KHR*/O*": "{#Alt_L(Super_L(Shift_L(Control_L(o))))}",
"THRA*/KPH*/STP*/KHR*/P*": "{#Alt_L(Super_L(Shift_L(Control_L(p))))}",
"THRA*/KPH*/STP*/KHR*/KW*": "{#Alt_L(Super_L(Shift_L(Control_L(q))))}",
"THRA*/KPH*/STP*/KHR*/R*": "{#Alt_L(Super_L(Shift_L(Control_L(r))))}",
"THRA*/KPH*/STP*/KHR*/S*": "{#Alt_L(Super_L(Shift_L(Control_L(s))))}",
"THRA*/KPH*/STP*/KHR*/T*": "{#Alt_L(Super_L(Shift_L(Control_L(t))))}",
"THRA*/KPH*/STP*/KHR*/*U": "{#Alt_L(Super_L(Shift_L(Control_L(u))))}",
"THRA*/KPH*/STP*/KHR*/SR*": "{#Alt_L(Super_L(Shift_L(Control_L(v))))}",
"THRA*/KPH*/STP*/KHR*/W*": "{#Alt_L(Super_L(Shift_L(Control_L(w))))}",
"THRA*/KPH*/STP*/KHR*/KP*": "{#Alt_L(Super_L(Shift_L(Control_L(x))))}",
"THRA*/KPH*/STP*/KHR*/KWR*": "{#Alt_L(Super_L(Shift_L(Control_L(y))))}",
"THRA*/KPH*/STP*/KHR*/STKPW*": "{#Alt_L(Super_L(Shift_L(Control_L(z))))}",
"THRA*/KPH*/STP*/KHR*/0": "{#Alt_L(Super_L(Shift_L(Control_L(0))))}",
"THRA*/KPH*/STP*/KHR*/1": "{#Alt_L(Super_L(Shift_L(Control_L(1))))}",
"THRA*/KPH*/STP*/KHR*/2": "{#Alt_L(Super_L(Shift_L(Control_L(2))))}",
"THRA*/KPH*/STP*/KHR*/3": "{#Alt_L(Super_L(Shift_L(Control_L(3))))}",
"THRA*/KPH*/STP*/KHR*/4": "{#Alt_L(Super_L(Shift_L(Control_L(4))))}",
"THRA*/KPH*/STP*/KHR*/5": "{#Alt_L(Super_L(Shift_L(Control_L(5))))}",
"THRA*/KPH*/STP*/KHR*/6": "{#Alt_L(Super_L(Shift_L(Control_L(6))))}",
"THRA*/KPH*/STP*/KHR*/7": "{#Alt_L(Super_L(Shift_L(Control_L(7))))}",
"THRA*/KPH*/STP*/KHR*/8": "{#Alt_L(Super_L(Shift_L(Control_L(8))))}",
"THRA*/KPH*/STP*/KHR*/9": "{#Alt_L(Super_L(Shift_L(Control_L(9))))}",
"THRA*/KPH*/STP*/KHR*/KH-FG": "{#Alt_L(Super_L(Shift_L(Control_L(grave))))}",
"THRA*/KPH*/STP*/KHR*/KW-BG": "{#Alt_L(Super_L(Shift_L(Control_L(comma))))}",
"THRA*/KPH*/STP*/KHR*/PR*EPB": "{#Alt_L(Super_L(Shift_L(Control_L(parenright))))}",
"THRA*/KPH*/STP*/KHR*/PREPB": "{#Alt_L(Super_L(Shift_L(Control_L(parenleft))))}",
"THRA*/KPH*/STP*/KHR*/PW*FP": "{#Alt_L(Super_L(Shift_L(Control_L(BackSpace))))}",
"THRA*/KPH*/STP*/KHR*/PWR*BGT": "{#Alt_L(Super_L(Shift_L(Control_L(bracketright))))}",
"THRA*/KPH*/STP*/KHR*/PWR-BGT": "{#Alt_L(Super_L(Shift_L(Control_L(bracketleft))))}",
"THRA*/KPH*/STP*/KHR*/R-R": "{#Alt_L(Super_L(Shift_L(Control_L(Return))))}",
"THRA*/KPH*/STP*/KHR*/S-P": "{#Alt_L(Super_L(Shift_L(Control_L(space))))}",
"THRA*/KPH*/STP*/KHR*/SP*S": "{#Alt_L(Super_L(Shift_L(Control_L())))}",
"THRA*/KPH*/STP*/KHR*/SPWHRAERB": "{#Alt_L(Super_L(Shift_L(Control_L(backslash))))}",
"THRA*/KPH*/STP*/KHR*/STPH-G": "{#Alt_L(Super_L(Shift_L(Control_L(Right))))}",
"THRA*/KPH*/STP*/KHR*/STPH-B": "{#Alt_L(Super_L(Shift_L(Control_L(Down))))}",
"THRA*/KPH*/STP*/KHR*/STPH-P": "{#Alt_L(Super_L(Shift_L(Control_L(Up))))}",
"THRA*/KPH*/STP*/KHR*/STPH-R": "{#Alt_L(Super_L(Shift_L(Control_L(Left))))}",
"THRA*/KPH*/STP*/KHR*/TA*B": "{#Alt_L(Super_L(Shift_L(Control_L(Tab))))}",
"THRA*/KPH*/STP*/KHR*/TKHRAO*ET": "{#Alt_L(Super_L(Shift_L(Control_L(Delete))))}",
"THRA*/KPH*/A*": "{#Alt_L(Super_L(a))}",
"THRA*/KPH*/PW*": "{#Alt_L(Super_L(b))}",
"THRA*/KPH*/KR*": "{#Alt_L(Super_L(c))}",
"THRA*/KPH*/TK*": "{#Alt_L(Super_L(d))}",
"THRA*/KPH*/*E": "{#Alt_L(Super_L(e))}",
"THRA*/KPH*/TP*": "{#Alt_L(Super_L(f))}",
"THRA*/KPH*/TKPW*": "{#Alt_L(Super_L(g))}",
"THRA*/KPH*/H*": "{#Alt_L(Super_L(h))}",
"THRA*/KPH*/*EU": "{#Alt_L(Super_L(i))}",
"THRA*/KPH*/SKWR*": "{#Alt_L(Super_L(j))}",
"THRA*/KPH*/K*": "{#Alt_L(Super_L(k))}",
"THRA*/KPH*/HR*": "{#Alt_L(Super_L(l))}",
"THRA*/KPH*/PH*": "{#Alt_L(Super_L(m))}",
"THRA*/KPH*/TPH*": "{#Alt_L(Super_L(n))}",
"THRA*/KPH*/O*": "{#Alt_L(Super_L(o))}",
"THRA*/KPH*/P*": "{#Alt_L(Super_L(p))}",
"THRA*/KPH*/KW*": "{#Alt_L(Super_L(q))}",
"THRA*/KPH*/R*": "{#Alt_L(Super_L(r))}",
"THRA*/KPH*/S*": "{#Alt_L(Super_L(s))}",
"THRA*/KPH*/T*": "{#Alt_L(Super_L(t))}",
"THRA*/KPH*/*U": "{#Alt_L(Super_L(u))}",
"THRA*/KPH*/SR*": "{#Alt_L(Super_L(v))}",
"THRA*/KPH*/W*": "{#Alt_L(Super_L(w))}",
"THRA*/KPH*/KP*": "{#Alt_L(Super_L(x))}",
"THRA*/KPH*/KWR*": "{#Alt_L(Super_L(y))}",
"THRA*/KPH*/STKPW*": "{#Alt_L(Super_L(z))}",
"THRA*/KPH*/0": "{#Alt_L(Super_L(0))}",
"THRA*/KPH*/1": "{#Alt_L(Super_L(1))}",
"THRA*/KPH*/2": "{#Alt_L(Super_L(2))}",
"THRA*/KPH*/3": "{#Alt_L(Super_L(3))}",
"THRA*/KPH*/4": "{#Alt_L(Super_L(4))}",
"THRA*/KPH*/5": "{#Alt_L(Super_L(5))}",
"THRA*/KPH*/6": "{#Alt_L(Super_L(6))}",
"THRA*/KPH*/7": "{#Alt_L(Super_L(7))}",
"THRA*/KPH*/8": "{#Alt_L(Super_L(8))}",
"THRA*/KPH*/9": "{#Alt_L(Super_L(9))}",
"THRA*/KPH*/KH-FG": "{#Alt_L(Super_L(grave))}",
"THRA*/KPH*/KW-BG": "{#Alt_L(Super_L(comma))}",
"THRA*/KPH*/PR*EPB": "{#Alt_L(Super_L(parenright))}",
"THRA*/KPH*/PREPB": "{#Alt_L(Super_L(parenleft))}",
"THRA*/KPH*/PW*FP": "{#Alt_L(Super_L(BackSpace))}",
"THRA*/KPH*/PWR*BGT": "{#Alt_L(Super_L(bracketright))}",
"THRA*/KPH*/PWR-BGT": "{#Alt_L(Super_L(bracketleft))}",
"THRA*/KPH*/R-R": "{#Alt_L(Super_L(Return))}",
"THRA*/KPH*/S-P": "{#Alt_L(Super_L(space))}",
"THRA*/KPH*/SP*S": "{#Alt_L(Super_L())}",
"THRA*/KPH*/SPWHRAERB": "{#Alt_L(Super_L(backslash))}",
"THRA*/KPH*/STPH-G": "{#Alt_L(Super_L(Right))}",
"THRA*/KPH*/STPH-B": "{#Alt_L(Super_L(Down))}",
"THRA*/KPH*/STPH-P": "{#Alt_L(Super_L(Up))}",
"THRA*/KPH*/STPH-R": "{#Alt_L(Super_L(Left))}",
"THRA*/KPH*/TA*B": "{#Alt_L(Super_L(Tab))}",
"THRA*/KPH*/TKHRAO*ET": "{#Alt_L(Super_L(Delete))}",
"THRA*/KHR*/KPH*/A*": "{#Alt_L(Control_L(Super_L(a)))}",
"THRA*/KHR*/KPH*/PW*": "{#Alt_L(Control_L(Super_L(b)))}",
"THRA*/KHR*/KPH*/KR*": "{#Alt_L(Control_L(Super_L(c)))}",
"THRA*/KHR*/KPH*/TK*": "{#Alt_L(Control_L(Super_L(d)))}",
"THRA*/KHR*/KPH*/*E": "{#Alt_L(Control_L(Super_L(e)))}",
"THRA*/KHR*/KPH*/TP*": "{#Alt_L(Control_L(Super_L(f)))}",
"THRA*/KHR*/KPH*/TKPW*": "{#Alt_L(Control_L(Super_L(g)))}",
"THRA*/KHR*/KPH*/H*": "{#Alt_L(Control_L(Super_L(h)))}",
"THRA*/KHR*/KPH*/*EU": "{#Alt_L(Control_L(Super_L(i)))}",
"THRA*/KHR*/KPH*/SKWR*": "{#Alt_L(Control_L(Super_L(j)))}",
"THRA*/KHR*/KPH*/K*": "{#Alt_L(Control_L(Super_L(k)))}",
"THRA*/KHR*/KPH*/HR*": "{#Alt_L(Control_L(Super_L(l)))}",
"THRA*/KHR*/KPH*/PH*": "{#Alt_L(Control_L(Super_L(m)))}",
"THRA*/KHR*/KPH*/TPH*": "{#Alt_L(Control_L(Super_L(n)))}",
"THRA*/KHR*/KPH*/O*": "{#Alt_L(Control_L(Super_L(o)))}",
"THRA*/KHR*/KPH*/P*": "{#Alt_L(Control_L(Super_L(p)))}",
"THRA*/KHR*/KPH*/KW*": "{#Alt_L(Control_L(Super_L(q)))}",
"THRA*/KHR*/KPH*/R*": "{#Alt_L(Control_L(Super_L(r)))}",
"THRA*/KHR*/KPH*/S*": "{#Alt_L(Control_L(Super_L(s)))}",
"THRA*/KHR*/KPH*/T*": "{#Alt_L(Control_L(Super_L(t)))}",
"THRA*/KHR*/KPH*/*U": "{#Alt_L(Control_L(Super_L(u)))}",
"THRA*/KHR*/KPH*/SR*": "{#Alt_L(Control_L(Super_L(v)))}",
"THRA*/KHR*/KPH*/W*": "{#Alt_L(Control_L(Super_L(w)))}",
"THRA*/KHR*/KPH*/KP*": "{#Alt_L(Control_L(Super_L(x)))}",
"THRA*/KHR*/KPH*/KWR*": "{#Alt_L(Control_L(Super_L(y)))}",
"THRA*/KHR*/KPH*/STKPW*": "{#Alt_L(Control_L(Super_L(z)))}",
"THRA*/KHR*/KPH*/0": "{#Alt_L(Control_L(Super_L(0)))}",
"THRA*/KHR*/KPH*/1": "{#Alt_L(Control_L(Super_L(1)))}",
"THRA*/KHR*/KPH*/2": "{#Alt_L(Control_L(Super_L(2)))}",
"THRA*/KHR*/KPH*/3": "{#Alt_L(Control_L(Super_L(3)))}",
"THRA*/KHR*/KPH*/4": "{#Alt_L(Control_L(Super_L(4)))}",
"THRA*/KHR*/KPH*/5": "{#Alt_L(Control_L(Super_L(5)))}",
"THRA*/KHR*/KPH*/6": "{#Alt_L(Control_L(Super_L(6)))}",
"THRA*/KHR*/KPH*/7": "{#Alt_L(Control_L(Super_L(7)))}",
"THRA*/KHR*/KPH*/8": "{#Alt_L(Control_L(Super_L(8)))}",
"THRA*/KHR*/KPH*/9": "{#Alt_L(Control_L(Super_L(9)))}",
"THRA*/KHR*/KPH*/KH-FG": "{#Alt_L(Control_L(Super_L(grave)))}",
"THRA*/KHR*/KPH*/KW-BG": "{#Alt_L(Control_L(Super_L(comma)))}",
"THRA*/KHR*/KPH*/PR*EPB": "{#Alt_L(Control_L(Super_L(parenright)))}",
"THRA*/KHR*/KPH*/PREPB": "{#Alt_L(Control_L(Super_L(parenleft)))}",
"THRA*/KHR*/KPH*/PW*FP": "{#Alt_L(Control_L(Super_L(BackSpace)))}",
"THRA*/KHR*/KPH*/PWR*BGT": "{#Alt_L(Control_L(Super_L(bracketright)))}",
"THRA*/KHR*/KPH*/PWR-BGT": "{#Alt_L(Control_L(Super_L(bracketleft)))}",
"THRA*/KHR*/KPH*/R-R": "{#Alt_L(Control_L(Super_L(Return)))}",
"THRA*/KHR*/KPH*/S-P": "{#Alt_L(Control_L(Super_L(space)))}",
"THRA*/KHR*/KPH*/SP*S": "{#Alt_L(Control_L(Super_L()))}",
"THRA*/KHR*/KPH*/SPWHRAERB": "{#Alt_L(Control_L(Super_L(backslash)))}",
"THRA*/KHR*/KPH*/STPH-G": "{#Alt_L(Control_L(Super_L(Right)))}",
"THRA*/KHR*/KPH*/STPH-B": "{#Alt_L(Control_L(Super_L(Down)))}",
"THRA*/KHR*/KPH*/STPH-P": "{#Alt_L(Control_L(Super_L(Up)))}",
"THRA*/KHR*/KPH*/STPH-R": "{#Alt_L(Control_L(Super_L(Left)))}",
"THRA*/KHR*/KPH*/TA*B": "{#Alt_L(Control_L(Super_L(Tab)))}",
"THRA*/KHR*/KPH*/TKHRAO*ET": "{#Alt_L(Control_L(Super_L(Delete)))}",
"THRA*/KHR*/A*": "{#Alt_L(Control_L(a))}",
"THRA*/KHR*/PW*": "{#Alt_L(Control_L(b))}",
"THRA*/KHR*/KR*": "{#Alt_L(Control_L(c))}",
"THRA*/KHR*/TK*": "{#Alt_L(Control_L(d))}",
"THRA*/KHR*/*E": "{#Alt_L(Control_L(e))}",
"THRA*/KHR*/TP*": "{#Alt_L(Control_L(f))}",
"THRA*/KHR*/TKPW*": "{#Alt_L(Control_L(g))}",
"THRA*/KHR*/H*": "{#Alt_L(Control_L(h))}",
"THRA*/KHR*/*EU": "{#Alt_L(Control_L(i))}",
"THRA*/KHR*/SKWR*": "{#Alt_L(Control_L(j))}",
"THRA*/KHR*/K*": "{#Alt_L(Control_L(k))}",
"THRA*/KHR*/HR*": "{#Alt_L(Control_L(l))}",
"THRA*/KHR*/PH*": "{#Alt_L(Control_L(m))}",
"THRA*/KHR*/TPH*": "{#Alt_L(Control_L(n))}",
"THRA*/KHR*/O*": "{#Alt_L(Control_L(o))}",
"THRA*/KHR*/P*": "{#Alt_L(Control_L(p))}",
"THRA*/KHR*/KW*": "{#Alt_L(Control_L(q))}",
"THRA*/KHR*/R*": "{#Alt_L(Control_L(r))}",
"THRA*/KHR*/S*": "{#Alt_L(Control_L(s))}",
"THRA*/KHR*/T*": "{#Alt_L(Control_L(t))}",
"THRA*/KHR*/*U": "{#Alt_L(Control_L(u))}",
"THRA*/KHR*/SR*": "{#Alt_L(Control_L(v))}",
"THRA*/KHR*/W*": "{#Alt_L(Control_L(w))}",
"THRA*/KHR*/KP*": "{#Alt_L(Control_L(x))}",
"THRA*/KHR*/KWR*": "{#Alt_L(Control_L(y))}",
"THRA*/KHR*/STKPW*": "{#Alt_L(Control_L(z))}",
"THRA*/KHR*/0": "{#Alt_L(Control_L(0))}",
"THRA*/KHR*/1": "{#Alt_L(Control_L(1))}",
"THRA*/KHR*/2": "{#Alt_L(Control_L(2))}",
"THRA*/KHR*/3": "{#Alt_L(Control_L(3))}",
"THRA*/KHR*/4": "{#Alt_L(Control_L(4))}",
"THRA*/KHR*/5": "{#Alt_L(Control_L(5))}",
"THRA*/KHR*/6": "{#Alt_L(Control_L(6))}",
"THRA*/KHR*/7": "{#Alt_L(Control_L(7))}",
"THRA*/KHR*/8": "{#Alt_L(Control_L(8))}",
"THRA*/KHR*/9": "{#Alt_L(Control_L(9))}",
"THRA*/KHR*/KH-FG": "{#Alt_L(Control_L(grave))}",
"THRA*/KHR*/KW-BG": "{#Alt_L(Control_L(comma))}",
"THRA*/KHR*/PR*EPB": "{#Alt_L(Control_L(parenright))}",
"THRA*/KHR*/PREPB": "{#Alt_L(Control_L(parenleft))}",
"THRA*/KHR*/PW*FP": "{#Alt_L(Control_L(BackSpace))}",
"THRA*/KHR*/PWR*BGT": "{#Alt_L(Control_L(bracketright))}",
"THRA*/KHR*/PWR-BGT": "{#Alt_L(Control_L(bracketleft))}",
"THRA*/KHR*/R-R": "{#Alt_L(Control_L(Return))}",
"THRA*/KHR*/S-P": "{#Alt_L(Control_L(space))}",
"THRA*/KHR*/SP*S": "{#Alt_L(Control_L())}",
"THRA*/KHR*/SPWHRAERB": "{#Alt_L(Control_L(backslash))}",
"THRA*/KHR*/STPH-G": "{#Alt_L(Control_L(Right))}",
"THRA*/KHR*/STPH-B": "{#Alt_L(Control_L(Down))}",
"THRA*/KHR*/STPH-P": "{#Alt_L(Control_L(Up))}",
"THRA*/KHR*/STPH-R": "{#Alt_L(Control_L(Left))}",
"THRA*/KHR*/TA*B": "{#Alt_L(Control_L(Tab))}",
"THRA*/KHR*/TKHRAO*ET": "{#Alt_L(Control_L(Delete))}",
"THRA*/KPH*/KHR*/A*": "{#Alt_L(Super_L(Control_L(a)))}",
"THRA*/KPH*/KHR*/PW*": "{#Alt_L(Super_L(Control_L(b)))}",
"THRA*/KPH*/KHR*/KR*": "{#Alt_L(Super_L(Control_L(c)))}",
"THRA*/KPH*/KHR*/TK*": "{#Alt_L(Super_L(Control_L(d)))}",
"THRA*/KPH*/KHR*/*E": "{#Alt_L(Super_L(Control_L(e)))}",
"THRA*/KPH*/KHR*/TP*": "{#Alt_L(Super_L(Control_L(f)))}",
"THRA*/KPH*/KHR*/TKPW*": "{#Alt_L(Super_L(Control_L(g)))}",
"THRA*/KPH*/KHR*/H*": "{#Alt_L(Super_L(Control_L(h)))}",
"THRA*/KPH*/KHR*/*EU": "{#Alt_L(Super_L(Control_L(i)))}",
"THRA*/KPH*/KHR*/SKWR*": "{#Alt_L(Super_L(Control_L(j)))}",
"THRA*/KPH*/KHR*/K*": "{#Alt_L(Super_L(Control_L(k)))}",
"THRA*/KPH*/KHR*/HR*": "{#Alt_L(Super_L(Control_L(l)))}",
"THRA*/KPH*/KHR*/PH*": "{#Alt_L(Super_L(Control_L(m)))}",
"THRA*/KPH*/KHR*/TPH*": "{#Alt_L(Super_L(Control_L(n)))}",
"THRA*/KPH*/KHR*/O*": "{#Alt_L(Super_L(Control_L(o)))}",
"THRA*/KPH*/KHR*/P*": "{#Alt_L(Super_L(Control_L(p)))}",
"THRA*/KPH*/KHR*/KW*": "{#Alt_L(Super_L(Control_L(q)))}",
"THRA*/KPH*/KHR*/R*": "{#Alt_L(Super_L(Control_L(r)))}",
"THRA*/KPH*/KHR*/S*": "{#Alt_L(Super_L(Control_L(s)))}",
"THRA*/KPH*/KHR*/T*": "{#Alt_L(Super_L(Control_L(t)))}",
"THRA*/KPH*/KHR*/*U": "{#Alt_L(Super_L(Control_L(u)))}",
"THRA*/KPH*/KHR*/SR*": "{#Alt_L(Super_L(Control_L(v)))}",
"THRA*/KPH*/KHR*/W*": "{#Alt_L(Super_L(Control_L(w)))}",
"THRA*/KPH*/KHR*/KP*": "{#Alt_L(Super_L(Control_L(x)))}",
"THRA*/KPH*/KHR*/KWR*": "{#Alt_L(Super_L(Control_L(y)))}",
"THRA*/KPH*/KHR*/STKPW*": "{#Alt_L(Super_L(Control_L(z)))}",
"THRA*/KPH*/KHR*/0": "{#Alt_L(Super_L(Control_L(0)))}",
"THRA*/KPH*/KHR*/1": "{#Alt_L(Super_L(Control_L(1)))}",
"THRA*/KPH*/KHR*/2": "{#Alt_L(Super_L(Control_L(2)))}",
"THRA*/KPH*/KHR*/3": "{#Alt_L(Super_L(Control_L(3)))}",
"THRA*/KPH*/KHR*/4": "{#Alt_L(Super_L(Control_L(4)))}",
"THRA*/KPH*/KHR*/5": "{#Alt_L(Super_L(Control_L(5)))}",
"THRA*/KPH*/KHR*/6": "{#Alt_L(Super_L(Control_L(6)))}",
"THRA*/KPH*/KHR*/7": "{#Alt_L(Super_L(Control_L(7)))}",
"THRA*/KPH*/KHR*/8": "{#Alt_L(Super_L(Control_L(8)))}",
"THRA*/KPH*/KHR*/9": "{#Alt_L(Super_L(Control_L(9)))}",
"THRA*/KPH*/KHR*/KH-FG": "{#Alt_L(Super_L(Control_L(grave)))}",
"THRA*/KPH*/KHR*/KW-BG": "{#Alt_L(Super_L(Control_L(comma)))}",
"THRA*/KPH*/KHR*/PR*EPB": "{#Alt_L(Super_L(Control_L(parenright)))}",
"THRA*/KPH*/KHR*/PREPB": "{#Alt_L(Super_L(Control_L(parenleft)))}",
"THRA*/KPH*/KHR*/PW*FP": "{#Alt_L(Super_L(Control_L(BackSpace)))}",
"THRA*/KPH*/KHR*/PWR*BGT": "{#Alt_L(Super_L(Control_L(bracketright)))}",
"THRA*/KPH*/KHR*/PWR-BGT": "{#Alt_L(Super_L(Control_L(bracketleft)))}",
"THRA*/KPH*/KHR*/R-R": "{#Alt_L(Super_L(Control_L(Return)))}",
"THRA*/KPH*/KHR*/S-P": "{#Alt_L(Super_L(Control_L(space)))}",
"THRA*/KPH*/KHR*/SP*S": "{#Alt_L(Super_L(Control_L()))}",
"THRA*/KPH*/KHR*/SPWHRAERB": "{#Alt_L(Super_L(Control_L(backslash)))}",
"THRA*/KPH*/KHR*/STPH-G": "{#Alt_L(Super_L(Control_L(Right)))}",
"THRA*/KPH*/KHR*/STPH-B": "{#Alt_L(Super_L(Control_L(Down)))}",
"THRA*/KPH*/KHR*/STPH-P": "{#Alt_L(Super_L(Control_L(Up)))}",
"THRA*/KPH*/KHR*/STPH-R": "{#Alt_L(Super_L(Control_L(Left)))}",
"THRA*/KPH*/KHR*/TA*B": "{#Alt_L(Super_L(Control_L(Tab)))}",
"THRA*/KPH*/KHR*/TKHRAO*ET": "{#Alt_L(Super_L(Control_L(Delete)))}",
"THRA*/STP*/KPH*/A*": "{#Alt_L(Shift_L(Super_L(a)))}",
"THRA*/STP*/KPH*/PW*": "{#Alt_L(Shift_L(Super_L(b)))}",
"THRA*/STP*/KPH*/KR*": "{#Alt_L(Shift_L(Super_L(c)))}",
"THRA*/STP*/KPH*/TK*": "{#Alt_L(Shift_L(Super_L(d)))}",
"THRA*/STP*/KPH*/*E": "{#Alt_L(Shift_L(Super_L(e)))}",
"THRA*/STP*/KPH*/TP*": "{#Alt_L(Shift_L(Super_L(f)))}",
"THRA*/STP*/KPH*/TKPW*": "{#Alt_L(Shift_L(Super_L(g)))}",
"THRA*/STP*/KPH*/H*": "{#Alt_L(Shift_L(Super_L(h)))}",
"THRA*/STP*/KPH*/*EU": "{#Alt_L(Shift_L(Super_L(i)))}",
"THRA*/STP*/KPH*/SKWR*": "{#Alt_L(Shift_L(Super_L(j)))}",
"THRA*/STP*/KPH*/K*": "{#Alt_L(Shift_L(Super_L(k)))}",
"THRA*/STP*/KPH*/HR*": "{#Alt_L(Shift_L(Super_L(l)))}",
"THRA*/STP*/KPH*/PH*": "{#Alt_L(Shift_L(Super_L(m)))}",
"THRA*/STP*/KPH*/TPH*": "{#Alt_L(Shift_L(Super_L(n)))}",
"THRA*/STP*/KPH*/O*": "{#Alt_L(Shift_L(Super_L(o)))}",
"THRA*/STP*/KPH*/P*": "{#Alt_L(Shift_L(Super_L(p)))}",
"THRA*/STP*/KPH*/KW*": "{#Alt_L(Shift_L(Super_L(q)))}",
"THRA*/STP*/KPH*/R*": "{#Alt_L(Shift_L(Super_L(r)))}",
"THRA*/STP*/KPH*/S*": "{#Alt_L(Shift_L(Super_L(s)))}",
"THRA*/STP*/KPH*/T*": "{#Alt_L(Shift_L(Super_L(t)))}",
"THRA*/STP*/KPH*/*U": "{#Alt_L(Shift_L(Super_L(u)))}",
"THRA*/STP*/KPH*/SR*": "{#Alt_L(Shift_L(Super_L(v)))}",
"THRA*/STP*/KPH*/W*": "{#Alt_L(Shift_L(Super_L(w)))}",
"THRA*/STP*/KPH*/KP*": "{#Alt_L(Shift_L(Super_L(x)))}",
"THRA*/STP*/KPH*/KWR*": "{#Alt_L(Shift_L(Super_L(y)))}",
"THRA*/STP*/KPH*/STKPW*": "{#Alt_L(Shift_L(Super_L(z)))}",
"THRA*/STP*/KPH*/0": "{#Alt_L(Shift_L(Super_L(0)))}",
"THRA*/STP*/KPH*/1": "{#Alt_L(Shift_L(Super_L(1)))}",
"THRA*/STP*/KPH*/2": "{#Alt_L(Shift_L(Super_L(2)))}",
"THRA*/STP*/KPH*/3": "{#Alt_L(Shift_L(Super_L(3)))}",
"THRA*/STP*/KPH*/4": "{#Alt_L(Shift_L(Super_L(4)))}",
"THRA*/STP*/KPH*/5": "{#Alt_L(Shift_L(Super_L(5)))}",
"THRA*/STP*/KPH*/6": "{#Alt_L(Shift_L(Super_L(6)))}",
"THRA*/STP*/KPH*/7": "{#Alt_L(Shift_L(Super_L(7)))}",
"THRA*/STP*/KPH*/8": "{#Alt_L(Shift_L(Super_L(8)))}",
"THRA*/STP*/KPH*/9": "{#Alt_L(Shift_L(Super_L(9)))}",
"THRA*/STP*/KPH*/KH-FG": "{#Alt_L(Shift_L(Super_L(grave)))}",
"THRA*/STP*/KPH*/KW-BG": "{#Alt_L(Shift_L(Super_L(comma)))}",
"THRA*/STP*/KPH*/PR*EPB": "{#Alt_L(Shift_L(Super_L(parenright)))}",
"THRA*/STP*/KPH*/PREPB": "{#Alt_L(Shift_L(Super_L(parenleft)))}",
"THRA*/STP*/KPH*/PW*FP": "{#Alt_L(Shift_L(Super_L(BackSpace)))}",
"THRA*/STP*/KPH*/PWR*BGT": "{#Alt_L(Shift_L(Super_L(bracketright)))}",
"THRA*/STP*/KPH*/PWR-BGT": "{#Alt_L(Shift_L(Super_L(bracketleft)))}",
"THRA*/STP*/KPH*/R-R": "{#Alt_L(Shift_L(Super_L(Return)))}",
"THRA*/STP*/KPH*/S-P": "{#Alt_L(Shift_L(Super_L(space)))}",
"THRA*/STP*/KPH*/SP*S": "{#Alt_L(Shift_L(Super_L()))}",
"THRA*/STP*/KPH*/SPWHRAERB": "{#Alt_L(Shift_L(Super_L(backslash)))}",
"THRA*/STP*/KPH*/STPH-G": "{#Alt_L(Shift_L(Super_L(Right)))}",
"THRA*/STP*/KPH*/STPH-B": "{#Alt_L(Shift_L(Super_L(Down)))}",
"THRA*/STP*/KPH*/STPH-P": "{#Alt_L(Shift_L(Super_L(Up)))}",
"THRA*/STP*/KPH*/STPH-R": "{#Alt_L(Shift_L(Super_L(Left)))}",
"THRA*/STP*/KPH*/TA*B": "{#Alt_L(Shift_L(Super_L(Tab)))}",
"THRA*/STP*/KPH*/TKHRAO*ET": "{#Alt_L(Shift_L(Super_L(Delete)))}",
"THRA*/STP*/KHR*/KPH*/A*": "{#Alt_L(Shift_L(Control_L(Super_L(a))))}",
"THRA*/STP*/KHR*/KPH*/PW*": "{#Alt_L(Shift_L(Control_L(Super_L(b))))}",
"THRA*/STP*/KHR*/KPH*/KR*": "{#Alt_L(Shift_L(Control_L(Super_L(c))))}",
"THRA*/STP*/KHR*/KPH*/TK*": "{#Alt_L(Shift_L(Control_L(Super_L(d))))}",
"THRA*/STP*/KHR*/KPH*/*E": "{#Alt_L(Shift_L(Control_L(Super_L(e))))}",
"THRA*/STP*/KHR*/KPH*/TP*": "{#Alt_L(Shift_L(Control_L(Super_L(f))))}",
"THRA*/STP*/KHR*/KPH*/TKPW*": "{#Alt_L(Shift_L(Control_L(Super_L(g))))}",
"THRA*/STP*/KHR*/KPH*/H*": "{#Alt_L(Shift_L(Control_L(Super_L(h))))}",
"THRA*/STP*/KHR*/KPH*/*EU": "{#Alt_L(Shift_L(Control_L(Super_L(i))))}",
"THRA*/STP*/KHR*/KPH*/SKWR*": "{#Alt_L(Shift_L(Control_L(Super_L(j))))}",
"THRA*/STP*/KHR*/KPH*/K*": "{#Alt_L(Shift_L(Control_L(Super_L(k))))}",
"THRA*/STP*/KHR*/KPH*/HR*": "{#Alt_L(Shift_L(Control_L(Super_L(l))))}",
"THRA*/STP*/KHR*/KPH*/PH*": "{#Alt_L(Shift_L(Control_L(Super_L(m))))}",
"THRA*/STP*/KHR*/KPH*/TPH*": "{#Alt_L(Shift_L(Control_L(Super_L(n))))}",
"THRA*/STP*/KHR*/KPH*/O*": "{#Alt_L(Shift_L(Control_L(Super_L(o))))}",
"THRA*/STP*/KHR*/KPH*/P*": "{#Alt_L(Shift_L(Control_L(Super_L(p))))}",
"THRA*/STP*/KHR*/KPH*/KW*": "{#Alt_L(Shift_L(Control_L(Super_L(q))))}",
"THRA*/STP*/KHR*/KPH*/R*": "{#Alt_L(Shift_L(Control_L(Super_L(r))))}",
"THRA*/STP*/KHR*/KPH*/S*": "{#Alt_L(Shift_L(Control_L(Super_L(s))))}",
"THRA*/STP*/KHR*/KPH*/T*": "{#Alt_L(Shift_L(Control_L(Super_L(t))))}",
"THRA*/STP*/KHR*/KPH*/*U": "{#Alt_L(Shift_L(Control_L(Super_L(u))))}",
"THRA*/STP*/KHR*/KPH*/SR*": "{#Alt_L(Shift_L(Control_L(Super_L(v))))}",
"THRA*/STP*/KHR*/KPH*/W*": "{#Alt_L(Shift_L(Control_L(Super_L(w))))}",
"THRA*/STP*/KHR*/KPH*/KP*": "{#Alt_L(Shift_L(Control_L(Super_L(x))))}",
"THRA*/STP*/KHR*/KPH*/KWR*": "{#Alt_L(Shift_L(Control_L(Super_L(y))))}",
"THRA*/STP*/KHR*/KPH*/STKPW*": "{#Alt_L(Shift_L(Control_L(Super_L(z))))}",
"THRA*/STP*/KHR*/KPH*/0": "{#Alt_L(Shift_L(Control_L(Super_L(0))))}",
"THRA*/STP*/KHR*/KPH*/1": "{#Alt_L(Shift_L(Control_L(Super_L(1))))}",
"THRA*/STP*/KHR*/KPH*/2": "{#Alt_L(Shift_L(Control_L(Super_L(2))))}",
"THRA*/STP*/KHR*/KPH*/3": "{#Alt_L(Shift_L(Control_L(Super_L(3))))}",
"THRA*/STP*/KHR*/KPH*/4": "{#Alt_L(Shift_L(Control_L(Super_L(4))))}",
"THRA*/STP*/KHR*/KPH*/5": "{#Alt_L(Shift_L(Control_L(Super_L(5))))}",
"THRA*/STP*/KHR*/KPH*/6": "{#Alt_L(Shift_L(Control_L(Super_L(6))))}",
"THRA*/STP*/KHR*/KPH*/7": "{#Alt_L(Shift_L(Control_L(Super_L(7))))}",
"THRA*/STP*/KHR*/KPH*/8": "{#Alt_L(Shift_L(Control_L(Super_L(8))))}",
"THRA*/STP*/KHR*/KPH*/9": "{#Alt_L(Shift_L(Control_L(Super_L(9))))}",
"THRA*/STP*/KHR*/KPH*/KH-FG": "{#Alt_L(Shift_L(Control_L(Super_L(grave))))}",
"THRA*/STP*/KHR*/KPH*/KW-BG": "{#Alt_L(Shift_L(Control_L(Super_L(comma))))}",
"THRA*/STP*/KHR*/KPH*/PR*EPB": "{#Alt_L(Shift_L(Control_L(Super_L(parenright))))}",
"THRA*/STP*/KHR*/KPH*/PREPB": "{#Alt_L(Shift_L(Control_L(Super_L(parenleft))))}",
"THRA*/STP*/KHR*/KPH*/PW*FP": "{#Alt_L(Shift_L(Control_L(Super_L(BackSpace))))}",
"THRA*/STP*/KHR*/KPH*/PWR*BGT": "{#Alt_L(Shift_L(Control_L(Super_L(bracketright))))}",
"THRA*/STP*/KHR*/KPH*/PWR-BGT": "{#Alt_L(Shift_L(Control_L(Super_L(bracketleft))))}",
"THRA*/STP*/KHR*/KPH*/R-R": "{#Alt_L(Shift_L(Control_L(Super_L(Return))))}",
"THRA*/STP*/KHR*/KPH*/S-P": "{#Alt_L(Shift_L(Control_L(Super_L(space))))}",
"THRA*/STP*/KHR*/KPH*/SP*S": "{#Alt_L(Shift_L(Control_L(Super_L())))}",
"THRA*/STP*/KHR*/KPH*/SPWHRAERB": "{#Alt_L(Shift_L(Control_L(Super_L(backslash))))}",
"THRA*/STP*/KHR*/KPH*/STPH-G": "{#Alt_L(Shift_L(Control_L(Super_L(Right))))}",
"THRA*/STP*/KHR*/KPH*/STPH-B": "{#Alt_L(Shift_L(Control_L(Super_L(Down))))}",
"THRA*/STP*/KHR*/KPH*/STPH-P": "{#Alt_L(Shift_L(Control_L(Super_L(Up))))}",
"THRA*/STP*/KHR*/KPH*/STPH-R": "{#Alt_L(Shift_L(Control_L(Super_L(Left))))}",
"THRA*/STP*/KHR*/KPH*/TA*B": "{#Alt_L(Shift_L(Control_L(Super_L(Tab))))}",
"THRA*/STP*/KHR*/KPH*/TKHRAO*ET": "{#Alt_L(Shift_L(Control_L(Super_L(Delete))))}",
"THRA*/STP*/KHR*/A*": "{#Alt_L(Shift_L(Control_L(a)))}",
"THRA*/STP*/KHR*/PW*": "{#Alt_L(Shift_L(Control_L(b)))}",
"THRA*/STP*/KHR*/KR*": "{#Alt_L(Shift_L(Control_L(c)))}",
"THRA*/STP*/KHR*/TK*": "{#Alt_L(Shift_L(Control_L(d)))}",
"THRA*/STP*/KHR*/*E": "{#Alt_L(Shift_L(Control_L(e)))}",
"THRA*/STP*/KHR*/TP*": "{#Alt_L(Shift_L(Control_L(f)))}",
"THRA*/STP*/KHR*/TKPW*": "{#Alt_L(Shift_L(Control_L(g)))}",
"THRA*/STP*/KHR*/H*": "{#Alt_L(Shift_L(Control_L(h)))}",
"THRA*/STP*/KHR*/*EU": "{#Alt_L(Shift_L(Control_L(i)))}",
"THRA*/STP*/KHR*/SKWR*": "{#Alt_L(Shift_L(Control_L(j)))}",
"THRA*/STP*/KHR*/K*": "{#Alt_L(Shift_L(Control_L(k)))}",
"THRA*/STP*/KHR*/HR*": "{#Alt_L(Shift_L(Control_L(l)))}",
"THRA*/STP*/KHR*/PH*": "{#Alt_L(Shift_L(Control_L(m)))}",
"THRA*/STP*/KHR*/TPH*": "{#Alt_L(Shift_L(Control_L(n)))}",
"THRA*/STP*/KHR*/O*": "{#Alt_L(Shift_L(Control_L(o)))}",
"THRA*/STP*/KHR*/P*": "{#Alt_L(Shift_L(Control_L(p)))}",
"THRA*/STP*/KHR*/KW*": "{#Alt_L(Shift_L(Control_L(q)))}",
"THRA*/STP*/KHR*/R*": "{#Alt_L(Shift_L(Control_L(r)))}",
"THRA*/STP*/KHR*/S*": "{#Alt_L(Shift_L(Control_L(s)))}",
"THRA*/STP*/KHR*/T*": "{#Alt_L(Shift_L(Control_L(t)))}",
"THRA*/STP*/KHR*/*U": "{#Alt_L(Shift_L(Control_L(u)))}",
"THRA*/STP*/KHR*/SR*": "{#Alt_L(Shift_L(Control_L(v)))}",
"THRA*/STP*/KHR*/W*": "{#Alt_L(Shift_L(Control_L(w)))}",
"THRA*/STP*/KHR*/KP*": "{#Alt_L(Shift_L(Control_L(x)))}",
"THRA*/STP*/KHR*/KWR*": "{#Alt_L(Shift_L(Control_L(y)))}",
"THRA*/STP*/KHR*/STKPW*": "{#Alt_L(Shift_L(Control_L(z)))}",
"THRA*/STP*/KHR*/0": "{#Alt_L(Shift_L(Control_L(0)))}",
"THRA*/STP*/KHR*/1": "{#Alt_L(Shift_L(Control_L(1)))}",
"THRA*/STP*/KHR*/2": "{#Alt_L(Shift_L(Control_L(2)))}",
"THRA*/STP*/KHR*/3": "{#Alt_L(Shift_L(Control_L(3)))}",
"THRA*/STP*/KHR*/4": "{#Alt_L(Shift_L(Control_L(4)))}",
"THRA*/STP*/KHR*/5": "{#Alt_L(Shift_L(Control_L(5)))}",
"THRA*/STP*/KHR*/6": "{#Alt_L(Shift_L(Control_L(6)))}",
"THRA*/STP*/KHR*/7": "{#Alt_L(Shift_L(Control_L(7)))}",
"THRA*/STP*/KHR*/8": "{#Alt_L(Shift_L(Control_L(8)))}",
"THRA*/STP*/KHR*/9": "{#Alt_L(Shift_L(Control_L(9)))}",
"THRA*/STP*/KHR*/KH-FG": "{#Alt_L(Shift_L(Control_L(grave)))}",
"THRA*/STP*/KHR*/KW-BG": "{#Alt_L(Shift_L(Control_L(comma)))}",
"THRA*/STP*/KHR*/PR*EPB": "{#Alt_L(Shift_L(Control_L(parenright)))}",
"THRA*/STP*/KHR*/PREPB": "{#Alt_L(Shift_L(Control_L(parenleft)))}",
"THRA*/STP*/KHR*/PW*FP": "{#Alt_L(Shift_L(Control_L(BackSpace)))}",
"THRA*/STP*/KHR*/PWR*BGT": "{#Alt_L(Shift_L(Control_L(bracketright)))}",
"THRA*/STP*/KHR*/PWR-BGT": "{#Alt_L(Shift_L(Control_L(bracketleft)))}",
"THRA*/STP*/KHR*/R-R": "{#Alt_L(Shift_L(Control_L(Return)))}",
"THRA*/STP*/KHR*/S-P": "{#Alt_L(Shift_L(Control_L(space)))}",
"THRA*/STP*/KHR*/SP*S": "{#Alt_L(Shift_L(Control_L()))}",
"THRA*/STP*/KHR*/SPWHRAERB": "{#Alt_L(Shift_L(Control_L(backslash)))}",
"THRA*/STP*/KHR*/STPH-G": "{#Alt_L(Shift_L(Control_L(Right)))}",
"THRA*/STP*/KHR*/STPH-B": "{#Alt_L(Shift_L(Control_L(Down)))}",
"THRA*/STP*/KHR*/STPH-P": "{#Alt_L(Shift_L(Control_L(Up)))}",
"THRA*/STP*/KHR*/STPH-R": "{#Alt_L(Shift_L(Control_L(Left)))}",
"THRA*/STP*/KHR*/TA*B": "{#Alt_L(Shift_L(Control_L(Tab)))}",
"THRA*/STP*/KHR*/TKHRAO*ET": "{#Alt_L(Shift_L(Control_L(Delete)))}",
"THRA*/STP*/KPH*/KHR*/A*": "{#Alt_L(Shift_L(Super_L(Control_L(a))))}",
"THRA*/STP*/KPH*/KHR*/PW*": "{#Alt_L(Shift_L(Super_L(Control_L(b))))}",
"THRA*/STP*/KPH*/KHR*/KR*": "{#Alt_L(Shift_L(Super_L(Control_L(c))))}",
"THRA*/STP*/KPH*/KHR*/TK*": "{#Alt_L(Shift_L(Super_L(Control_L(d))))}",
"THRA*/STP*/KPH*/KHR*/*E": "{#Alt_L(Shift_L(Super_L(Control_L(e))))}",
"THRA*/STP*/KPH*/KHR*/TP*": "{#Alt_L(Shift_L(Super_L(Control_L(f))))}",
"THRA*/STP*/KPH*/KHR*/TKPW*": "{#Alt_L(Shift_L(Super_L(Control_L(g))))}",
"THRA*/STP*/KPH*/KHR*/H*": "{#Alt_L(Shift_L(Super_L(Control_L(h))))}",
"THRA*/STP*/KPH*/KHR*/*EU": "{#Alt_L(Shift_L(Super_L(Control_L(i))))}",
"THRA*/STP*/KPH*/KHR*/SKWR*": "{#Alt_L(Shift_L(Super_L(Control_L(j))))}",
"THRA*/STP*/KPH*/KHR*/K*": "{#Alt_L(Shift_L(Super_L(Control_L(k))))}",
"THRA*/STP*/KPH*/KHR*/HR*": "{#Alt_L(Shift_L(Super_L(Control_L(l))))}",
"THRA*/STP*/KPH*/KHR*/PH*": "{#Alt_L(Shift_L(Super_L(Control_L(m))))}",
"THRA*/STP*/KPH*/KHR*/TPH*": "{#Alt_L(Shift_L(Super_L(Control_L(n))))}",
"THRA*/STP*/KPH*/KHR*/O*": "{#Alt_L(Shift_L(Super_L(Control_L(o))))}",
"THRA*/STP*/KPH*/KHR*/P*": "{#Alt_L(Shift_L(Super_L(Control_L(p))))}",
"THRA*/STP*/KPH*/KHR*/KW*": "{#Alt_L(Shift_L(Super_L(Control_L(q))))}",
"THRA*/STP*/KPH*/KHR*/R*": "{#Alt_L(Shift_L(Super_L(Control_L(r))))}",
"THRA*/STP*/KPH*/KHR*/S*": "{#Alt_L(Shift_L(Super_L(Control_L(s))))}",
"THRA*/STP*/KPH*/KHR*/T*": "{#Alt_L(Shift_L(Super_L(Control_L(t))))}",
"THRA*/STP*/KPH*/KHR*/*U": "{#Alt_L(Shift_L(Super_L(Control_L(u))))}",
"THRA*/STP*/KPH*/KHR*/SR*": "{#Alt_L(Shift_L(Super_L(Control_L(v))))}",
"THRA*/STP*/KPH*/KHR*/W*": "{#Alt_L(Shift_L(Super_L(Control_L(w))))}",
"THRA*/STP*/KPH*/KHR*/KP*": "{#Alt_L(Shift_L(Super_L(Control_L(x))))}",
"THRA*/STP*/KPH*/KHR*/KWR*": "{#Alt_L(Shift_L(Super_L(Control_L(y))))}",
"THRA*/STP*/KPH*/KHR*/STKPW*": "{#Alt_L(Shift_L(Super_L(Control_L(z))))}",
"THRA*/STP*/KPH*/KHR*/0": "{#Alt_L(Shift_L(Super_L(Control_L(0))))}",
"THRA*/STP*/KPH*/KHR*/1": "{#Alt_L(Shift_L(Super_L(Control_L(1))))}",
"THRA*/STP*/KPH*/KHR*/2": "{#Alt_L(Shift_L(Super_L(Control_L(2))))}",
"THRA*/STP*/KPH*/KHR*/3": "{#Alt_L(Shift_L(Super_L(Control_L(3))))}",
"THRA*/STP*/KPH*/KHR*/4": "{#Alt_L(Shift_L(Super_L(Control_L(4))))}",
"THRA*/STP*/KPH*/KHR*/5": "{#Alt_L(Shift_L(Super_L(Control_L(5))))}",
"THRA*/STP*/KPH*/KHR*/6": "{#Alt_L(Shift_L(Super_L(Control_L(6))))}",
"THRA*/STP*/KPH*/KHR*/7": "{#Alt_L(Shift_L(Super_L(Control_L(7))))}",
"THRA*/STP*/KPH*/KHR*/8": "{#Alt_L(Shift_L(Super_L(Control_L(8))))}",
"THRA*/STP*/KPH*/KHR*/9": "{#Alt_L(Shift_L(Super_L(Control_L(9))))}",
"THRA*/STP*/KPH*/KHR*/KH-FG": "{#Alt_L(Shift_L(Super_L(Control_L(grave))))}",
"THRA*/STP*/KPH*/KHR*/KW-BG": "{#Alt_L(Shift_L(Super_L(Control_L(comma))))}",
"THRA*/STP*/KPH*/KHR*/PR*EPB": "{#Alt_L(Shift_L(Super_L(Control_L(parenright))))}",
"THRA*/STP*/KPH*/KHR*/PREPB": "{#Alt_L(Shift_L(Super_L(Control_L(parenleft))))}",
"THRA*/STP*/KPH*/KHR*/PW*FP": "{#Alt_L(Shift_L(Super_L(Control_L(BackSpace))))}",
"THRA*/STP*/KPH*/KHR*/PWR*BGT": "{#Alt_L(Shift_L(Super_L(Control_L(bracketright))))}",
"THRA*/STP*/KPH*/KHR*/PWR-BGT": "{#Alt_L(Shift_L(Super_L(Control_L(bracketleft))))}",
"THRA*/STP*/KPH*/KHR*/R-R": "{#Alt_L(Shift_L(Super_L(Control_L(Return))))}",
"THRA*/STP*/KPH*/KHR*/S-P": "{#Alt_L(Shift_L(Super_L(Control_L(space))))}",
"THRA*/STP*/KPH*/KHR*/SP*S": "{#Alt_L(Shift_L(Super_L(Control_L())))}",
"THRA*/STP*/KPH*/KHR*/SPWHRAERB": "{#Alt_L(Shift_L(Super_L(Control_L(backslash))))}",
"THRA*/STP*/KPH*/KHR*/STPH-G": "{#Alt_L(Shift_L(Super_L(Control_L(Right))))}",
"THRA*/STP*/KPH*/KHR*/STPH-B": "{#Alt_L(Shift_L(Super_L(Control_L(Down))))}",
"THRA*/STP*/KPH*/KHR*/STPH-P": "{#Alt_L(Shift_L(Super_L(Control_L(Up))))}",
"THRA*/STP*/KPH*/KHR*/STPH-R": "{#Alt_L(Shift_L(Super_L(Control_L(Left))))}",
"THRA*/STP*/KPH*/KHR*/TA*B": "{#Alt_L(Shift_L(Super_L(Control_L(Tab))))}",
"THRA*/STP*/KPH*/KHR*/TKHRAO*ET": "{#Alt_L(Shift_L(Super_L(Control_L(Delete))))}",
"THRA*/A*": "{#Alt_L(a)}",
"THRA*/PW*": "{#Alt_L(b)}",
"THRA*/KR*": "{#Alt_L(c)}",
"THRA*/TK*": "{#Alt_L(d)}",
"THRA*/*E": "{#Alt_L(e)}",
"THRA*/TP*": "{#Alt_L(f)}",
"THRA*/TKPW*": "{#Alt_L(g)}",
"THRA*/H*": "{#Alt_L(h)}",
"THRA*/*EU": "{#Alt_L(i)}",
"THRA*/SKWR*": "{#Alt_L(j)}",
"THRA*/K*": "{#Alt_L(k)}",
"THRA*/HR*": "{#Alt_L(l)}",
"THRA*/PH*": "{#Alt_L(m)}",
"THRA*/TPH*": "{#Alt_L(n)}",
"THRA*/O*": "{#Alt_L(o)}",
"THRA*/P*": "{#Alt_L(p)}",
"THRA*/KW*": "{#Alt_L(q)}",
"THRA*/R*": "{#Alt_L(r)}",
"THRA*/S*": "{#Alt_L(s)}",
"THRA*/T*": "{#Alt_L(t)}",
"THRA*/*U": "{#Alt_L(u)}",
"THRA*/SR*": "{#Alt_L(v)}",
"THRA*/W*": "{#Alt_L(w)}",
"THRA*/KP*": "{#Alt_L(x)}",
"THRA*/KWR*": "{#Alt_L(y)}",
"THRA*/STKPW*": "{#Alt_L(z)}",
"THRA*/0": "{#Alt_L(0)}",
"THRA*/1": "{#Alt_L(1)}",
"THRA*/2": "{#Alt_L(2)}",
"THRA*/3": "{#Alt_L(3)}",
"THRA*/4": "{#Alt_L(4)}",
"THRA*/5": "{#Alt_L(5)}",
"THRA*/6": "{#Alt_L(6)}",
"THRA*/7": "{#Alt_L(7)}",
"THRA*/8": "{#Alt_L(8)}",
"THRA*/9": "{#Alt_L(9)}",
"THRA*/KH-FG": "{#Alt_L(grave)}",
"THRA*/KW-BG": "{#Alt_L(comma)}",
"THRA*/PR*EPB": "{#Alt_L(parenright)}",
"THRA*/PREPB": "{#Alt_L(parenleft)}",
"THRA*/PW*FP": "{#Alt_L(BackSpace)}",
"THRA*/PWR*BGT": "{#Alt_L(bracketright)}",
"THRA*/PWR-BGT": "{#Alt_L(bracketleft)}",
"THRA*/R-R": "{#Alt_L(Return)}",
"THRA*/S-P": "{#Alt_L(space)}",
"THRA*/SP*S": "{#Alt_L()}",
"THRA*/SPWHRAERB": "{#Alt_L(backslash)}",
"THRA*/STPH-G": "{#Alt_L(Right)}",
"THRA*/STPH-B": "{#Alt_L(Down)}",
"THRA*/STPH-P": "{#Alt_L(Up)}",
"THRA*/STPH-R": "{#Alt_L(Left)}",
"THRA*/TA*B": "{#Alt_L(Tab)}",
"THRA*/TKHRAO*ET": "{#Alt_L(Delete)}",
"KPH*/THRA*/A*": "{#Super_L(Alt_L(a))}",
"KPH*/THRA*/PW*": "{#Super_L(Alt_L(b))}",
"KPH*/THRA*/KR*": "{#Super_L(Alt_L(c))}",
"KPH*/THRA*/TK*": "{#Super_L(Alt_L(d))}",
"KPH*/THRA*/*E": "{#Super_L(Alt_L(e))}",
"KPH*/THRA*/TP*": "{#Super_L(Alt_L(f))}",
"KPH*/THRA*/TKPW*": "{#Super_L(Alt_L(g))}",
"KPH*/THRA*/H*": "{#Super_L(Alt_L(h))}",
"KPH*/THRA*/*EU": "{#Super_L(Alt_L(i))}",
"KPH*/THRA*/SKWR*": "{#Super_L(Alt_L(j))}",
"KPH*/THRA*/K*": "{#Super_L(Alt_L(k))}",
"KPH*/THRA*/HR*": "{#Super_L(Alt_L(l))}",
"KPH*/THRA*/PH*": "{#Super_L(Alt_L(m))}",
"KPH*/THRA*/TPH*": "{#Super_L(Alt_L(n))}",
"KPH*/THRA*/O*": "{#Super_L(Alt_L(o))}",
"KPH*/THRA*/P*": "{#Super_L(Alt_L(p))}",
"KPH*/THRA*/KW*": "{#Super_L(Alt_L(q))}",
"KPH*/THRA*/R*": "{#Super_L(Alt_L(r))}",
"KPH*/THRA*/S*": "{#Super_L(Alt_L(s))}",
"KPH*/THRA*/T*": "{#Super_L(Alt_L(t))}",
"KPH*/THRA*/*U": "{#Super_L(Alt_L(u))}",
"KPH*/THRA*/SR*": "{#Super_L(Alt_L(v))}",
"KPH*/THRA*/W*": "{#Super_L(Alt_L(w))}",
"KPH*/THRA*/KP*": "{#Super_L(Alt_L(x))}",
"KPH*/THRA*/KWR*": "{#Super_L(Alt_L(y))}",
"KPH*/THRA*/STKPW*": "{#Super_L(Alt_L(z))}",
"KPH*/THRA*/0": "{#Super_L(Alt_L(0))}",
"KPH*/THRA*/1": "{#Super_L(Alt_L(1))}",
"KPH*/THRA*/2": "{#Super_L(Alt_L(2))}",
"KPH*/THRA*/3": "{#Super_L(Alt_L(3))}",
"KPH*/THRA*/4": "{#Super_L(Alt_L(4))}",
"KPH*/THRA*/5": "{#Super_L(Alt_L(5))}",
"KPH*/THRA*/6": "{#Super_L(Alt_L(6))}",
"KPH*/THRA*/7": "{#Super_L(Alt_L(7))}",
"KPH*/THRA*/8": "{#Super_L(Alt_L(8))}",
"KPH*/THRA*/9": "{#Super_L(Alt_L(9))}",
"KPH*/THRA*/KH-FG": "{#Super_L(Alt_L(grave))}",
"KPH*/THRA*/KW-BG": "{#Super_L(Alt_L(comma))}",
"KPH*/THRA*/PR*EPB": "{#Super_L(Alt_L(parenright))}",
"KPH*/THRA*/PREPB": "{#Super_L(Alt_L(parenleft))}",
"KPH*/THRA*/PW*FP": "{#Super_L(Alt_L(BackSpace))}",
"KPH*/THRA*/PWR*BGT": "{#Super_L(Alt_L(bracketright))}",
"KPH*/THRA*/PWR-BGT": "{#Super_L(Alt_L(bracketleft))}",
"KPH*/THRA*/R-R": "{#Super_L(Alt_L(Return))}",
"KPH*/THRA*/S-P": "{#Super_L(Alt_L(space))}",
"KPH*/THRA*/SP*S": "{#Super_L(Alt_L())}",
"KPH*/THRA*/SPWHRAERB": "{#Super_L(Alt_L(backslash))}",
"KPH*/THRA*/STPH-G": "{#Super_L(Alt_L(Right))}",
"KPH*/THRA*/STPH-B": "{#Super_L(Alt_L(Down))}",
"KPH*/THRA*/STPH-P": "{#Super_L(Alt_L(Up))}",
"KPH*/THRA*/STPH-R": "{#Super_L(Alt_L(Left))}",
"KPH*/THRA*/TA*B": "{#Super_L(Alt_L(Tab))}",
"KPH*/THRA*/TKHRAO*ET": "{#Super_L(Alt_L(Delete))}",
"KPH*/A*": "{#Super_L(a)}",
"KPH*/PW*": "{#Super_L(b)}",
"KPH*/KR*": "{#Super_L(c)}",
"KPH*/TK*": "{#Super_L(d)}",
"KPH*/*E": "{#Super_L(e)}",
"KPH*/TP*": "{#Super_L(f)}",
"KPH*/TKPW*": "{#Super_L(g)}",
"KPH*/H*": "{#Super_L(h)}",
"KPH*/*EU": "{#Super_L(i)}",
"KPH*/SKWR*": "{#Super_L(j)}",
"KPH*/K*": "{#Super_L(k)}",
"KPH*/HR*": "{#Super_L(l)}",
"KPH*/PH*": "{#Super_L(m)}",
"KPH*/TPH*": "{#Super_L(n)}",
"KPH*/O*": "{#Super_L(o)}",
"KPH*/P*": "{#Super_L(p)}",
"KPH*/KW*": "{#Super_L(q)}",
"KPH*/R*": "{#Super_L(r)}",
"KPH*/S*": "{#Super_L(s)}",
"KPH*/T*": "{#Super_L(t)}",
"KPH*/*U": "{#Super_L(u)}",
"KPH*/SR*": "{#Super_L(v)}",
"KPH*/W*": "{#Super_L(w)}",
"KPH*/KP*": "{#Super_L(x)}",
"KPH*/KWR*": "{#Super_L(y)}",
"KPH*/STKPW*": "{#Super_L(z)}",
"KPH*/0": "{#Super_L(0)}",
"KPH*/1": "{#Super_L(1)}",
"KPH*/2": "{#Super_L(2)}",
"KPH*/3": "{#Super_L(3)}",
"KPH*/4": "{#Super_L(4)}",
"KPH*/5": "{#Super_L(5)}",
"KPH*/6": "{#Super_L(6)}",
"KPH*/7": "{#Super_L(7)}",
"KPH*/8": "{#Super_L(8)}",
"KPH*/9": "{#Super_L(9)}",
"KPH*/KH-FG": "{#Super_L(grave)}",
"KPH*/KW-BG": "{#Super_L(comma)}",
"KPH*/PR*EPB": "{#Super_L(parenright)}",
"KPH*/PREPB": "{#Super_L(parenleft)}",
"KPH*/PW*FP": "{#Super_L(BackSpace)}",
"KPH*/PWR*BGT": "{#Super_L(bracketright)}",
"KPH*/PWR-BGT": "{#Super_L(bracketleft)}",
"KPH*/R-R": "{#Super_L(Return)}",
"KPH*/S-P": "{#Super_L(space)}",
"KPH*/SP*S": "{#Super_L()}",
"KPH*/SPWHRAERB": "{#Super_L(backslash)}",
"KPH*/STPH-G": "{#Super_L(Right)}",
"KPH*/STPH-B": "{#Super_L(Down)}",
"KPH*/STPH-P": "{#Super_L(Up)}",
"KPH*/STPH-R": "{#Super_L(Left)}",
"KPH*/TA*B": "{#Super_L(Tab)}",
"KPH*/TKHRAO*ET": "{#Super_L(Delete)}",
"THRA*/KPH*/A*": "{#Alt_L(Super_L(a))}",
"THRA*/KPH*/PW*": "{#Alt_L(Super_L(b))}",
"THRA*/KPH*/KR*": "{#Alt_L(Super_L(c))}",
"THRA*/KPH*/TK*": "{#Alt_L(Super_L(d))}",
"THRA*/KPH*/*E": "{#Alt_L(Super_L(e))}",
"THRA*/KPH*/TP*": "{#Alt_L(Super_L(f))}",
"THRA*/KPH*/TKPW*": "{#Alt_L(Super_L(g))}",
"THRA*/KPH*/H*": "{#Alt_L(Super_L(h))}",
"THRA*/KPH*/*EU": "{#Alt_L(Super_L(i))}",
"THRA*/KPH*/SKWR*": "{#Alt_L(Super_L(j))}",
"THRA*/KPH*/K*": "{#Alt_L(Super_L(k))}",
"THRA*/KPH*/HR*": "{#Alt_L(Super_L(l))}",
"THRA*/KPH*/PH*": "{#Alt_L(Super_L(m))}",
"THRA*/KPH*/TPH*": "{#Alt_L(Super_L(n))}",
"THRA*/KPH*/O*": "{#Alt_L(Super_L(o))}",
"THRA*/KPH*/P*": "{#Alt_L(Super_L(p))}",
"THRA*/KPH*/KW*": "{#Alt_L(Super_L(q))}",
"THRA*/KPH*/R*": "{#Alt_L(Super_L(r))}",
"THRA*/KPH*/S*": "{#Alt_L(Super_L(s))}",
"THRA*/KPH*/T*": "{#Alt_L(Super_L(t))}",
"THRA*/KPH*/*U": "{#Alt_L(Super_L(u))}",
"THRA*/KPH*/SR*": "{#Alt_L(Super_L(v))}",
"THRA*/KPH*/W*": "{#Alt_L(Super_L(w))}",
"THRA*/KPH*/KP*": "{#Alt_L(Super_L(x))}",
"THRA*/KPH*/KWR*": "{#Alt_L(Super_L(y))}",
"THRA*/KPH*/STKPW*": "{#Alt_L(Super_L(z))}",
"THRA*/KPH*/0": "{#Alt_L(Super_L(0))}",
"THRA*/KPH*/1": "{#Alt_L(Super_L(1))}",
"THRA*/KPH*/2": "{#Alt_L(Super_L(2))}",
"THRA*/KPH*/3": "{#Alt_L(Super_L(3))}",
"THRA*/KPH*/4": "{#Alt_L(Super_L(4))}",
"THRA*/KPH*/5": "{#Alt_L(Super_L(5))}",
"THRA*/KPH*/6": "{#Alt_L(Super_L(6))}",
"THRA*/KPH*/7": "{#Alt_L(Super_L(7))}",
"THRA*/KPH*/8": "{#Alt_L(Super_L(8))}",
"THRA*/KPH*/9": "{#Alt_L(Super_L(9))}",
"THRA*/KPH*/KH-FG": "{#Alt_L(Super_L(grave))}",
"THRA*/KPH*/KW-BG": "{#Alt_L(Super_L(comma))}",
"THRA*/KPH*/PR*EPB": "{#Alt_L(Super_L(parenright))}",
"THRA*/KPH*/PREPB": "{#Alt_L(Super_L(parenleft))}",
"THRA*/KPH*/PW*FP": "{#Alt_L(Super_L(BackSpace))}",
"THRA*/KPH*/PWR*BGT": "{#Alt_L(Super_L(bracketright))}",
"THRA*/KPH*/PWR-BGT": "{#Alt_L(Super_L(bracketleft))}",
"THRA*/KPH*/R-R": "{#Alt_L(Super_L(Return))}",
"THRA*/KPH*/S-P": "{#Alt_L(Super_L(space))}",
"THRA*/KPH*/SP*S": "{#Alt_L(Super_L())}",
"THRA*/KPH*/SPWHRAERB": "{#Alt_L(Super_L(backslash))}",
"THRA*/KPH*/STPH-G": "{#Alt_L(Super_L(Right))}",
"THRA*/KPH*/STPH-B": "{#Alt_L(Super_L(Down))}",
"THRA*/KPH*/STPH-P": "{#Alt_L(Super_L(Up))}",
"THRA*/KPH*/STPH-R": "{#Alt_L(Super_L(Left))}",
"THRA*/KPH*/TA*B": "{#Alt_L(Super_L(Tab))}",
"THRA*/KPH*/TKHRAO*ET": "{#Alt_L(Super_L(Delete))}",
"KHR*/THRA*/A*": "{#Control_L(Alt_L(a))}",
"KHR*/THRA*/PW*": "{#Control_L(Alt_L(b))}",
"KHR*/THRA*/KR*": "{#Control_L(Alt_L(c))}",
"KHR*/THRA*/TK*": "{#Control_L(Alt_L(d))}",
"KHR*/THRA*/*E": "{#Control_L(Alt_L(e))}",
"KHR*/THRA*/TP*": "{#Control_L(Alt_L(f))}",
"KHR*/THRA*/TKPW*": "{#Control_L(Alt_L(g))}",
"KHR*/THRA*/H*": "{#Control_L(Alt_L(h))}",
"KHR*/THRA*/*EU": "{#Control_L(Alt_L(i))}",
"KHR*/THRA*/SKWR*": "{#Control_L(Alt_L(j))}",
"KHR*/THRA*/K*": "{#Control_L(Alt_L(k))}",
"KHR*/THRA*/HR*": "{#Control_L(Alt_L(l))}",
"KHR*/THRA*/PH*": "{#Control_L(Alt_L(m))}",
"KHR*/THRA*/TPH*": "{#Control_L(Alt_L(n))}",
"KHR*/THRA*/O*": "{#Control_L(Alt_L(o))}",
"KHR*/THRA*/P*": "{#Control_L(Alt_L(p))}",
"KHR*/THRA*/KW*": "{#Control_L(Alt_L(q))}",
"KHR*/THRA*/R*": "{#Control_L(Alt_L(r))}",
"KHR*/THRA*/S*": "{#Control_L(Alt_L(s))}",
"KHR*/THRA*/T*": "{#Control_L(Alt_L(t))}",
"KHR*/THRA*/*U": "{#Control_L(Alt_L(u))}",
"KHR*/THRA*/SR*": "{#Control_L(Alt_L(v))}",
"KHR*/THRA*/W*": "{#Control_L(Alt_L(w))}",
"KHR*/THRA*/KP*": "{#Control_L(Alt_L(x))}",
"KHR*/THRA*/KWR*": "{#Control_L(Alt_L(y))}",
"KHR*/THRA*/STKPW*": "{#Control_L(Alt_L(z))}",
"KHR*/THRA*/0": "{#Control_L(Alt_L(0))}",
"KHR*/THRA*/1": "{#Control_L(Alt_L(1))}",
"KHR*/THRA*/2": "{#Control_L(Alt_L(2))}",
"KHR*/THRA*/3": "{#Control_L(Alt_L(3))}",
"KHR*/THRA*/4": "{#Control_L(Alt_L(4))}",
"KHR*/THRA*/5": "{#Control_L(Alt_L(5))}",
"KHR*/THRA*/6": "{#Control_L(Alt_L(6))}",
"KHR*/THRA*/7": "{#Control_L(Alt_L(7))}",
"KHR*/THRA*/8": "{#Control_L(Alt_L(8))}",
"KHR*/THRA*/9": "{#Control_L(Alt_L(9))}",
"KHR*/THRA*/KH-FG": "{#Control_L(Alt_L(grave))}",
"KHR*/THRA*/KW-BG": "{#Control_L(Alt_L(comma))}",
"KHR*/THRA*/PR*EPB": "{#Control_L(Alt_L(parenright))}",
"KHR*/THRA*/PREPB": "{#Control_L(Alt_L(parenleft))}",
"KHR*/THRA*/PW*FP": "{#Control_L(Alt_L(BackSpace))}",
"KHR*/THRA*/PWR*BGT": "{#Control_L(Alt_L(bracketright))}",
"KHR*/THRA*/PWR-BGT": "{#Control_L(Alt_L(bracketleft))}",
"KHR*/THRA*/R-R": "{#Control_L(Alt_L(Return))}",
"KHR*/THRA*/S-P": "{#Control_L(Alt_L(space))}",
"KHR*/THRA*/SP*S": "{#Control_L(Alt_L())}",
"KHR*/THRA*/SPWHRAERB": "{#Control_L(Alt_L(backslash))}",
"KHR*/THRA*/STPH-G": "{#Control_L(Alt_L(Right))}",
"KHR*/THRA*/STPH-B": "{#Control_L(Alt_L(Down))}",
"KHR*/THRA*/STPH-P": "{#Control_L(Alt_L(Up))}",
"KHR*/THRA*/STPH-R": "{#Control_L(Alt_L(Left))}",
"KHR*/THRA*/TA*B": "{#Control_L(Alt_L(Tab))}",
"KHR*/THRA*/TKHRAO*ET": "{#Control_L(Alt_L(Delete))}",
"KHR*/KPH*/THRA*/A*": "{#Control_L(Super_L(Alt_L(a)))}",
"KHR*/KPH*/THRA*/PW*": "{#Control_L(Super_L(Alt_L(b)))}",
"KHR*/KPH*/THRA*/KR*": "{#Control_L(Super_L(Alt_L(c)))}",
"KHR*/KPH*/THRA*/TK*": "{#Control_L(Super_L(Alt_L(d)))}",
"KHR*/KPH*/THRA*/*E": "{#Control_L(Super_L(Alt_L(e)))}",
"KHR*/KPH*/THRA*/TP*": "{#Control_L(Super_L(Alt_L(f)))}",
"KHR*/KPH*/THRA*/TKPW*": "{#Control_L(Super_L(Alt_L(g)))}",
"KHR*/KPH*/THRA*/H*": "{#Control_L(Super_L(Alt_L(h)))}",
"KHR*/KPH*/THRA*/*EU": "{#Control_L(Super_L(Alt_L(i)))}",
"KHR*/KPH*/THRA*/SKWR*": "{#Control_L(Super_L(Alt_L(j)))}",
"KHR*/KPH*/THRA*/K*": "{#Control_L(Super_L(Alt_L(k)))}",
"KHR*/KPH*/THRA*/HR*": "{#Control_L(Super_L(Alt_L(l)))}",
"KHR*/KPH*/THRA*/PH*": "{#Control_L(Super_L(Alt_L(m)))}",
"KHR*/KPH*/THRA*/TPH*": "{#Control_L(Super_L(Alt_L(n)))}",
"KHR*/KPH*/THRA*/O*": "{#Control_L(Super_L(Alt_L(o)))}",
"KHR*/KPH*/THRA*/P*": "{#Control_L(Super_L(Alt_L(p)))}",
"KHR*/KPH*/THRA*/KW*": "{#Control_L(Super_L(Alt_L(q)))}",
"KHR*/KPH*/THRA*/R*": "{#Control_L(Super_L(Alt_L(r)))}",
"KHR*/KPH*/THRA*/S*": "{#Control_L(Super_L(Alt_L(s)))}",
"KHR*/KPH*/THRA*/T*": "{#Control_L(Super_L(Alt_L(t)))}",
"KHR*/KPH*/THRA*/*U": "{#Control_L(Super_L(Alt_L(u)))}",
"KHR*/KPH*/THRA*/SR*": "{#Control_L(Super_L(Alt_L(v)))}",
"KHR*/KPH*/THRA*/W*": "{#Control_L(Super_L(Alt_L(w)))}",
"KHR*/KPH*/THRA*/KP*": "{#Control_L(Super_L(Alt_L(x)))}",
"KHR*/KPH*/THRA*/KWR*": "{#Control_L(Super_L(Alt_L(y)))}",
"KHR*/KPH*/THRA*/STKPW*": "{#Control_L(Super_L(Alt_L(z)))}",
"KHR*/KPH*/THRA*/0": "{#Control_L(Super_L(Alt_L(0)))}",
"KHR*/KPH*/THRA*/1": "{#Control_L(Super_L(Alt_L(1)))}",
"KHR*/KPH*/THRA*/2": "{#Control_L(Super_L(Alt_L(2)))}",
"KHR*/KPH*/THRA*/3": "{#Control_L(Super_L(Alt_L(3)))}",
"KHR*/KPH*/THRA*/4": "{#Control_L(Super_L(Alt_L(4)))}",
"KHR*/KPH*/THRA*/5": "{#Control_L(Super_L(Alt_L(5)))}",
"KHR*/KPH*/THRA*/6": "{#Control_L(Super_L(Alt_L(6)))}",
"KHR*/KPH*/THRA*/7": "{#Control_L(Super_L(Alt_L(7)))}",
"KHR*/KPH*/THRA*/8": "{#Control_L(Super_L(Alt_L(8)))}",
"KHR*/KPH*/THRA*/9": "{#Control_L(Super_L(Alt_L(9)))}",
"KHR*/KPH*/THRA*/KH-FG": "{#Control_L(Super_L(Alt_L(grave)))}",
"KHR*/KPH*/THRA*/KW-BG": "{#Control_L(Super_L(Alt_L(comma)))}",
"KHR*/KPH*/THRA*/PR*EPB": "{#Control_L(Super_L(Alt_L(parenright)))}",
"KHR*/KPH*/THRA*/PREPB": "{#Control_L(Super_L(Alt_L(parenleft)))}",
"KHR*/KPH*/THRA*/PW*FP": "{#Control_L(Super_L(Alt_L(BackSpace)))}",
"KHR*/KPH*/THRA*/PWR*BGT": "{#Control_L(Super_L(Alt_L(bracketright)))}",
"KHR*/KPH*/THRA*/PWR-BGT": "{#Control_L(Super_L(Alt_L(bracketleft)))}",
"KHR*/KPH*/THRA*/R-R": "{#Control_L(Super_L(Alt_L(Return)))}",
"KHR*/KPH*/THRA*/S-P": "{#Control_L(Super_L(Alt_L(space)))}",
"KHR*/KPH*/THRA*/SP*S": "{#Control_L(Super_L(Alt_L()))}",
"KHR*/KPH*/THRA*/SPWHRAERB": "{#Control_L(Super_L(Alt_L(backslash)))}",
"KHR*/KPH*/THRA*/STPH-G": "{#Control_L(Super_L(Alt_L(Right)))}",
"KHR*/KPH*/THRA*/STPH-B": "{#Control_L(Super_L(Alt_L(Down)))}",
"KHR*/KPH*/THRA*/STPH-P": "{#Control_L(Super_L(Alt_L(Up)))}",
"KHR*/KPH*/THRA*/STPH-R": "{#Control_L(Super_L(Alt_L(Left)))}",
"KHR*/KPH*/THRA*/TA*B": "{#Control_L(Super_L(Alt_L(Tab)))}",
"KHR*/KPH*/THRA*/TKHRAO*ET": "{#Control_L(Super_L(Alt_L(Delete)))}",
"KHR*/KPH*/A*": "{#Control_L(Super_L(a))}",
"KHR*/KPH*/PW*": "{#Control_L(Super_L(b))}",
"KHR*/KPH*/KR*": "{#Control_L(Super_L(c))}",
"KHR*/KPH*/TK*": "{#Control_L(Super_L(d))}",
"KHR*/KPH*/*E": "{#Control_L(Super_L(e))}",
"KHR*/KPH*/TP*": "{#Control_L(Super_L(f))}",
"KHR*/KPH*/TKPW*": "{#Control_L(Super_L(g))}",
"KHR*/KPH*/H*": "{#Control_L(Super_L(h))}",
"KHR*/KPH*/*EU": "{#Control_L(Super_L(i))}",
"KHR*/KPH*/SKWR*": "{#Control_L(Super_L(j))}",
"KHR*/KPH*/K*": "{#Control_L(Super_L(k))}",
"KHR*/KPH*/HR*": "{#Control_L(Super_L(l))}",
"KHR*/KPH*/PH*": "{#Control_L(Super_L(m))}",
"KHR*/KPH*/TPH*": "{#Control_L(Super_L(n))}",
"KHR*/KPH*/O*": "{#Control_L(Super_L(o))}",
"KHR*/KPH*/P*": "{#Control_L(Super_L(p))}",
"KHR*/KPH*/KW*": "{#Control_L(Super_L(q))}",
"KHR*/KPH*/R*": "{#Control_L(Super_L(r))}",
"KHR*/KPH*/S*": "{#Control_L(Super_L(s))}",
"KHR*/KPH*/T*": "{#Control_L(Super_L(t))}",
"KHR*/KPH*/*U": "{#Control_L(Super_L(u))}",
"KHR*/KPH*/SR*": "{#Control_L(Super_L(v))}",
"KHR*/KPH*/W*": "{#Control_L(Super_L(w))}",
"KHR*/KPH*/KP*": "{#Control_L(Super_L(x))}",
"KHR*/KPH*/KWR*": "{#Control_L(Super_L(y))}",
"KHR*/KPH*/STKPW*": "{#Control_L(Super_L(z))}",
"KHR*/KPH*/0": "{#Control_L(Super_L(0))}",
"KHR*/KPH*/1": "{#Control_L(Super_L(1))}",
"KHR*/KPH*/2": "{#Control_L(Super_L(2))}",
"KHR*/KPH*/3": "{#Control_L(Super_L(3))}",
"KHR*/KPH*/4": "{#Control_L(Super_L(4))}",
"KHR*/KPH*/5": "{#Control_L(Super_L(5))}",
"KHR*/KPH*/6": "{#Control_L(Super_L(6))}",
"KHR*/KPH*/7": "{#Control_L(Super_L(7))}",
"KHR*/KPH*/8": "{#Control_L(Super_L(8))}",
"KHR*/KPH*/9": "{#Control_L(Super_L(9))}",
"KHR*/KPH*/KH-FG": "{#Control_L(Super_L(grave))}",
"KHR*/KPH*/KW-BG": "{#Control_L(Super_L(comma))}",
"KHR*/KPH*/PR*EPB": "{#Control_L(Super_L(parenright))}",
"KHR*/KPH*/PREPB": "{#Control_L(Super_L(parenleft))}",
"KHR*/KPH*/PW*FP": "{#Control_L(Super_L(BackSpace))}",
"KHR*/KPH*/PWR*BGT": "{#Control_L(Super_L(bracketright))}",
"KHR*/KPH*/PWR-BGT": "{#Control_L(Super_L(bracketleft))}",
"KHR*/KPH*/R-R": "{#Control_L(Super_L(Return))}",
"KHR*/KPH*/S-P": "{#Control_L(Super_L(space))}",
"KHR*/KPH*/SP*S": "{#Control_L(Super_L())}",
"KHR*/KPH*/SPWHRAERB": "{#Control_L(Super_L(backslash))}",
"KHR*/KPH*/STPH-G": "{#Control_L(Super_L(Right))}",
"KHR*/KPH*/STPH-B": "{#Control_L(Super_L(Down))}",
"KHR*/KPH*/STPH-P": "{#Control_L(Super_L(Up))}",
"KHR*/KPH*/STPH-R": "{#Control_L(Super_L(Left))}",
"KHR*/KPH*/TA*B": "{#Control_L(Super_L(Tab))}",
"KHR*/KPH*/TKHRAO*ET": "{#Control_L(Super_L(Delete))}",
"KHR*/THRA*/KPH*/A*": "{#Control_L(Alt_L(Super_L(a)))}",
"KHR*/THRA*/KPH*/PW*": "{#Control_L(Alt_L(Super_L(b)))}",
"KHR*/THRA*/KPH*/KR*": "{#Control_L(Alt_L(Super_L(c)))}",
"KHR*/THRA*/KPH*/TK*": "{#Control_L(Alt_L(Super_L(d)))}",
"KHR*/THRA*/KPH*/*E": "{#Control_L(Alt_L(Super_L(e)))}",
"KHR*/THRA*/KPH*/TP*": "{#Control_L(Alt_L(Super_L(f)))}",
"KHR*/THRA*/KPH*/TKPW*": "{#Control_L(Alt_L(Super_L(g)))}",
"KHR*/THRA*/KPH*/H*": "{#Control_L(Alt_L(Super_L(h)))}",
"KHR*/THRA*/KPH*/*EU": "{#Control_L(Alt_L(Super_L(i)))}",
"KHR*/THRA*/KPH*/SKWR*": "{#Control_L(Alt_L(Super_L(j)))}",
"KHR*/THRA*/KPH*/K*": "{#Control_L(Alt_L(Super_L(k)))}",
"KHR*/THRA*/KPH*/HR*": "{#Control_L(Alt_L(Super_L(l)))}",
"KHR*/THRA*/KPH*/PH*": "{#Control_L(Alt_L(Super_L(m)))}",
"KHR*/THRA*/KPH*/TPH*": "{#Control_L(Alt_L(Super_L(n)))}",
"KHR*/THRA*/KPH*/O*": "{#Control_L(Alt_L(Super_L(o)))}",
"KHR*/THRA*/KPH*/P*": "{#Control_L(Alt_L(Super_L(p)))}",
"KHR*/THRA*/KPH*/KW*": "{#Control_L(Alt_L(Super_L(q)))}",
"KHR*/THRA*/KPH*/R*": "{#Control_L(Alt_L(Super_L(r)))}",
"KHR*/THRA*/KPH*/S*": "{#Control_L(Alt_L(Super_L(s)))}",
"KHR*/THRA*/KPH*/T*": "{#Control_L(Alt_L(Super_L(t)))}",
"KHR*/THRA*/KPH*/*U": "{#Control_L(Alt_L(Super_L(u)))}",
"KHR*/THRA*/KPH*/SR*": "{#Control_L(Alt_L(Super_L(v)))}",
"KHR*/THRA*/KPH*/W*": "{#Control_L(Alt_L(Super_L(w)))}",
"KHR*/THRA*/KPH*/KP*": "{#Control_L(Alt_L(Super_L(x)))}",
"KHR*/THRA*/KPH*/KWR*": "{#Control_L(Alt_L(Super_L(y)))}",
"KHR*/THRA*/KPH*/STKPW*": "{#Control_L(Alt_L(Super_L(z)))}",
"KHR*/THRA*/KPH*/0": "{#Control_L(Alt_L(Super_L(0)))}",
"KHR*/THRA*/KPH*/1": "{#Control_L(Alt_L(Super_L(1)))}",
"KHR*/THRA*/KPH*/2": "{#Control_L(Alt_L(Super_L(2)))}",
"KHR*/THRA*/KPH*/3": "{#Control_L(Alt_L(Super_L(3)))}",
"KHR*/THRA*/KPH*/4": "{#Control_L(Alt_L(Super_L(4)))}",
"KHR*/THRA*/KPH*/5": "{#Control_L(Alt_L(Super_L(5)))}",
"KHR*/THRA*/KPH*/6": "{#Control_L(Alt_L(Super_L(6)))}",
"KHR*/THRA*/KPH*/7": "{#Control_L(Alt_L(Super_L(7)))}",
"KHR*/THRA*/KPH*/8": "{#Control_L(Alt_L(Super_L(8)))}",
"KHR*/THRA*/KPH*/9": "{#Control_L(Alt_L(Super_L(9)))}",
"KHR*/THRA*/KPH*/KH-FG": "{#Control_L(Alt_L(Super_L(grave)))}",
"KHR*/THRA*/KPH*/KW-BG": "{#Control_L(Alt_L(Super_L(comma)))}",
"KHR*/THRA*/KPH*/PR*EPB": "{#Control_L(Alt_L(Super_L(parenright)))}",
"KHR*/THRA*/KPH*/PREPB": "{#Control_L(Alt_L(Super_L(parenleft)))}",
"KHR*/THRA*/KPH*/PW*FP": "{#Control_L(Alt_L(Super_L(BackSpace)))}",
"KHR*/THRA*/KPH*/PWR*BGT": "{#Control_L(Alt_L(Super_L(bracketright)))}",
"KHR*/THRA*/KPH*/PWR-BGT": "{#Control_L(Alt_L(Super_L(bracketleft)))}",
"KHR*/THRA*/KPH*/R-R": "{#Control_L(Alt_L(Super_L(Return)))}",
"KHR*/THRA*/KPH*/S-P": "{#Control_L(Alt_L(Super_L(space)))}",
"KHR*/THRA*/KPH*/SP*S": "{#Control_L(Alt_L(Super_L()))}",
"KHR*/THRA*/KPH*/SPWHRAERB": "{#Control_L(Alt_L(Super_L(backslash)))}",
"KHR*/THRA*/KPH*/STPH-G": "{#Control_L(Alt_L(Super_L(Right)))}",
"KHR*/THRA*/KPH*/STPH-B": "{#Control_L(Alt_L(Super_L(Down)))}",
"KHR*/THRA*/KPH*/STPH-P": "{#Control_L(Alt_L(Super_L(Up)))}",
"KHR*/THRA*/KPH*/STPH-R": "{#Control_L(Alt_L(Super_L(Left)))}",
"KHR*/THRA*/KPH*/TA*B": "{#Control_L(Alt_L(Super_L(Tab)))}",
"KHR*/THRA*/KPH*/TKHRAO*ET": "{#Control_L(Alt_L(Super_L(Delete)))}",
"THRA*/A*": "{#Alt_L(a)}",
"THRA*/PW*": "{#Alt_L(b)}",
"THRA*/KR*": "{#Alt_L(c)}",
"THRA*/TK*": "{#Alt_L(d)}",
"THRA*/*E": "{#Alt_L(e)}",
"THRA*/TP*": "{#Alt_L(f)}",
"THRA*/TKPW*": "{#Alt_L(g)}",
"THRA*/H*": "{#Alt_L(h)}",
"THRA*/*EU": "{#Alt_L(i)}",
"THRA*/SKWR*": "{#Alt_L(j)}",
"THRA*/K*": "{#Alt_L(k)}",
"THRA*/HR*": "{#Alt_L(l)}",
"THRA*/PH*": "{#Alt_L(m)}",
"THRA*/TPH*": "{#Alt_L(n)}",
"THRA*/O*": "{#Alt_L(o)}",
"THRA*/P*": "{#Alt_L(p)}",
"THRA*/KW*": "{#Alt_L(q)}",
"THRA*/R*": "{#Alt_L(r)}",
"THRA*/S*": "{#Alt_L(s)}",
"THRA*/T*": "{#Alt_L(t)}",
"THRA*/*U": "{#Alt_L(u)}",
"THRA*/SR*": "{#Alt_L(v)}",
"THRA*/W*": "{#Alt_L(w)}",
"THRA*/KP*": "{#Alt_L(x)}",
"THRA*/KWR*": "{#Alt_L(y)}",
"THRA*/STKPW*": "{#Alt_L(z)}",
"THRA*/0": "{#Alt_L(0)}",
"THRA*/1": "{#Alt_L(1)}",
"THRA*/2": "{#Alt_L(2)}",
"THRA*/3": "{#Alt_L(3)}",
"THRA*/4": "{#Alt_L(4)}",
"THRA*/5": "{#Alt_L(5)}",
"THRA*/6": "{#Alt_L(6)}",
"THRA*/7": "{#Alt_L(7)}",
"THRA*/8": "{#Alt_L(8)}",
"THRA*/9": "{#Alt_L(9)}",
"THRA*/KH-FG": "{#Alt_L(grave)}",
"THRA*/KW-BG": "{#Alt_L(comma)}",
"THRA*/PR*EPB": "{#Alt_L(parenright)}",
"THRA*/PREPB": "{#Alt_L(parenleft)}",
"THRA*/PW*FP": "{#Alt_L(BackSpace)}",
"THRA*/PWR*BGT": "{#Alt_L(bracketright)}",
"THRA*/PWR-BGT": "{#Alt_L(bracketleft)}",
"THRA*/R-R": "{#Alt_L(Return)}",
"THRA*/S-P": "{#Alt_L(space)}",
"THRA*/SP*S": "{#Alt_L()}",
"THRA*/SPWHRAERB": "{#Alt_L(backslash)}",
"THRA*/STPH-G": "{#Alt_L(Right)}",
"THRA*/STPH-B": "{#Alt_L(Down)}",
"THRA*/STPH-P": "{#Alt_L(Up)}",
"THRA*/STPH-R": "{#Alt_L(Left)}",
"THRA*/TA*B": "{#Alt_L(Tab)}",
"THRA*/TKHRAO*ET": "{#Alt_L(Delete)}",
"KHR*/THRA*/A*": "{#Control_L(Alt_L(a))}",
"KHR*/THRA*/PW*": "{#Control_L(Alt_L(b))}",
"KHR*/THRA*/KR*": "{#Control_L(Alt_L(c))}",
"KHR*/THRA*/TK*": "{#Control_L(Alt_L(d))}",
"KHR*/THRA*/*E": "{#Control_L(Alt_L(e))}",
"KHR*/THRA*/TP*": "{#Control_L(Alt_L(f))}",
"KHR*/THRA*/TKPW*": "{#Control_L(Alt_L(g))}",
"KHR*/THRA*/H*": "{#Control_L(Alt_L(h))}",
"KHR*/THRA*/*EU": "{#Control_L(Alt_L(i))}",
"KHR*/THRA*/SKWR*": "{#Control_L(Alt_L(j))}",
"KHR*/THRA*/K*": "{#Control_L(Alt_L(k))}",
"KHR*/THRA*/HR*": "{#Control_L(Alt_L(l))}",
"KHR*/THRA*/PH*": "{#Control_L(Alt_L(m))}",
"KHR*/THRA*/TPH*": "{#Control_L(Alt_L(n))}",
"KHR*/THRA*/O*": "{#Control_L(Alt_L(o))}",
"KHR*/THRA*/P*": "{#Control_L(Alt_L(p))}",
"KHR*/THRA*/KW*": "{#Control_L(Alt_L(q))}",
"KHR*/THRA*/R*": "{#Control_L(Alt_L(r))}",
"KHR*/THRA*/S*": "{#Control_L(Alt_L(s))}",
"KHR*/THRA*/T*": "{#Control_L(Alt_L(t))}",
"KHR*/THRA*/*U": "{#Control_L(Alt_L(u))}",
"KHR*/THRA*/SR*": "{#Control_L(Alt_L(v))}",
"KHR*/THRA*/W*": "{#Control_L(Alt_L(w))}",
"KHR*/THRA*/KP*": "{#Control_L(Alt_L(x))}",
"KHR*/THRA*/KWR*": "{#Control_L(Alt_L(y))}",
"KHR*/THRA*/STKPW*": "{#Control_L(Alt_L(z))}",
"KHR*/THRA*/0": "{#Control_L(Alt_L(0))}",
"KHR*/THRA*/1": "{#Control_L(Alt_L(1))}",
"KHR*/THRA*/2": "{#Control_L(Alt_L(2))}",
"KHR*/THRA*/3": "{#Control_L(Alt_L(3))}",
"KHR*/THRA*/4": "{#Control_L(Alt_L(4))}",
"KHR*/THRA*/5": "{#Control_L(Alt_L(5))}",
"KHR*/THRA*/6": "{#Control_L(Alt_L(6))}",
"KHR*/THRA*/7": "{#Control_L(Alt_L(7))}",
"KHR*/THRA*/8": "{#Control_L(Alt_L(8))}",
"KHR*/THRA*/9": "{#Control_L(Alt_L(9))}",
"KHR*/THRA*/KH-FG": "{#Control_L(Alt_L(grave))}",
"KHR*/THRA*/KW-BG": "{#Control_L(Alt_L(comma))}",
"KHR*/THRA*/PR*EPB": "{#Control_L(Alt_L(parenright))}",
"KHR*/THRA*/PREPB": "{#Control_L(Alt_L(parenleft))}",
"KHR*/THRA*/PW*FP": "{#Control_L(Alt_L(BackSpace))}",
"KHR*/THRA*/PWR*BGT": "{#Control_L(Alt_L(bracketright))}",
"KHR*/THRA*/PWR-BGT": "{#Control_L(Alt_L(bracketleft))}",
"KHR*/THRA*/R-R": "{#Control_L(Alt_L(Return))}",
"KHR*/THRA*/S-P": "{#Control_L(Alt_L(space))}",
"KHR*/THRA*/SP*S": "{#Control_L(Alt_L())}",
"KHR*/THRA*/SPWHRAERB": "{#Control_L(Alt_L(backslash))}",
"KHR*/THRA*/STPH-G": "{#Control_L(Alt_L(Right))}",
"KHR*/THRA*/STPH-B": "{#Control_L(Alt_L(Down))}",
"KHR*/THRA*/STPH-P": "{#Control_L(Alt_L(Up))}",
"KHR*/THRA*/STPH-R": "{#Control_L(Alt_L(Left))}",
"KHR*/THRA*/TA*B": "{#Control_L(Alt_L(Tab))}",
"KHR*/THRA*/TKHRAO*ET": "{#Control_L(Alt_L(Delete))}",
"KHR*/A*": "{#Control_L(a)}",
"KHR*/PW*": "{#Control_L(b)}",
"KHR*/KR*": "{#Control_L(c)}",
"KHR*/TK*": "{#Control_L(d)}",
"KHR*/*E": "{#Control_L(e)}",
"KHR*/TP*": "{#Control_L(f)}",
"KHR*/TKPW*": "{#Control_L(g)}",
"KHR*/H*": "{#Control_L(h)}",
"KHR*/*EU": "{#Control_L(i)}",
"KHR*/SKWR*": "{#Control_L(j)}",
"KHR*/K*": "{#Control_L(k)}",
"KHR*/HR*": "{#Control_L(l)}",
"KHR*/PH*": "{#Control_L(m)}",
"KHR*/TPH*": "{#Control_L(n)}",
"KHR*/O*": "{#Control_L(o)}",
"KHR*/P*": "{#Control_L(p)}",
"KHR*/KW*": "{#Control_L(q)}",
"KHR*/R*": "{#Control_L(r)}",
"KHR*/S*": "{#Control_L(s)}",
"KHR*/T*": "{#Control_L(t)}",
"KHR*/*U": "{#Control_L(u)}",
"KHR*/SR*": "{#Control_L(v)}",
"KHR*/W*": "{#Control_L(w)}",
"KHR*/KP*": "{#Control_L(x)}",
"KHR*/KWR*": "{#Control_L(y)}",
"KHR*/STKPW*": "{#Control_L(z)}",
"KHR*/0": "{#Control_L(0)}",
"KHR*/1": "{#Control_L(1)}",
"KHR*/2": "{#Control_L(2)}",
"KHR*/3": "{#Control_L(3)}",
"KHR*/4": "{#Control_L(4)}",
"KHR*/5": "{#Control_L(5)}",
"KHR*/6": "{#Control_L(6)}",
"KHR*/7": "{#Control_L(7)}",
"KHR*/8": "{#Control_L(8)}",
"KHR*/9": "{#Control_L(9)}",
"KHR*/KH-FG": "{#Control_L(grave)}",
"KHR*/KW-BG": "{#Control_L(comma)}",
"KHR*/PR*EPB": "{#Control_L(parenright)}",
"KHR*/PREPB": "{#Control_L(parenleft)}",
"KHR*/PW*FP": "{#Control_L(BackSpace)}",
"KHR*/PWR*BGT": "{#Control_L(bracketright)}",
"KHR*/PWR-BGT": "{#Control_L(bracketleft)}",
"KHR*/R-R": "{#Control_L(Return)}",
"KHR*/S-P": "{#Control_L(space)}",
"KHR*/SP*S": "{#Control_L()}",
"KHR*/SPWHRAERB": "{#Control_L(backslash)}",
"KHR*/STPH-G": "{#Control_L(Right)}",
"KHR*/STPH-B": "{#Control_L(Down)}",
"KHR*/STPH-P": "{#Control_L(Up)}",
"KHR*/STPH-R": "{#Control_L(Left)}",
"KHR*/TA*B": "{#Control_L(Tab)}",
"KHR*/TKHRAO*ET": "{#Control_L(Delete)}",
"THRA*/KHR*/A*": "{#Alt_L(Control_L(a))}",
"THRA*/KHR*/PW*": "{#Alt_L(Control_L(b))}",
"THRA*/KHR*/KR*": "{#Alt_L(Control_L(c))}",
"THRA*/KHR*/TK*": "{#Alt_L(Control_L(d))}",
"THRA*/KHR*/*E": "{#Alt_L(Control_L(e))}",
"THRA*/KHR*/TP*": "{#Alt_L(Control_L(f))}",
"THRA*/KHR*/TKPW*": "{#Alt_L(Control_L(g))}",
"THRA*/KHR*/H*": "{#Alt_L(Control_L(h))}",
"THRA*/KHR*/*EU": "{#Alt_L(Control_L(i))}",
"THRA*/KHR*/SKWR*": "{#Alt_L(Control_L(j))}",
"THRA*/KHR*/K*": "{#Alt_L(Control_L(k))}",
"THRA*/KHR*/HR*": "{#Alt_L(Control_L(l))}",
"THRA*/KHR*/PH*": "{#Alt_L(Control_L(m))}",
"THRA*/KHR*/TPH*": "{#Alt_L(Control_L(n))}",
"THRA*/KHR*/O*": "{#Alt_L(Control_L(o))}",
"THRA*/KHR*/P*": "{#Alt_L(Control_L(p))}",
"THRA*/KHR*/KW*": "{#Alt_L(Control_L(q))}",
"THRA*/KHR*/R*": "{#Alt_L(Control_L(r))}",
"THRA*/KHR*/S*": "{#Alt_L(Control_L(s))}",
"THRA*/KHR*/T*": "{#Alt_L(Control_L(t))}",
"THRA*/KHR*/*U": "{#Alt_L(Control_L(u))}",
"THRA*/KHR*/SR*": "{#Alt_L(Control_L(v))}",
"THRA*/KHR*/W*": "{#Alt_L(Control_L(w))}",
"THRA*/KHR*/KP*": "{#Alt_L(Control_L(x))}",
"THRA*/KHR*/KWR*": "{#Alt_L(Control_L(y))}",
"THRA*/KHR*/STKPW*": "{#Alt_L(Control_L(z))}",
"THRA*/KHR*/0": "{#Alt_L(Control_L(0))}",
"THRA*/KHR*/1": "{#Alt_L(Control_L(1))}",
"THRA*/KHR*/2": "{#Alt_L(Control_L(2))}",
"THRA*/KHR*/3": "{#Alt_L(Control_L(3))}",
"THRA*/KHR*/4": "{#Alt_L(Control_L(4))}",
"THRA*/KHR*/5": "{#Alt_L(Control_L(5))}",
"THRA*/KHR*/6": "{#Alt_L(Control_L(6))}",
"THRA*/KHR*/7": "{#Alt_L(Control_L(7))}",
"THRA*/KHR*/8": "{#Alt_L(Control_L(8))}",
"THRA*/KHR*/9": "{#Alt_L(Control_L(9))}",
"THRA*/KHR*/KH-FG": "{#Alt_L(Control_L(grave))}",
"THRA*/KHR*/KW-BG": "{#Alt_L(Control_L(comma))}",
"THRA*/KHR*/PR*EPB": "{#Alt_L(Control_L(parenright))}",
"THRA*/KHR*/PREPB": "{#Alt_L(Control_L(parenleft))}",
"THRA*/KHR*/PW*FP": "{#Alt_L(Control_L(BackSpace))}",
"THRA*/KHR*/PWR*BGT": "{#Alt_L(Control_L(bracketright))}",
"THRA*/KHR*/PWR-BGT": "{#Alt_L(Control_L(bracketleft))}",
"THRA*/KHR*/R-R": "{#Alt_L(Control_L(Return))}",
"THRA*/KHR*/S-P": "{#Alt_L(Control_L(space))}",
"THRA*/KHR*/SP*S": "{#Alt_L(Control_L())}",
"THRA*/KHR*/SPWHRAERB": "{#Alt_L(Control_L(backslash))}",
"THRA*/KHR*/STPH-G": "{#Alt_L(Control_L(Right))}",
"THRA*/KHR*/STPH-B": "{#Alt_L(Control_L(Down))}",
"THRA*/KHR*/STPH-P": "{#Alt_L(Control_L(Up))}",
"THRA*/KHR*/STPH-R": "{#Alt_L(Control_L(Left))}",
"THRA*/KHR*/TA*B": "{#Alt_L(Control_L(Tab))}",
"THRA*/KHR*/TKHRAO*ET": "{#Alt_L(Control_L(Delete))}",
"KPH*/THRA*/A*": "{#Super_L(Alt_L(a))}",
"KPH*/THRA*/PW*": "{#Super_L(Alt_L(b))}",
"KPH*/THRA*/KR*": "{#Super_L(Alt_L(c))}",
"KPH*/THRA*/TK*": "{#Super_L(Alt_L(d))}",
"KPH*/THRA*/*E": "{#Super_L(Alt_L(e))}",
"KPH*/THRA*/TP*": "{#Super_L(Alt_L(f))}",
"KPH*/THRA*/TKPW*": "{#Super_L(Alt_L(g))}",
"KPH*/THRA*/H*": "{#Super_L(Alt_L(h))}",
"KPH*/THRA*/*EU": "{#Super_L(Alt_L(i))}",
"KPH*/THRA*/SKWR*": "{#Super_L(Alt_L(j))}",
"KPH*/THRA*/K*": "{#Super_L(Alt_L(k))}",
"KPH*/THRA*/HR*": "{#Super_L(Alt_L(l))}",
"KPH*/THRA*/PH*": "{#Super_L(Alt_L(m))}",
"KPH*/THRA*/TPH*": "{#Super_L(Alt_L(n))}",
"KPH*/THRA*/O*": "{#Super_L(Alt_L(o))}",
"KPH*/THRA*/P*": "{#Super_L(Alt_L(p))}",
"KPH*/THRA*/KW*": "{#Super_L(Alt_L(q))}",
"KPH*/THRA*/R*": "{#Super_L(Alt_L(r))}",
"KPH*/THRA*/S*": "{#Super_L(Alt_L(s))}",
"KPH*/THRA*/T*": "{#Super_L(Alt_L(t))}",
"KPH*/THRA*/*U": "{#Super_L(Alt_L(u))}",
"KPH*/THRA*/SR*": "{#Super_L(Alt_L(v))}",
"KPH*/THRA*/W*": "{#Super_L(Alt_L(w))}",
"KPH*/THRA*/KP*": "{#Super_L(Alt_L(x))}",
"KPH*/THRA*/KWR*": "{#Super_L(Alt_L(y))}",
"KPH*/THRA*/STKPW*": "{#Super_L(Alt_L(z))}",
"KPH*/THRA*/0": "{#Super_L(Alt_L(0))}",
"KPH*/THRA*/1": "{#Super_L(Alt_L(1))}",
"KPH*/THRA*/2": "{#Super_L(Alt_L(2))}",
"KPH*/THRA*/3": "{#Super_L(Alt_L(3))}",
"KPH*/THRA*/4": "{#Super_L(Alt_L(4))}",
"KPH*/THRA*/5": "{#Super_L(Alt_L(5))}",
"KPH*/THRA*/6": "{#Super_L(Alt_L(6))}",
"KPH*/THRA*/7": "{#Super_L(Alt_L(7))}",
"KPH*/THRA*/8": "{#Super_L(Alt_L(8))}",
"KPH*/THRA*/9": "{#Super_L(Alt_L(9))}",
"KPH*/THRA*/KH-FG": "{#Super_L(Alt_L(grave))}",
"KPH*/THRA*/KW-BG": "{#Super_L(Alt_L(comma))}",
"KPH*/THRA*/PR*EPB": "{#Super_L(Alt_L(parenright))}",
"KPH*/THRA*/PREPB": "{#Super_L(Alt_L(parenleft))}",
"KPH*/THRA*/PW*FP": "{#Super_L(Alt_L(BackSpace))}",
"KPH*/THRA*/PWR*BGT": "{#Super_L(Alt_L(bracketright))}",
"KPH*/THRA*/PWR-BGT": "{#Super_L(Alt_L(bracketleft))}",
"KPH*/THRA*/R-R": "{#Super_L(Alt_L(Return))}",
"KPH*/THRA*/S-P": "{#Super_L(Alt_L(space))}",
"KPH*/THRA*/SP*S": "{#Super_L(Alt_L())}",
"KPH*/THRA*/SPWHRAERB": "{#Super_L(Alt_L(backslash))}",
"KPH*/THRA*/STPH-G": "{#Super_L(Alt_L(Right))}",
"KPH*/THRA*/STPH-B": "{#Super_L(Alt_L(Down))}",
"KPH*/THRA*/STPH-P": "{#Super_L(Alt_L(Up))}",
"KPH*/THRA*/STPH-R": "{#Super_L(Alt_L(Left))}",
"KPH*/THRA*/TA*B": "{#Super_L(Alt_L(Tab))}",
"KPH*/THRA*/TKHRAO*ET": "{#Super_L(Alt_L(Delete))}",
"KPH*/KHR*/THRA*/A*": "{#Super_L(Control_L(Alt_L(a)))}",
"KPH*/KHR*/THRA*/PW*": "{#Super_L(Control_L(Alt_L(b)))}",
"KPH*/KHR*/THRA*/KR*": "{#Super_L(Control_L(Alt_L(c)))}",
"KPH*/KHR*/THRA*/TK*": "{#Super_L(Control_L(Alt_L(d)))}",
"KPH*/KHR*/THRA*/*E": "{#Super_L(Control_L(Alt_L(e)))}",
"KPH*/KHR*/THRA*/TP*": "{#Super_L(Control_L(Alt_L(f)))}",
"KPH*/KHR*/THRA*/TKPW*": "{#Super_L(Control_L(Alt_L(g)))}",
"KPH*/KHR*/THRA*/H*": "{#Super_L(Control_L(Alt_L(h)))}",
"KPH*/KHR*/THRA*/*EU": "{#Super_L(Control_L(Alt_L(i)))}",
"KPH*/KHR*/THRA*/SKWR*": "{#Super_L(Control_L(Alt_L(j)))}",
"KPH*/KHR*/THRA*/K*": "{#Super_L(Control_L(Alt_L(k)))}",
"KPH*/KHR*/THRA*/HR*": "{#Super_L(Control_L(Alt_L(l)))}",
"KPH*/KHR*/THRA*/PH*": "{#Super_L(Control_L(Alt_L(m)))}",
"KPH*/KHR*/THRA*/TPH*": "{#Super_L(Control_L(Alt_L(n)))}",
"KPH*/KHR*/THRA*/O*": "{#Super_L(Control_L(Alt_L(o)))}",
"KPH*/KHR*/THRA*/P*": "{#Super_L(Control_L(Alt_L(p)))}",
"KPH*/KHR*/THRA*/KW*": "{#Super_L(Control_L(Alt_L(q)))}",
"KPH*/KHR*/THRA*/R*": "{#Super_L(Control_L(Alt_L(r)))}",
"KPH*/KHR*/THRA*/S*": "{#Super_L(Control_L(Alt_L(s)))}",
"KPH*/KHR*/THRA*/T*": "{#Super_L(Control_L(Alt_L(t)))}",
"KPH*/KHR*/THRA*/*U": "{#Super_L(Control_L(Alt_L(u)))}",
"KPH*/KHR*/THRA*/SR*": "{#Super_L(Control_L(Alt_L(v)))}",
"KPH*/KHR*/THRA*/W*": "{#Super_L(Control_L(Alt_L(w)))}",
"KPH*/KHR*/THRA*/KP*": "{#Super_L(Control_L(Alt_L(x)))}",
"KPH*/KHR*/THRA*/KWR*": "{#Super_L(Control_L(Alt_L(y)))}",
"KPH*/KHR*/THRA*/STKPW*": "{#Super_L(Control_L(Alt_L(z)))}",
"KPH*/KHR*/THRA*/0": "{#Super_L(Control_L(Alt_L(0)))}",
"KPH*/KHR*/THRA*/1": "{#Super_L(Control_L(Alt_L(1)))}",
"KPH*/KHR*/THRA*/2": "{#Super_L(Control_L(Alt_L(2)))}",
"KPH*/KHR*/THRA*/3": "{#Super_L(Control_L(Alt_L(3)))}",
"KPH*/KHR*/THRA*/4": "{#Super_L(Control_L(Alt_L(4)))}",
"KPH*/KHR*/THRA*/5": "{#Super_L(Control_L(Alt_L(5)))}",
"KPH*/KHR*/THRA*/6": "{#Super_L(Control_L(Alt_L(6)))}",
"KPH*/KHR*/THRA*/7": "{#Super_L(Control_L(Alt_L(7)))}",
"KPH*/KHR*/THRA*/8": "{#Super_L(Control_L(Alt_L(8)))}",
"KPH*/KHR*/THRA*/9": "{#Super_L(Control_L(Alt_L(9)))}",
"KPH*/KHR*/THRA*/KH-FG": "{#Super_L(Control_L(Alt_L(grave)))}",
"KPH*/KHR*/THRA*/KW-BG": "{#Super_L(Control_L(Alt_L(comma)))}",
"KPH*/KHR*/THRA*/PR*EPB": "{#Super_L(Control_L(Alt_L(parenright)))}",
"KPH*/KHR*/THRA*/PREPB": "{#Super_L(Control_L(Alt_L(parenleft)))}",
"KPH*/KHR*/THRA*/PW*FP": "{#Super_L(Control_L(Alt_L(BackSpace)))}",
"KPH*/KHR*/THRA*/PWR*BGT": "{#Super_L(Control_L(Alt_L(bracketright)))}",
"KPH*/KHR*/THRA*/PWR-BGT": "{#Super_L(Control_L(Alt_L(bracketleft)))}",
"KPH*/KHR*/THRA*/R-R": "{#Super_L(Control_L(Alt_L(Return)))}",
"KPH*/KHR*/THRA*/S-P": "{#Super_L(Control_L(Alt_L(space)))}",
"KPH*/KHR*/THRA*/SP*S": "{#Super_L(Control_L(Alt_L()))}",
"KPH*/KHR*/THRA*/SPWHRAERB": "{#Super_L(Control_L(Alt_L(backslash)))}",
"KPH*/KHR*/THRA*/STPH-G": "{#Super_L(Control_L(Alt_L(Right)))}",
"KPH*/KHR*/THRA*/STPH-B": "{#Super_L(Control_L(Alt_L(Down)))}",
"KPH*/KHR*/THRA*/STPH-P": "{#Super_L(Control_L(Alt_L(Up)))}",
"KPH*/KHR*/THRA*/STPH-R": "{#Super_L(Control_L(Alt_L(Left)))}",
"KPH*/KHR*/THRA*/TA*B": "{#Super_L(Control_L(Alt_L(Tab)))}",
"KPH*/KHR*/THRA*/TKHRAO*ET": "{#Super_L(Control_L(Alt_L(Delete)))}",
"KPH*/KHR*/A*": "{#Super_L(Control_L(a))}",
"KPH*/KHR*/PW*": "{#Super_L(Control_L(b))}",
"KPH*/KHR*/KR*": "{#Super_L(Control_L(c))}",
"KPH*/KHR*/TK*": "{#Super_L(Control_L(d))}",
"KPH*/KHR*/*E": "{#Super_L(Control_L(e))}",
"KPH*/KHR*/TP*": "{#Super_L(Control_L(f))}",
"KPH*/KHR*/TKPW*": "{#Super_L(Control_L(g))}",
"KPH*/KHR*/H*": "{#Super_L(Control_L(h))}",
"KPH*/KHR*/*EU": "{#Super_L(Control_L(i))}",
"KPH*/KHR*/SKWR*": "{#Super_L(Control_L(j))}",
"KPH*/KHR*/K*": "{#Super_L(Control_L(k))}",
"KPH*/KHR*/HR*": "{#Super_L(Control_L(l))}",
"KPH*/KHR*/PH*": "{#Super_L(Control_L(m))}",
"KPH*/KHR*/TPH*": "{#Super_L(Control_L(n))}",
"KPH*/KHR*/O*": "{#Super_L(Control_L(o))}",
"KPH*/KHR*/P*": "{#Super_L(Control_L(p))}",
"KPH*/KHR*/KW*": "{#Super_L(Control_L(q))}",
"KPH*/KHR*/R*": "{#Super_L(Control_L(r))}",
"KPH*/KHR*/S*": "{#Super_L(Control_L(s))}",
"KPH*/KHR*/T*": "{#Super_L(Control_L(t))}",
"KPH*/KHR*/*U": "{#Super_L(Control_L(u))}",
"KPH*/KHR*/SR*": "{#Super_L(Control_L(v))}",
"KPH*/KHR*/W*": "{#Super_L(Control_L(w))}",
"KPH*/KHR*/KP*": "{#Super_L(Control_L(x))}",
"KPH*/KHR*/KWR*": "{#Super_L(Control_L(y))}",
"KPH*/KHR*/STKPW*": "{#Super_L(Control_L(z))}",
"KPH*/KHR*/0": "{#Super_L(Control_L(0))}",
"KPH*/KHR*/1": "{#Super_L(Control_L(1))}",
"KPH*/KHR*/2": "{#Super_L(Control_L(2))}",
"KPH*/KHR*/3": "{#Super_L(Control_L(3))}",
"KPH*/KHR*/4": "{#Super_L(Control_L(4))}",
"KPH*/KHR*/5": "{#Super_L(Control_L(5))}",
"KPH*/KHR*/6": "{#Super_L(Control_L(6))}",
"KPH*/KHR*/7": "{#Super_L(Control_L(7))}",
"KPH*/KHR*/8": "{#Super_L(Control_L(8))}",
"KPH*/KHR*/9": "{#Super_L(Control_L(9))}",
"KPH*/KHR*/KH-FG": "{#Super_L(Control_L(grave))}",
"KPH*/KHR*/KW-BG": "{#Super_L(Control_L(comma))}",
"KPH*/KHR*/PR*EPB": "{#Super_L(Control_L(parenright))}",
"KPH*/KHR*/PREPB": "{#Super_L(Control_L(parenleft))}",
"KPH*/KHR*/PW*FP": "{#Super_L(Control_L(BackSpace))}",
"KPH*/KHR*/PWR*BGT": "{#Super_L(Control_L(bracketright))}",
"KPH*/KHR*/PWR-BGT": "{#Super_L(Control_L(bracketleft))}",
"KPH*/KHR*/R-R": "{#Super_L(Control_L(Return))}",
"KPH*/KHR*/S-P": "{#Super_L(Control_L(space))}",
"KPH*/KHR*/SP*S": "{#Super_L(Control_L())}",
"KPH*/KHR*/SPWHRAERB": "{#Super_L(Control_L(backslash))}",
"KPH*/KHR*/STPH-G": "{#Super_L(Control_L(Right))}",
"KPH*/KHR*/STPH-B": "{#Super_L(Control_L(Down))}",
"KPH*/KHR*/STPH-P": "{#Super_L(Control_L(Up))}",
"KPH*/KHR*/STPH-R": "{#Super_L(Control_L(Left))}",
"KPH*/KHR*/TA*B": "{#Super_L(Control_L(Tab))}",
"KPH*/KHR*/TKHRAO*ET": "{#Super_L(Control_L(Delete))}",
"KPH*/THRA*/KHR*/A*": "{#Super_L(Alt_L(Control_L(a)))}",
"KPH*/THRA*/KHR*/PW*": "{#Super_L(Alt_L(Control_L(b)))}",
"KPH*/THRA*/KHR*/KR*": "{#Super_L(Alt_L(Control_L(c)))}",
"KPH*/THRA*/KHR*/TK*": "{#Super_L(Alt_L(Control_L(d)))}",
"KPH*/THRA*/KHR*/*E": "{#Super_L(Alt_L(Control_L(e)))}",
"KPH*/THRA*/KHR*/TP*": "{#Super_L(Alt_L(Control_L(f)))}",
"KPH*/THRA*/KHR*/TKPW*": "{#Super_L(Alt_L(Control_L(g)))}",
"KPH*/THRA*/KHR*/H*": "{#Super_L(Alt_L(Control_L(h)))}",
"KPH*/THRA*/KHR*/*EU": "{#Super_L(Alt_L(Control_L(i)))}",
"KPH*/THRA*/KHR*/SKWR*": "{#Super_L(Alt_L(Control_L(j)))}",
"KPH*/THRA*/KHR*/K*": "{#Super_L(Alt_L(Control_L(k)))}",
"KPH*/THRA*/KHR*/HR*": "{#Super_L(Alt_L(Control_L(l)))}",
"KPH*/THRA*/KHR*/PH*": "{#Super_L(Alt_L(Control_L(m)))}",
"KPH*/THRA*/KHR*/TPH*": "{#Super_L(Alt_L(Control_L(n)))}",
"KPH*/THRA*/KHR*/O*": "{#Super_L(Alt_L(Control_L(o)))}",
"KPH*/THRA*/KHR*/P*": "{#Super_L(Alt_L(Control_L(p)))}",
"KPH*/THRA*/KHR*/KW*": "{#Super_L(Alt_L(Control_L(q)))}",
"KPH*/THRA*/KHR*/R*": "{#Super_L(Alt_L(Control_L(r)))}",
"KPH*/THRA*/KHR*/S*": "{#Super_L(Alt_L(Control_L(s)))}",
"KPH*/THRA*/KHR*/T*": "{#Super_L(Alt_L(Control_L(t)))}",
"KPH*/THRA*/KHR*/*U": "{#Super_L(Alt_L(Control_L(u)))}",
"KPH*/THRA*/KHR*/SR*": "{#Super_L(Alt_L(Control_L(v)))}",
"KPH*/THRA*/KHR*/W*": "{#Super_L(Alt_L(Control_L(w)))}",
"KPH*/THRA*/KHR*/KP*": "{#Super_L(Alt_L(Control_L(x)))}",
"KPH*/THRA*/KHR*/KWR*": "{#Super_L(Alt_L(Control_L(y)))}",
"KPH*/THRA*/KHR*/STKPW*": "{#Super_L(Alt_L(Control_L(z)))}",
"KPH*/THRA*/KHR*/0": "{#Super_L(Alt_L(Control_L(0)))}",
"KPH*/THRA*/KHR*/1": "{#Super_L(Alt_L(Control_L(1)))}",
"KPH*/THRA*/KHR*/2": "{#Super_L(Alt_L(Control_L(2)))}",
"KPH*/THRA*/KHR*/3": "{#Super_L(Alt_L(Control_L(3)))}",
"KPH*/THRA*/KHR*/4": "{#Super_L(Alt_L(Control_L(4)))}",
"KPH*/THRA*/KHR*/5": "{#Super_L(Alt_L(Control_L(5)))}",
"KPH*/THRA*/KHR*/6": "{#Super_L(Alt_L(Control_L(6)))}",
"KPH*/THRA*/KHR*/7": "{#Super_L(Alt_L(Control_L(7)))}",
"KPH*/THRA*/KHR*/8": "{#Super_L(Alt_L(Control_L(8)))}",
"KPH*/THRA*/KHR*/9": "{#Super_L(Alt_L(Control_L(9)))}",
"KPH*/THRA*/KHR*/KH-FG": "{#Super_L(Alt_L(Control_L(grave)))}",
"KPH*/THRA*/KHR*/KW-BG": "{#Super_L(Alt_L(Control_L(comma)))}",
"KPH*/THRA*/KHR*/PR*EPB": "{#Super_L(Alt_L(Control_L(parenright)))}",
"KPH*/THRA*/KHR*/PREPB": "{#Super_L(Alt_L(Control_L(parenleft)))}",
"KPH*/THRA*/KHR*/PW*FP": "{#Super_L(Alt_L(Control_L(BackSpace)))}",
"KPH*/THRA*/KHR*/PWR*BGT": "{#Super_L(Alt_L(Control_L(bracketright)))}",
"KPH*/THRA*/KHR*/PWR-BGT": "{#Super_L(Alt_L(Control_L(bracketleft)))}",
"KPH*/THRA*/KHR*/R-R": "{#Super_L(Alt_L(Control_L(Return)))}",
"KPH*/THRA*/KHR*/S-P": "{#Super_L(Alt_L(Control_L(space)))}",
"KPH*/THRA*/KHR*/SP*S": "{#Super_L(Alt_L(Control_L()))}",
"KPH*/THRA*/KHR*/SPWHRAERB": "{#Super_L(Alt_L(Control_L(backslash)))}",
"KPH*/THRA*/KHR*/STPH-G": "{#Super_L(Alt_L(Control_L(Right)))}",
"KPH*/THRA*/KHR*/STPH-B": "{#Super_L(Alt_L(Control_L(Down)))}",
"KPH*/THRA*/KHR*/STPH-P": "{#Super_L(Alt_L(Control_L(Up)))}",
"KPH*/THRA*/KHR*/STPH-R": "{#Super_L(Alt_L(Control_L(Left)))}",
"KPH*/THRA*/KHR*/TA*B": "{#Super_L(Alt_L(Control_L(Tab)))}",
"KPH*/THRA*/KHR*/TKHRAO*ET": "{#Super_L(Alt_L(Control_L(Delete)))}",
"KPH*/A*": "{#Super_L(a)}",
"KPH*/PW*": "{#Super_L(b)}",
"KPH*/KR*": "{#Super_L(c)}",
"KPH*/TK*": "{#Super_L(d)}",
"KPH*/*E": "{#Super_L(e)}",
"KPH*/TP*": "{#Super_L(f)}",
"KPH*/TKPW*": "{#Super_L(g)}",
"KPH*/H*": "{#Super_L(h)}",
"KPH*/*EU": "{#Super_L(i)}",
"KPH*/SKWR*": "{#Super_L(j)}",
"KPH*/K*": "{#Super_L(k)}",
"KPH*/HR*": "{#Super_L(l)}",
"KPH*/PH*": "{#Super_L(m)}",
"KPH*/TPH*": "{#Super_L(n)}",
"KPH*/O*": "{#Super_L(o)}",
"KPH*/P*": "{#Super_L(p)}",
"KPH*/KW*": "{#Super_L(q)}",
"KPH*/R*": "{#Super_L(r)}",
"KPH*/S*": "{#Super_L(s)}",
"KPH*/T*": "{#Super_L(t)}",
"KPH*/*U": "{#Super_L(u)}",
"KPH*/SR*": "{#Super_L(v)}",
"KPH*/W*": "{#Super_L(w)}",
"KPH*/KP*": "{#Super_L(x)}",
"KPH*/KWR*": "{#Super_L(y)}",
"KPH*/STKPW*": "{#Super_L(z)}",
"KPH*/0": "{#Super_L(0)}",
"KPH*/1": "{#Super_L(1)}",
"KPH*/2": "{#Super_L(2)}",
"KPH*/3": "{#Super_L(3)}",
"KPH*/4": "{#Super_L(4)}",
"KPH*/5": "{#Super_L(5)}",
"KPH*/6": "{#Super_L(6)}",
"KPH*/7": "{#Super_L(7)}",
"KPH*/8": "{#Super_L(8)}",
"KPH*/9": "{#Super_L(9)}",
"KPH*/KH-FG": "{#Super_L(grave)}",
"KPH*/KW-BG": "{#Super_L(comma)}",
"KPH*/PR*EPB": "{#Super_L(parenright)}",
"KPH*/PREPB": "{#Super_L(parenleft)}",
"KPH*/PW*FP": "{#Super_L(BackSpace)}",
"KPH*/PWR*BGT": "{#Super_L(bracketright)}",
"KPH*/PWR-BGT": "{#Super_L(bracketleft)}",
"KPH*/R-R": "{#Super_L(Return)}",
"KPH*/S-P": "{#Super_L(space)}",
"KPH*/SP*S": "{#Super_L()}",
"KPH*/SPWHRAERB": "{#Super_L(backslash)}",
"KPH*/STPH-G": "{#Super_L(Right)}",
"KPH*/STPH-B": "{#Super_L(Down)}",
"KPH*/STPH-P": "{#Super_L(Up)}",
"KPH*/STPH-R": "{#Super_L(Left)}",
"KPH*/TA*B": "{#Super_L(Tab)}",
"KPH*/TKHRAO*ET": "{#Super_L(Delete)}",
"KHR*/KPH*/A*": "{#Control_L(Super_L(a))}",
"KHR*/KPH*/PW*": "{#Control_L(Super_L(b))}",
"KHR*/KPH*/KR*": "{#Control_L(Super_L(c))}",
"KHR*/KPH*/TK*": "{#Control_L(Super_L(d))}",
"KHR*/KPH*/*E": "{#Control_L(Super_L(e))}",
"KHR*/KPH*/TP*": "{#Control_L(Super_L(f))}",
"KHR*/KPH*/TKPW*": "{#Control_L(Super_L(g))}",
"KHR*/KPH*/H*": "{#Control_L(Super_L(h))}",
"KHR*/KPH*/*EU": "{#Control_L(Super_L(i))}",
"KHR*/KPH*/SKWR*": "{#Control_L(Super_L(j))}",
"KHR*/KPH*/K*": "{#Control_L(Super_L(k))}",
"KHR*/KPH*/HR*": "{#Control_L(Super_L(l))}",
"KHR*/KPH*/PH*": "{#Control_L(Super_L(m))}",
"KHR*/KPH*/TPH*": "{#Control_L(Super_L(n))}",
"KHR*/KPH*/O*": "{#Control_L(Super_L(o))}",
"KHR*/KPH*/P*": "{#Control_L(Super_L(p))}",
"KHR*/KPH*/KW*": "{#Control_L(Super_L(q))}",
"KHR*/KPH*/R*": "{#Control_L(Super_L(r))}",
"KHR*/KPH*/S*": "{#Control_L(Super_L(s))}",
"KHR*/KPH*/T*": "{#Control_L(Super_L(t))}",
"KHR*/KPH*/*U": "{#Control_L(Super_L(u))}",
"KHR*/KPH*/SR*": "{#Control_L(Super_L(v))}",
"KHR*/KPH*/W*": "{#Control_L(Super_L(w))}",
"KHR*/KPH*/KP*": "{#Control_L(Super_L(x))}",
"KHR*/KPH*/KWR*": "{#Control_L(Super_L(y))}",
"KHR*/KPH*/STKPW*": "{#Control_L(Super_L(z))}",
"KHR*/KPH*/0": "{#Control_L(Super_L(0))}",
"KHR*/KPH*/1": "{#Control_L(Super_L(1))}",
"KHR*/KPH*/2": "{#Control_L(Super_L(2))}",
"KHR*/KPH*/3": "{#Control_L(Super_L(3))}",
"KHR*/KPH*/4": "{#Control_L(Super_L(4))}",
"KHR*/KPH*/5": "{#Control_L(Super_L(5))}",
"KHR*/KPH*/6": "{#Control_L(Super_L(6))}",
"KHR*/KPH*/7": "{#Control_L(Super_L(7))}",
"KHR*/KPH*/8": "{#Control_L(Super_L(8))}",
"KHR*/KPH*/9": "{#Control_L(Super_L(9))}",
"KHR*/KPH*/KH-FG": "{#Control_L(Super_L(grave))}",
"KHR*/KPH*/KW-BG": "{#Control_L(Super_L(comma))}",
"KHR*/KPH*/PR*EPB": "{#Control_L(Super_L(parenright))}",
"KHR*/KPH*/PREPB": "{#Control_L(Super_L(parenleft))}",
"KHR*/KPH*/PW*FP": "{#Control_L(Super_L(BackSpace))}",
"KHR*/KPH*/PWR*BGT": "{#Control_L(Super_L(bracketright))}",
"KHR*/KPH*/PWR-BGT": "{#Control_L(Super_L(bracketleft))}",
"KHR*/KPH*/R-R": "{#Control_L(Super_L(Return))}",
"KHR*/KPH*/S-P": "{#Control_L(Super_L(space))}",
"KHR*/KPH*/SP*S": "{#Control_L(Super_L())}",
"KHR*/KPH*/SPWHRAERB": "{#Control_L(Super_L(backslash))}",
"KHR*/KPH*/STPH-G": "{#Control_L(Super_L(Right))}",
"KHR*/KPH*/STPH-B": "{#Control_L(Super_L(Down))}",
"KHR*/KPH*/STPH-P": "{#Control_L(Super_L(Up))}",
"KHR*/KPH*/STPH-R": "{#Control_L(Super_L(Left))}",
"KHR*/KPH*/TA*B": "{#Control_L(Super_L(Tab))}",
"KHR*/KPH*/TKHRAO*ET": "{#Control_L(Super_L(Delete))}",
"KHR*/A*": "{#Control_L(a)}",
"KHR*/PW*": "{#Control_L(b)}",
"KHR*/KR*": "{#Control_L(c)}",
"KHR*/TK*": "{#Control_L(d)}",
"KHR*/*E": "{#Control_L(e)}",
"KHR*/TP*": "{#Control_L(f)}",
"KHR*/TKPW*": "{#Control_L(g)}",
"KHR*/H*": "{#Control_L(h)}",
"KHR*/*EU": "{#Control_L(i)}",
"KHR*/SKWR*": "{#Control_L(j)}",
"KHR*/K*": "{#Control_L(k)}",
"KHR*/HR*": "{#Control_L(l)}",
"KHR*/PH*": "{#Control_L(m)}",
"KHR*/TPH*": "{#Control_L(n)}",
"KHR*/O*": "{#Control_L(o)}",
"KHR*/P*": "{#Control_L(p)}",
"KHR*/KW*": "{#Control_L(q)}",
"KHR*/R*": "{#Control_L(r)}",
"KHR*/S*": "{#Control_L(s)}",
"KHR*/T*": "{#Control_L(t)}",
"KHR*/*U": "{#Control_L(u)}",
"KHR*/SR*": "{#Control_L(v)}",
"KHR*/W*": "{#Control_L(w)}",
"KHR*/KP*": "{#Control_L(x)}",
"KHR*/KWR*": "{#Control_L(y)}",
"KHR*/STKPW*": "{#Control_L(z)}",
"KHR*/0": "{#Control_L(0)}",
"KHR*/1": "{#Control_L(1)}",
"KHR*/2": "{#Control_L(2)}",
"KHR*/3": "{#Control_L(3)}",
"KHR*/4": "{#Control_L(4)}",
"KHR*/5": "{#Control_L(5)}",
"KHR*/6": "{#Control_L(6)}",
"KHR*/7": "{#Control_L(7)}",
"KHR*/8": "{#Control_L(8)}",
"KHR*/9": "{#Control_L(9)}",
"KHR*/KH-FG": "{#Control_L(grave)}",
"KHR*/KW-BG": "{#Control_L(comma)}",
"KHR*/PR*EPB": "{#Control_L(parenright)}",
"KHR*/PREPB": "{#Control_L(parenleft)}",
"KHR*/PW*FP": "{#Control_L(BackSpace)}",
"KHR*/PWR*BGT": "{#Control_L(bracketright)}",
"KHR*/PWR-BGT": "{#Control_L(bracketleft)}",
"KHR*/R-R": "{#Control_L(Return)}",
"KHR*/S-P": "{#Control_L(space)}",
"KHR*/SP*S": "{#Control_L()}",
"KHR*/SPWHRAERB": "{#Control_L(backslash)}",
"KHR*/STPH-G": "{#Control_L(Right)}",
"KHR*/STPH-B": "{#Control_L(Down)}",
"KHR*/STPH-P": "{#Control_L(Up)}",
"KHR*/STPH-R": "{#Control_L(Left)}",
"KHR*/TA*B": "{#Control_L(Tab)}",
"KHR*/TKHRAO*ET": "{#Control_L(Delete)}",
"KPH*/KHR*/A*": "{#Super_L(Control_L(a))}",
"KPH*/KHR*/PW*": "{#Super_L(Control_L(b))}",
"KPH*/KHR*/KR*": "{#Super_L(Control_L(c))}",
"KPH*/KHR*/TK*": "{#Super_L(Control_L(d))}",
"KPH*/KHR*/*E": "{#Super_L(Control_L(e))}",
"KPH*/KHR*/TP*": "{#Super_L(Control_L(f))}",
"KPH*/KHR*/TKPW*": "{#Super_L(Control_L(g))}",
"KPH*/KHR*/H*": "{#Super_L(Control_L(h))}",
"KPH*/KHR*/*EU": "{#Super_L(Control_L(i))}",
"KPH*/KHR*/SKWR*": "{#Super_L(Control_L(j))}",
"KPH*/KHR*/K*": "{#Super_L(Control_L(k))}",
"KPH*/KHR*/HR*": "{#Super_L(Control_L(l))}",
"KPH*/KHR*/PH*": "{#Super_L(Control_L(m))}",
"KPH*/KHR*/TPH*": "{#Super_L(Control_L(n))}",
"KPH*/KHR*/O*": "{#Super_L(Control_L(o))}",
"KPH*/KHR*/P*": "{#Super_L(Control_L(p))}",
"KPH*/KHR*/KW*": "{#Super_L(Control_L(q))}",
"KPH*/KHR*/R*": "{#Super_L(Control_L(r))}",
"KPH*/KHR*/S*": "{#Super_L(Control_L(s))}",
"KPH*/KHR*/T*": "{#Super_L(Control_L(t))}",
"KPH*/KHR*/*U": "{#Super_L(Control_L(u))}",
"KPH*/KHR*/SR*": "{#Super_L(Control_L(v))}",
"KPH*/KHR*/W*": "{#Super_L(Control_L(w))}",
"KPH*/KHR*/KP*": "{#Super_L(Control_L(x))}",
"KPH*/KHR*/KWR*": "{#Super_L(Control_L(y))}",
"KPH*/KHR*/STKPW*": "{#Super_L(Control_L(z))}",
"KPH*/KHR*/0": "{#Super_L(Control_L(0))}",
"KPH*/KHR*/1": "{#Super_L(Control_L(1))}",
"KPH*/KHR*/2": "{#Super_L(Control_L(2))}",
"KPH*/KHR*/3": "{#Super_L(Control_L(3))}",
"KPH*/KHR*/4": "{#Super_L(Control_L(4))}",
"KPH*/KHR*/5": "{#Super_L(Control_L(5))}",
"KPH*/KHR*/6": "{#Super_L(Control_L(6))}",
"KPH*/KHR*/7": "{#Super_L(Control_L(7))}",
"KPH*/KHR*/8": "{#Super_L(Control_L(8))}",
"KPH*/KHR*/9": "{#Super_L(Control_L(9))}",
"KPH*/KHR*/KH-FG": "{#Super_L(Control_L(grave))}",
"KPH*/KHR*/KW-BG": "{#Super_L(Control_L(comma))}",
"KPH*/KHR*/PR*EPB": "{#Super_L(Control_L(parenright))}",
"KPH*/KHR*/PREPB": "{#Super_L(Control_L(parenleft))}",
"KPH*/KHR*/PW*FP": "{#Super_L(Control_L(BackSpace))}",
"KPH*/KHR*/PWR*BGT": "{#Super_L(Control_L(bracketright))}",
"KPH*/KHR*/PWR-BGT": "{#Super_L(Control_L(bracketleft))}",
"KPH*/KHR*/R-R": "{#Super_L(Control_L(Return))}",
"KPH*/KHR*/S-P": "{#Super_L(Control_L(space))}",
"KPH*/KHR*/SP*S": "{#Super_L(Control_L())}",
"KPH*/KHR*/SPWHRAERB": "{#Super_L(Control_L(backslash))}",
"KPH*/KHR*/STPH-G": "{#Super_L(Control_L(Right))}",
"KPH*/KHR*/STPH-B": "{#Super_L(Control_L(Down))}",
"KPH*/KHR*/STPH-P": "{#Super_L(Control_L(Up))}",
"KPH*/KHR*/STPH-R": "{#Super_L(Control_L(Left))}",
"KPH*/KHR*/TA*B": "{#Super_L(Control_L(Tab))}",
"KPH*/KHR*/TKHRAO*ET": "{#Super_L(Control_L(Delete))}",
"THRA*/KPH*/A*": "{#Alt_L(Super_L(a))}",
"THRA*/KPH*/PW*": "{#Alt_L(Super_L(b))}",
"THRA*/KPH*/KR*": "{#Alt_L(Super_L(c))}",
"THRA*/KPH*/TK*": "{#Alt_L(Super_L(d))}",
"THRA*/KPH*/*E": "{#Alt_L(Super_L(e))}",
"THRA*/KPH*/TP*": "{#Alt_L(Super_L(f))}",
"THRA*/KPH*/TKPW*": "{#Alt_L(Super_L(g))}",
"THRA*/KPH*/H*": "{#Alt_L(Super_L(h))}",
"THRA*/KPH*/*EU": "{#Alt_L(Super_L(i))}",
"THRA*/KPH*/SKWR*": "{#Alt_L(Super_L(j))}",
"THRA*/KPH*/K*": "{#Alt_L(Super_L(k))}",
"THRA*/KPH*/HR*": "{#Alt_L(Super_L(l))}",
"THRA*/KPH*/PH*": "{#Alt_L(Super_L(m))}",
"THRA*/KPH*/TPH*": "{#Alt_L(Super_L(n))}",
"THRA*/KPH*/O*": "{#Alt_L(Super_L(o))}",
"THRA*/KPH*/P*": "{#Alt_L(Super_L(p))}",
"THRA*/KPH*/KW*": "{#Alt_L(Super_L(q))}",
"THRA*/KPH*/R*": "{#Alt_L(Super_L(r))}",
"THRA*/KPH*/S*": "{#Alt_L(Super_L(s))}",
"THRA*/KPH*/T*": "{#Alt_L(Super_L(t))}",
"THRA*/KPH*/*U": "{#Alt_L(Super_L(u))}",
"THRA*/KPH*/SR*": "{#Alt_L(Super_L(v))}",
"THRA*/KPH*/W*": "{#Alt_L(Super_L(w))}",
"THRA*/KPH*/KP*": "{#Alt_L(Super_L(x))}",
"THRA*/KPH*/KWR*": "{#Alt_L(Super_L(y))}",
"THRA*/KPH*/STKPW*": "{#Alt_L(Super_L(z))}",
"THRA*/KPH*/0": "{#Alt_L(Super_L(0))}",
"THRA*/KPH*/1": "{#Alt_L(Super_L(1))}",
"THRA*/KPH*/2": "{#Alt_L(Super_L(2))}",
"THRA*/KPH*/3": "{#Alt_L(Super_L(3))}",
"THRA*/KPH*/4": "{#Alt_L(Super_L(4))}",
"THRA*/KPH*/5": "{#Alt_L(Super_L(5))}",
"THRA*/KPH*/6": "{#Alt_L(Super_L(6))}",
"THRA*/KPH*/7": "{#Alt_L(Super_L(7))}",
"THRA*/KPH*/8": "{#Alt_L(Super_L(8))}",
"THRA*/KPH*/9": "{#Alt_L(Super_L(9))}",
"THRA*/KPH*/KH-FG": "{#Alt_L(Super_L(grave))}",
"THRA*/KPH*/KW-BG": "{#Alt_L(Super_L(comma))}",
"THRA*/KPH*/PR*EPB": "{#Alt_L(Super_L(parenright))}",
"THRA*/KPH*/PREPB": "{#Alt_L(Super_L(parenleft))}",
"THRA*/KPH*/PW*FP": "{#Alt_L(Super_L(BackSpace))}",
"THRA*/KPH*/PWR*BGT": "{#Alt_L(Super_L(bracketright))}",
"THRA*/KPH*/PWR-BGT": "{#Alt_L(Super_L(bracketleft))}",
"THRA*/KPH*/R-R": "{#Alt_L(Super_L(Return))}",
"THRA*/KPH*/S-P": "{#Alt_L(Super_L(space))}",
"THRA*/KPH*/SP*S": "{#Alt_L(Super_L())}",
"THRA*/KPH*/SPWHRAERB": "{#Alt_L(Super_L(backslash))}",
"THRA*/KPH*/STPH-G": "{#Alt_L(Super_L(Right))}",
"THRA*/KPH*/STPH-B": "{#Alt_L(Super_L(Down))}",
"THRA*/KPH*/STPH-P": "{#Alt_L(Super_L(Up))}",
"THRA*/KPH*/STPH-R": "{#Alt_L(Super_L(Left))}",
"THRA*/KPH*/TA*B": "{#Alt_L(Super_L(Tab))}",
"THRA*/KPH*/TKHRAO*ET": "{#Alt_L(Super_L(Delete))}",
"THRA*/KHR*/KPH*/A*": "{#Alt_L(Control_L(Super_L(a)))}",
"THRA*/KHR*/KPH*/PW*": "{#Alt_L(Control_L(Super_L(b)))}",
"THRA*/KHR*/KPH*/KR*": "{#Alt_L(Control_L(Super_L(c)))}",
"THRA*/KHR*/KPH*/TK*": "{#Alt_L(Control_L(Super_L(d)))}",
"THRA*/KHR*/KPH*/*E": "{#Alt_L(Control_L(Super_L(e)))}",
"THRA*/KHR*/KPH*/TP*": "{#Alt_L(Control_L(Super_L(f)))}",
"THRA*/KHR*/KPH*/TKPW*": "{#Alt_L(Control_L(Super_L(g)))}",
"THRA*/KHR*/KPH*/H*": "{#Alt_L(Control_L(Super_L(h)))}",
"THRA*/KHR*/KPH*/*EU": "{#Alt_L(Control_L(Super_L(i)))}",
"THRA*/KHR*/KPH*/SKWR*": "{#Alt_L(Control_L(Super_L(j)))}",
"THRA*/KHR*/KPH*/K*": "{#Alt_L(Control_L(Super_L(k)))}",
"THRA*/KHR*/KPH*/HR*": "{#Alt_L(Control_L(Super_L(l)))}",
"THRA*/KHR*/KPH*/PH*": "{#Alt_L(Control_L(Super_L(m)))}",
"THRA*/KHR*/KPH*/TPH*": "{#Alt_L(Control_L(Super_L(n)))}",
"THRA*/KHR*/KPH*/O*": "{#Alt_L(Control_L(Super_L(o)))}",
"THRA*/KHR*/KPH*/P*": "{#Alt_L(Control_L(Super_L(p)))}",
"THRA*/KHR*/KPH*/KW*": "{#Alt_L(Control_L(Super_L(q)))}",
"THRA*/KHR*/KPH*/R*": "{#Alt_L(Control_L(Super_L(r)))}",
"THRA*/KHR*/KPH*/S*": "{#Alt_L(Control_L(Super_L(s)))}",
"THRA*/KHR*/KPH*/T*": "{#Alt_L(Control_L(Super_L(t)))}",
"THRA*/KHR*/KPH*/*U": "{#Alt_L(Control_L(Super_L(u)))}",
"THRA*/KHR*/KPH*/SR*": "{#Alt_L(Control_L(Super_L(v)))}",
"THRA*/KHR*/KPH*/W*": "{#Alt_L(Control_L(Super_L(w)))}",
"THRA*/KHR*/KPH*/KP*": "{#Alt_L(Control_L(Super_L(x)))}",
"THRA*/KHR*/KPH*/KWR*": "{#Alt_L(Control_L(Super_L(y)))}",
"THRA*/KHR*/KPH*/STKPW*": "{#Alt_L(Control_L(Super_L(z)))}",
"THRA*/KHR*/KPH*/0": "{#Alt_L(Control_L(Super_L(0)))}",
"THRA*/KHR*/KPH*/1": "{#Alt_L(Control_L(Super_L(1)))}",
"THRA*/KHR*/KPH*/2": "{#Alt_L(Control_L(Super_L(2)))}",
"THRA*/KHR*/KPH*/3": "{#Alt_L(Control_L(Super_L(3)))}",
"THRA*/KHR*/KPH*/4": "{#Alt_L(Control_L(Super_L(4)))}",
"THRA*/KHR*/KPH*/5": "{#Alt_L(Control_L(Super_L(5)))}",
"THRA*/KHR*/KPH*/6": "{#Alt_L(Control_L(Super_L(6)))}",
"THRA*/KHR*/KPH*/7": "{#Alt_L(Control_L(Super_L(7)))}",
"THRA*/KHR*/KPH*/8": "{#Alt_L(Control_L(Super_L(8)))}",
"THRA*/KHR*/KPH*/9": "{#Alt_L(Control_L(Super_L(9)))}",
"THRA*/KHR*/KPH*/KH-FG": "{#Alt_L(Control_L(Super_L(grave)))}",
"THRA*/KHR*/KPH*/KW-BG": "{#Alt_L(Control_L(Super_L(comma)))}",
"THRA*/KHR*/KPH*/PR*EPB": "{#Alt_L(Control_L(Super_L(parenright)))}",
"THRA*/KHR*/KPH*/PREPB": "{#Alt_L(Control_L(Super_L(parenleft)))}",
"THRA*/KHR*/KPH*/PW*FP": "{#Alt_L(Control_L(Super_L(BackSpace)))}",
"THRA*/KHR*/KPH*/PWR*BGT": "{#Alt_L(Control_L(Super_L(bracketright)))}",
"THRA*/KHR*/KPH*/PWR-BGT": "{#Alt_L(Control_L(Super_L(bracketleft)))}",
"THRA*/KHR*/KPH*/R-R": "{#Alt_L(Control_L(Super_L(Return)))}",
"THRA*/KHR*/KPH*/S-P": "{#Alt_L(Control_L(Super_L(space)))}",
"THRA*/KHR*/KPH*/SP*S": "{#Alt_L(Control_L(Super_L()))}",
"THRA*/KHR*/KPH*/SPWHRAERB": "{#Alt_L(Control_L(Super_L(backslash)))}",
"THRA*/KHR*/KPH*/STPH-G": "{#Alt_L(Control_L(Super_L(Right)))}",
"THRA*/KHR*/KPH*/STPH-B": "{#Alt_L(Control_L(Super_L(Down)))}",
"THRA*/KHR*/KPH*/STPH-P": "{#Alt_L(Control_L(Super_L(Up)))}",
"THRA*/KHR*/KPH*/STPH-R": "{#Alt_L(Control_L(Super_L(Left)))}",
"THRA*/KHR*/KPH*/TA*B": "{#Alt_L(Control_L(Super_L(Tab)))}",
"THRA*/KHR*/KPH*/TKHRAO*ET": "{#Alt_L(Control_L(Super_L(Delete)))}",
"THRA*/KHR*/A*": "{#Alt_L(Control_L(a))}",
"THRA*/KHR*/PW*": "{#Alt_L(Control_L(b))}",
"THRA*/KHR*/KR*": "{#Alt_L(Control_L(c))}",
"THRA*/KHR*/TK*": "{#Alt_L(Control_L(d))}",
"THRA*/KHR*/*E": "{#Alt_L(Control_L(e))}",
"THRA*/KHR*/TP*": "{#Alt_L(Control_L(f))}",
"THRA*/KHR*/TKPW*": "{#Alt_L(Control_L(g))}",
"THRA*/KHR*/H*": "{#Alt_L(Control_L(h))}",
"THRA*/KHR*/*EU": "{#Alt_L(Control_L(i))}",
"THRA*/KHR*/SKWR*": "{#Alt_L(Control_L(j))}",
"THRA*/KHR*/K*": "{#Alt_L(Control_L(k))}",
"THRA*/KHR*/HR*": "{#Alt_L(Control_L(l))}",
"THRA*/KHR*/PH*": "{#Alt_L(Control_L(m))}",
"THRA*/KHR*/TPH*": "{#Alt_L(Control_L(n))}",
"THRA*/KHR*/O*": "{#Alt_L(Control_L(o))}",
"THRA*/KHR*/P*": "{#Alt_L(Control_L(p))}",
"THRA*/KHR*/KW*": "{#Alt_L(Control_L(q))}",
"THRA*/KHR*/R*": "{#Alt_L(Control_L(r))}",
"THRA*/KHR*/S*": "{#Alt_L(Control_L(s))}",
"THRA*/KHR*/T*": "{#Alt_L(Control_L(t))}",
"THRA*/KHR*/*U": "{#Alt_L(Control_L(u))}",
"THRA*/KHR*/SR*": "{#Alt_L(Control_L(v))}",
"THRA*/KHR*/W*": "{#Alt_L(Control_L(w))}",
"THRA*/KHR*/KP*": "{#Alt_L(Control_L(x))}",
"THRA*/KHR*/KWR*": "{#Alt_L(Control_L(y))}",
"THRA*/KHR*/STKPW*": "{#Alt_L(Control_L(z))}",
"THRA*/KHR*/0": "{#Alt_L(Control_L(0))}",
"THRA*/KHR*/1": "{#Alt_L(Control_L(1))}",
"THRA*/KHR*/2": "{#Alt_L(Control_L(2))}",
"THRA*/KHR*/3": "{#Alt_L(Control_L(3))}",
"THRA*/KHR*/4": "{#Alt_L(Control_L(4))}",
"THRA*/KHR*/5": "{#Alt_L(Control_L(5))}",
"THRA*/KHR*/6": "{#Alt_L(Control_L(6))}",
"THRA*/KHR*/7": "{#Alt_L(Control_L(7))}",
"THRA*/KHR*/8": "{#Alt_L(Control_L(8))}",
"THRA*/KHR*/9": "{#Alt_L(Control_L(9))}",
"THRA*/KHR*/KH-FG": "{#Alt_L(Control_L(grave))}",
"THRA*/KHR*/KW-BG": "{#Alt_L(Control_L(comma))}",
"THRA*/KHR*/PR*EPB": "{#Alt_L(Control_L(parenright))}",
"THRA*/KHR*/PREPB": "{#Alt_L(Control_L(parenleft))}",
"THRA*/KHR*/PW*FP": "{#Alt_L(Control_L(BackSpace))}",
"THRA*/KHR*/PWR*BGT": "{#Alt_L(Control_L(bracketright))}",
"THRA*/KHR*/PWR-BGT": "{#Alt_L(Control_L(bracketleft))}",
"THRA*/KHR*/R-R": "{#Alt_L(Control_L(Return))}",
"THRA*/KHR*/S-P": "{#Alt_L(Control_L(space))}",
"THRA*/KHR*/SP*S": "{#Alt_L(Control_L())}",
"THRA*/KHR*/SPWHRAERB": "{#Alt_L(Control_L(backslash))}",
"THRA*/KHR*/STPH-G": "{#Alt_L(Control_L(Right))}",
"THRA*/KHR*/STPH-B": "{#Alt_L(Control_L(Down))}",
"THRA*/KHR*/STPH-P": "{#Alt_L(Control_L(Up))}",
"THRA*/KHR*/STPH-R": "{#Alt_L(Control_L(Left))}",
"THRA*/KHR*/TA*B": "{#Alt_L(Control_L(Tab))}",
"THRA*/KHR*/TKHRAO*ET": "{#Alt_L(Control_L(Delete))}",
"THRA*/KPH*/KHR*/A*": "{#Alt_L(Super_L(Control_L(a)))}",
"THRA*/KPH*/KHR*/PW*": "{#Alt_L(Super_L(Control_L(b)))}",
"THRA*/KPH*/KHR*/KR*": "{#Alt_L(Super_L(Control_L(c)))}",
"THRA*/KPH*/KHR*/TK*": "{#Alt_L(Super_L(Control_L(d)))}",
"THRA*/KPH*/KHR*/*E": "{#Alt_L(Super_L(Control_L(e)))}",
"THRA*/KPH*/KHR*/TP*": "{#Alt_L(Super_L(Control_L(f)))}",
"THRA*/KPH*/KHR*/TKPW*": "{#Alt_L(Super_L(Control_L(g)))}",
"THRA*/KPH*/KHR*/H*": "{#Alt_L(Super_L(Control_L(h)))}",
"THRA*/KPH*/KHR*/*EU": "{#Alt_L(Super_L(Control_L(i)))}",
"THRA*/KPH*/KHR*/SKWR*": "{#Alt_L(Super_L(Control_L(j)))}",
"THRA*/KPH*/KHR*/K*": "{#Alt_L(Super_L(Control_L(k)))}",
"THRA*/KPH*/KHR*/HR*": "{#Alt_L(Super_L(Control_L(l)))}",
"THRA*/KPH*/KHR*/PH*": "{#Alt_L(Super_L(Control_L(m)))}",
"THRA*/KPH*/KHR*/TPH*": "{#Alt_L(Super_L(Control_L(n)))}",
"THRA*/KPH*/KHR*/O*": "{#Alt_L(Super_L(Control_L(o)))}",
"THRA*/KPH*/KHR*/P*": "{#Alt_L(Super_L(Control_L(p)))}",
"THRA*/KPH*/KHR*/KW*": "{#Alt_L(Super_L(Control_L(q)))}",
"THRA*/KPH*/KHR*/R*": "{#Alt_L(Super_L(Control_L(r)))}",
"THRA*/KPH*/KHR*/S*": "{#Alt_L(Super_L(Control_L(s)))}",
"THRA*/KPH*/KHR*/T*": "{#Alt_L(Super_L(Control_L(t)))}",
"THRA*/KPH*/KHR*/*U": "{#Alt_L(Super_L(Control_L(u)))}",
"THRA*/KPH*/KHR*/SR*": "{#Alt_L(Super_L(Control_L(v)))}",
"THRA*/KPH*/KHR*/W*": "{#Alt_L(Super_L(Control_L(w)))}",
"THRA*/KPH*/KHR*/KP*": "{#Alt_L(Super_L(Control_L(x)))}",
"THRA*/KPH*/KHR*/KWR*": "{#Alt_L(Super_L(Control_L(y)))}",
"THRA*/KPH*/KHR*/STKPW*": "{#Alt_L(Super_L(Control_L(z)))}",
"THRA*/KPH*/KHR*/0": "{#Alt_L(Super_L(Control_L(0)))}",
"THRA*/KPH*/KHR*/1": "{#Alt_L(Super_L(Control_L(1)))}",
"THRA*/KPH*/KHR*/2": "{#Alt_L(Super_L(Control_L(2)))}",
"THRA*/KPH*/KHR*/3": "{#Alt_L(Super_L(Control_L(3)))}",
"THRA*/KPH*/KHR*/4": "{#Alt_L(Super_L(Control_L(4)))}",
"THRA*/KPH*/KHR*/5": "{#Alt_L(Super_L(Control_L(5)))}",
"THRA*/KPH*/KHR*/6": "{#Alt_L(Super_L(Control_L(6)))}",
"THRA*/KPH*/KHR*/7": "{#Alt_L(Super_L(Control_L(7)))}",
"THRA*/KPH*/KHR*/8": "{#Alt_L(Super_L(Control_L(8)))}",
"THRA*/KPH*/KHR*/9": "{#Alt_L(Super_L(Control_L(9)))}",
"THRA*/KPH*/KHR*/KH-FG": "{#Alt_L(Super_L(Control_L(grave)))}",
"THRA*/KPH*/KHR*/KW-BG": "{#Alt_L(Super_L(Control_L(comma)))}",
"THRA*/KPH*/KHR*/PR*EPB": "{#Alt_L(Super_L(Control_L(parenright)))}",
"THRA*/KPH*/KHR*/PREPB": "{#Alt_L(Super_L(Control_L(parenleft)))}",
"THRA*/KPH*/KHR*/PW*FP": "{#Alt_L(Super_L(Control_L(BackSpace)))}",
"THRA*/KPH*/KHR*/PWR*BGT": "{#Alt_L(Super_L(Control_L(bracketright)))}",
"THRA*/KPH*/KHR*/PWR-BGT": "{#Alt_L(Super_L(Control_L(bracketleft)))}",
"THRA*/KPH*/KHR*/R-R": "{#Alt_L(Super_L(Control_L(Return)))}",
"THRA*/KPH*/KHR*/S-P": "{#Alt_L(Super_L(Control_L(space)))}",
"THRA*/KPH*/KHR*/SP*S": "{#Alt_L(Super_L(Control_L()))}",
"THRA*/KPH*/KHR*/SPWHRAERB": "{#Alt_L(Super_L(Control_L(backslash)))}",
"THRA*/KPH*/KHR*/STPH-G": "{#Alt_L(Super_L(Control_L(Right)))}",
"THRA*/KPH*/KHR*/STPH-B": "{#Alt_L(Super_L(Control_L(Down)))}",
"THRA*/KPH*/KHR*/STPH-P": "{#Alt_L(Super_L(Control_L(Up)))}",
"THRA*/KPH*/KHR*/STPH-R": "{#Alt_L(Super_L(Control_L(Left)))}",
"THRA*/KPH*/KHR*/TA*B": "{#Alt_L(Super_L(Control_L(Tab)))}",
"THRA*/KPH*/KHR*/TKHRAO*ET": "{#Alt_L(Super_L(Control_L(Delete)))}",
"STP*/THRA*/A*": "{#Shift_L(Alt_L(a))}",
"STP*/THRA*/PW*": "{#Shift_L(Alt_L(b))}",
"STP*/THRA*/KR*": "{#Shift_L(Alt_L(c))}",
"STP*/THRA*/TK*": "{#Shift_L(Alt_L(d))}",
"STP*/THRA*/*E": "{#Shift_L(Alt_L(e))}",
"STP*/THRA*/TP*": "{#Shift_L(Alt_L(f))}",
"STP*/THRA*/TKPW*": "{#Shift_L(Alt_L(g))}",
"STP*/THRA*/H*": "{#Shift_L(Alt_L(h))}",
"STP*/THRA*/*EU": "{#Shift_L(Alt_L(i))}",
"STP*/THRA*/SKWR*": "{#Shift_L(Alt_L(j))}",
"STP*/THRA*/K*": "{#Shift_L(Alt_L(k))}",
"STP*/THRA*/HR*": "{#Shift_L(Alt_L(l))}",
"STP*/THRA*/PH*": "{#Shift_L(Alt_L(m))}",
"STP*/THRA*/TPH*": "{#Shift_L(Alt_L(n))}",
"STP*/THRA*/O*": "{#Shift_L(Alt_L(o))}",
"STP*/THRA*/P*": "{#Shift_L(Alt_L(p))}",
"STP*/THRA*/KW*": "{#Shift_L(Alt_L(q))}",
"STP*/THRA*/R*": "{#Shift_L(Alt_L(r))}",
"STP*/THRA*/S*": "{#Shift_L(Alt_L(s))}",
"STP*/THRA*/T*": "{#Shift_L(Alt_L(t))}",
"STP*/THRA*/*U": "{#Shift_L(Alt_L(u))}",
"STP*/THRA*/SR*": "{#Shift_L(Alt_L(v))}",
"STP*/THRA*/W*": "{#Shift_L(Alt_L(w))}",
"STP*/THRA*/KP*": "{#Shift_L(Alt_L(x))}",
"STP*/THRA*/KWR*": "{#Shift_L(Alt_L(y))}",
"STP*/THRA*/STKPW*": "{#Shift_L(Alt_L(z))}",
"STP*/THRA*/0": "{#Shift_L(Alt_L(0))}",
"STP*/THRA*/1": "{#Shift_L(Alt_L(1))}",
"STP*/THRA*/2": "{#Shift_L(Alt_L(2))}",
"STP*/THRA*/3": "{#Shift_L(Alt_L(3))}",
"STP*/THRA*/4": "{#Shift_L(Alt_L(4))}",
"STP*/THRA*/5": "{#Shift_L(Alt_L(5))}",
"STP*/THRA*/6": "{#Shift_L(Alt_L(6))}",
"STP*/THRA*/7": "{#Shift_L(Alt_L(7))}",
"STP*/THRA*/8": "{#Shift_L(Alt_L(8))}",
"STP*/THRA*/9": "{#Shift_L(Alt_L(9))}",
"STP*/THRA*/KH-FG": "{#Shift_L(Alt_L(grave))}",
"STP*/THRA*/KW-BG": "{#Shift_L(Alt_L(comma))}",
"STP*/THRA*/PR*EPB": "{#Shift_L(Alt_L(parenright))}",
"STP*/THRA*/PREPB": "{#Shift_L(Alt_L(parenleft))}",
"STP*/THRA*/PW*FP": "{#Shift_L(Alt_L(BackSpace))}",
"STP*/THRA*/PWR*BGT": "{#Shift_L(Alt_L(bracketright))}",
"STP*/THRA*/PWR-BGT": "{#Shift_L(Alt_L(bracketleft))}",
"STP*/THRA*/R-R": "{#Shift_L(Alt_L(Return))}",
"STP*/THRA*/S-P": "{#Shift_L(Alt_L(space))}",
"STP*/THRA*/SP*S": "{#Shift_L(Alt_L())}",
"STP*/THRA*/SPWHRAERB": "{#Shift_L(Alt_L(backslash))}",
"STP*/THRA*/STPH-G": "{#Shift_L(Alt_L(Right))}",
"STP*/THRA*/STPH-B": "{#Shift_L(Alt_L(Down))}",
"STP*/THRA*/STPH-P": "{#Shift_L(Alt_L(Up))}",
"STP*/THRA*/STPH-R": "{#Shift_L(Alt_L(Left))}",
"STP*/THRA*/TA*B": "{#Shift_L(Alt_L(Tab))}",
"STP*/THRA*/TKHRAO*ET": "{#Shift_L(Alt_L(Delete))}",
"STP*/KPH*/THRA*/A*": "{#Shift_L(Super_L(Alt_L(a)))}",
"STP*/KPH*/THRA*/PW*": "{#Shift_L(Super_L(Alt_L(b)))}",
"STP*/KPH*/THRA*/KR*": "{#Shift_L(Super_L(Alt_L(c)))}",
"STP*/KPH*/THRA*/TK*": "{#Shift_L(Super_L(Alt_L(d)))}",
"STP*/KPH*/THRA*/*E": "{#Shift_L(Super_L(Alt_L(e)))}",
"STP*/KPH*/THRA*/TP*": "{#Shift_L(Super_L(Alt_L(f)))}",
"STP*/KPH*/THRA*/TKPW*": "{#Shift_L(Super_L(Alt_L(g)))}",
"STP*/KPH*/THRA*/H*": "{#Shift_L(Super_L(Alt_L(h)))}",
"STP*/KPH*/THRA*/*EU": "{#Shift_L(Super_L(Alt_L(i)))}",
"STP*/KPH*/THRA*/SKWR*": "{#Shift_L(Super_L(Alt_L(j)))}",
"STP*/KPH*/THRA*/K*": "{#Shift_L(Super_L(Alt_L(k)))}",
"STP*/KPH*/THRA*/HR*": "{#Shift_L(Super_L(Alt_L(l)))}",
"STP*/KPH*/THRA*/PH*": "{#Shift_L(Super_L(Alt_L(m)))}",
"STP*/KPH*/THRA*/TPH*": "{#Shift_L(Super_L(Alt_L(n)))}",
"STP*/KPH*/THRA*/O*": "{#Shift_L(Super_L(Alt_L(o)))}",
"STP*/KPH*/THRA*/P*": "{#Shift_L(Super_L(Alt_L(p)))}",
"STP*/KPH*/THRA*/KW*": "{#Shift_L(Super_L(Alt_L(q)))}",
"STP*/KPH*/THRA*/R*": "{#Shift_L(Super_L(Alt_L(r)))}",
"STP*/KPH*/THRA*/S*": "{#Shift_L(Super_L(Alt_L(s)))}",
"STP*/KPH*/THRA*/T*": "{#Shift_L(Super_L(Alt_L(t)))}",
"STP*/KPH*/THRA*/*U": "{#Shift_L(Super_L(Alt_L(u)))}",
"STP*/KPH*/THRA*/SR*": "{#Shift_L(Super_L(Alt_L(v)))}",
"STP*/KPH*/THRA*/W*": "{#Shift_L(Super_L(Alt_L(w)))}",
"STP*/KPH*/THRA*/KP*": "{#Shift_L(Super_L(Alt_L(x)))}",
"STP*/KPH*/THRA*/KWR*": "{#Shift_L(Super_L(Alt_L(y)))}",
"STP*/KPH*/THRA*/STKPW*": "{#Shift_L(Super_L(Alt_L(z)))}",
"STP*/KPH*/THRA*/0": "{#Shift_L(Super_L(Alt_L(0)))}",
"STP*/KPH*/THRA*/1": "{#Shift_L(Super_L(Alt_L(1)))}",
"STP*/KPH*/THRA*/2": "{#Shift_L(Super_L(Alt_L(2)))}",
"STP*/KPH*/THRA*/3": "{#Shift_L(Super_L(Alt_L(3)))}",
"STP*/KPH*/THRA*/4": "{#Shift_L(Super_L(Alt_L(4)))}",
"STP*/KPH*/THRA*/5": "{#Shift_L(Super_L(Alt_L(5)))}",
"STP*/KPH*/THRA*/6": "{#Shift_L(Super_L(Alt_L(6)))}",
"STP*/KPH*/THRA*/7": "{#Shift_L(Super_L(Alt_L(7)))}",
"STP*/KPH*/THRA*/8": "{#Shift_L(Super_L(Alt_L(8)))}",
"STP*/KPH*/THRA*/9": "{#Shift_L(Super_L(Alt_L(9)))}",
"STP*/KPH*/THRA*/KH-FG": "{#Shift_L(Super_L(Alt_L(grave)))}",
"STP*/KPH*/THRA*/KW-BG": "{#Shift_L(Super_L(Alt_L(comma)))}",
"STP*/KPH*/THRA*/PR*EPB": "{#Shift_L(Super_L(Alt_L(parenright)))}",
"STP*/KPH*/THRA*/PREPB": "{#Shift_L(Super_L(Alt_L(parenleft)))}",
"STP*/KPH*/THRA*/PW*FP": "{#Shift_L(Super_L(Alt_L(BackSpace)))}",
"STP*/KPH*/THRA*/PWR*BGT": "{#Shift_L(Super_L(Alt_L(bracketright)))}",
"STP*/KPH*/THRA*/PWR-BGT": "{#Shift_L(Super_L(Alt_L(bracketleft)))}",
"STP*/KPH*/THRA*/R-R": "{#Shift_L(Super_L(Alt_L(Return)))}",
"STP*/KPH*/THRA*/S-P": "{#Shift_L(Super_L(Alt_L(space)))}",
"STP*/KPH*/THRA*/SP*S": "{#Shift_L(Super_L(Alt_L()))}",
"STP*/KPH*/THRA*/SPWHRAERB": "{#Shift_L(Super_L(Alt_L(backslash)))}",
"STP*/KPH*/THRA*/STPH-G": "{#Shift_L(Super_L(Alt_L(Right)))}",
"STP*/KPH*/THRA*/STPH-B": "{#Shift_L(Super_L(Alt_L(Down)))}",
"STP*/KPH*/THRA*/STPH-P": "{#Shift_L(Super_L(Alt_L(Up)))}",
"STP*/KPH*/THRA*/STPH-R": "{#Shift_L(Super_L(Alt_L(Left)))}",
"STP*/KPH*/THRA*/TA*B": "{#Shift_L(Super_L(Alt_L(Tab)))}",
"STP*/KPH*/THRA*/TKHRAO*ET": "{#Shift_L(Super_L(Alt_L(Delete)))}",
"STP*/KPH*/A*": "{#Shift_L(Super_L(a))}",
"STP*/KPH*/PW*": "{#Shift_L(Super_L(b))}",
"STP*/KPH*/KR*": "{#Shift_L(Super_L(c))}",
"STP*/KPH*/TK*": "{#Shift_L(Super_L(d))}",
"STP*/KPH*/*E": "{#Shift_L(Super_L(e))}",
"STP*/KPH*/TP*": "{#Shift_L(Super_L(f))}",
"STP*/KPH*/TKPW*": "{#Shift_L(Super_L(g))}",
"STP*/KPH*/H*": "{#Shift_L(Super_L(h))}",
"STP*/KPH*/*EU": "{#Shift_L(Super_L(i))}",
"STP*/KPH*/SKWR*": "{#Shift_L(Super_L(j))}",
"STP*/KPH*/K*": "{#Shift_L(Super_L(k))}",
"STP*/KPH*/HR*": "{#Shift_L(Super_L(l))}",
"STP*/KPH*/PH*": "{#Shift_L(Super_L(m))}",
"STP*/KPH*/TPH*": "{#Shift_L(Super_L(n))}",
"STP*/KPH*/O*": "{#Shift_L(Super_L(o))}",
"STP*/KPH*/P*": "{#Shift_L(Super_L(p))}",
"STP*/KPH*/KW*": "{#Shift_L(Super_L(q))}",
"STP*/KPH*/R*": "{#Shift_L(Super_L(r))}",
"STP*/KPH*/S*": "{#Shift_L(Super_L(s))}",
"STP*/KPH*/T*": "{#Shift_L(Super_L(t))}",
"STP*/KPH*/*U": "{#Shift_L(Super_L(u))}",
"STP*/KPH*/SR*": "{#Shift_L(Super_L(v))}",
"STP*/KPH*/W*": "{#Shift_L(Super_L(w))}",
"STP*/KPH*/KP*": "{#Shift_L(Super_L(x))}",
"STP*/KPH*/KWR*": "{#Shift_L(Super_L(y))}",
"STP*/KPH*/STKPW*": "{#Shift_L(Super_L(z))}",
"STP*/KPH*/0": "{#Shift_L(Super_L(0))}",
"STP*/KPH*/1": "{#Shift_L(Super_L(1))}",
"STP*/KPH*/2": "{#Shift_L(Super_L(2))}",
"STP*/KPH*/3": "{#Shift_L(Super_L(3))}",
"STP*/KPH*/4": "{#Shift_L(Super_L(4))}",
"STP*/KPH*/5": "{#Shift_L(Super_L(5))}",
"STP*/KPH*/6": "{#Shift_L(Super_L(6))}",
"STP*/KPH*/7": "{#Shift_L(Super_L(7))}",
"STP*/KPH*/8": "{#Shift_L(Super_L(8))}",
"STP*/KPH*/9": "{#Shift_L(Super_L(9))}",
"STP*/KPH*/KH-FG": "{#Shift_L(Super_L(grave))}",
"STP*/KPH*/KW-BG": "{#Shift_L(Super_L(comma))}",
"STP*/KPH*/PR*EPB": "{#Shift_L(Super_L(parenright))}",
"STP*/KPH*/PREPB": "{#Shift_L(Super_L(parenleft))}",
"STP*/KPH*/PW*FP": "{#Shift_L(Super_L(BackSpace))}",
"STP*/KPH*/PWR*BGT": "{#Shift_L(Super_L(bracketright))}",
"STP*/KPH*/PWR-BGT": "{#Shift_L(Super_L(bracketleft))}",
"STP*/KPH*/R-R": "{#Shift_L(Super_L(Return))}",
"STP*/KPH*/S-P": "{#Shift_L(Super_L(space))}",
"STP*/KPH*/SP*S": "{#Shift_L(Super_L())}",
"STP*/KPH*/SPWHRAERB": "{#Shift_L(Super_L(backslash))}",
"STP*/KPH*/STPH-G": "{#Shift_L(Super_L(Right))}",
"STP*/KPH*/STPH-B": "{#Shift_L(Super_L(Down))}",
"STP*/KPH*/STPH-P": "{#Shift_L(Super_L(Up))}",
"STP*/KPH*/STPH-R": "{#Shift_L(Super_L(Left))}",
"STP*/KPH*/TA*B": "{#Shift_L(Super_L(Tab))}",
"STP*/KPH*/TKHRAO*ET": "{#Shift_L(Super_L(Delete))}",
"STP*/THRA*/KPH*/A*": "{#Shift_L(Alt_L(Super_L(a)))}",
"STP*/THRA*/KPH*/PW*": "{#Shift_L(Alt_L(Super_L(b)))}",
"STP*/THRA*/KPH*/KR*": "{#Shift_L(Alt_L(Super_L(c)))}",
"STP*/THRA*/KPH*/TK*": "{#Shift_L(Alt_L(Super_L(d)))}",
"STP*/THRA*/KPH*/*E": "{#Shift_L(Alt_L(Super_L(e)))}",
"STP*/THRA*/KPH*/TP*": "{#Shift_L(Alt_L(Super_L(f)))}",
"STP*/THRA*/KPH*/TKPW*": "{#Shift_L(Alt_L(Super_L(g)))}",
"STP*/THRA*/KPH*/H*": "{#Shift_L(Alt_L(Super_L(h)))}",
"STP*/THRA*/KPH*/*EU": "{#Shift_L(Alt_L(Super_L(i)))}",
"STP*/THRA*/KPH*/SKWR*": "{#Shift_L(Alt_L(Super_L(j)))}",
"STP*/THRA*/KPH*/K*": "{#Shift_L(Alt_L(Super_L(k)))}",
"STP*/THRA*/KPH*/HR*": "{#Shift_L(Alt_L(Super_L(l)))}",
"STP*/THRA*/KPH*/PH*": "{#Shift_L(Alt_L(Super_L(m)))}",
"STP*/THRA*/KPH*/TPH*": "{#Shift_L(Alt_L(Super_L(n)))}",
"STP*/THRA*/KPH*/O*": "{#Shift_L(Alt_L(Super_L(o)))}",
"STP*/THRA*/KPH*/P*": "{#Shift_L(Alt_L(Super_L(p)))}",
"STP*/THRA*/KPH*/KW*": "{#Shift_L(Alt_L(Super_L(q)))}",
"STP*/THRA*/KPH*/R*": "{#Shift_L(Alt_L(Super_L(r)))}",
"STP*/THRA*/KPH*/S*": "{#Shift_L(Alt_L(Super_L(s)))}",
"STP*/THRA*/KPH*/T*": "{#Shift_L(Alt_L(Super_L(t)))}",
"STP*/THRA*/KPH*/*U": "{#Shift_L(Alt_L(Super_L(u)))}",
"STP*/THRA*/KPH*/SR*": "{#Shift_L(Alt_L(Super_L(v)))}",
"STP*/THRA*/KPH*/W*": "{#Shift_L(Alt_L(Super_L(w)))}",
"STP*/THRA*/KPH*/KP*": "{#Shift_L(Alt_L(Super_L(x)))}",
"STP*/THRA*/KPH*/KWR*": "{#Shift_L(Alt_L(Super_L(y)))}",
"STP*/THRA*/KPH*/STKPW*": "{#Shift_L(Alt_L(Super_L(z)))}",
"STP*/THRA*/KPH*/0": "{#Shift_L(Alt_L(Super_L(0)))}",
"STP*/THRA*/KPH*/1": "{#Shift_L(Alt_L(Super_L(1)))}",
"STP*/THRA*/KPH*/2": "{#Shift_L(Alt_L(Super_L(2)))}",
"STP*/THRA*/KPH*/3": "{#Shift_L(Alt_L(Super_L(3)))}",
"STP*/THRA*/KPH*/4": "{#Shift_L(Alt_L(Super_L(4)))}",
"STP*/THRA*/KPH*/5": "{#Shift_L(Alt_L(Super_L(5)))}",
"STP*/THRA*/KPH*/6": "{#Shift_L(Alt_L(Super_L(6)))}",
"STP*/THRA*/KPH*/7": "{#Shift_L(Alt_L(Super_L(7)))}",
"STP*/THRA*/KPH*/8": "{#Shift_L(Alt_L(Super_L(8)))}",
"STP*/THRA*/KPH*/9": "{#Shift_L(Alt_L(Super_L(9)))}",
"STP*/THRA*/KPH*/KH-FG": "{#Shift_L(Alt_L(Super_L(grave)))}",
"STP*/THRA*/KPH*/KW-BG": "{#Shift_L(Alt_L(Super_L(comma)))}",
"STP*/THRA*/KPH*/PR*EPB": "{#Shift_L(Alt_L(Super_L(parenright)))}",
"STP*/THRA*/KPH*/PREPB": "{#Shift_L(Alt_L(Super_L(parenleft)))}",
"STP*/THRA*/KPH*/PW*FP": "{#Shift_L(Alt_L(Super_L(BackSpace)))}",
"STP*/THRA*/KPH*/PWR*BGT": "{#Shift_L(Alt_L(Super_L(bracketright)))}",
"STP*/THRA*/KPH*/PWR-BGT": "{#Shift_L(Alt_L(Super_L(bracketleft)))}",
"STP*/THRA*/KPH*/R-R": "{#Shift_L(Alt_L(Super_L(Return)))}",
"STP*/THRA*/KPH*/S-P": "{#Shift_L(Alt_L(Super_L(space)))}",
"STP*/THRA*/KPH*/SP*S": "{#Shift_L(Alt_L(Super_L()))}",
"STP*/THRA*/KPH*/SPWHRAERB": "{#Shift_L(Alt_L(Super_L(backslash)))}",
"STP*/THRA*/KPH*/STPH-G": "{#Shift_L(Alt_L(Super_L(Right)))}",
"STP*/THRA*/KPH*/STPH-B": "{#Shift_L(Alt_L(Super_L(Down)))}",
"STP*/THRA*/KPH*/STPH-P": "{#Shift_L(Alt_L(Super_L(Up)))}",
"STP*/THRA*/KPH*/STPH-R": "{#Shift_L(Alt_L(Super_L(Left)))}",
"STP*/THRA*/KPH*/TA*B": "{#Shift_L(Alt_L(Super_L(Tab)))}",
"STP*/THRA*/KPH*/TKHRAO*ET": "{#Shift_L(Alt_L(Super_L(Delete)))}",
"STP*/KHR*/THRA*/A*": "{#Shift_L(Control_L(Alt_L(a)))}",
"STP*/KHR*/THRA*/PW*": "{#Shift_L(Control_L(Alt_L(b)))}",
"STP*/KHR*/THRA*/KR*": "{#Shift_L(Control_L(Alt_L(c)))}",
"STP*/KHR*/THRA*/TK*": "{#Shift_L(Control_L(Alt_L(d)))}",
"STP*/KHR*/THRA*/*E": "{#Shift_L(Control_L(Alt_L(e)))}",
"STP*/KHR*/THRA*/TP*": "{#Shift_L(Control_L(Alt_L(f)))}",
"STP*/KHR*/THRA*/TKPW*": "{#Shift_L(Control_L(Alt_L(g)))}",
"STP*/KHR*/THRA*/H*": "{#Shift_L(Control_L(Alt_L(h)))}",
"STP*/KHR*/THRA*/*EU": "{#Shift_L(Control_L(Alt_L(i)))}",
"STP*/KHR*/THRA*/SKWR*": "{#Shift_L(Control_L(Alt_L(j)))}",
"STP*/KHR*/THRA*/K*": "{#Shift_L(Control_L(Alt_L(k)))}",
"STP*/KHR*/THRA*/HR*": "{#Shift_L(Control_L(Alt_L(l)))}",
"STP*/KHR*/THRA*/PH*": "{#Shift_L(Control_L(Alt_L(m)))}",
"STP*/KHR*/THRA*/TPH*": "{#Shift_L(Control_L(Alt_L(n)))}",
"STP*/KHR*/THRA*/O*": "{#Shift_L(Control_L(Alt_L(o)))}",
"STP*/KHR*/THRA*/P*": "{#Shift_L(Control_L(Alt_L(p)))}",
"STP*/KHR*/THRA*/KW*": "{#Shift_L(Control_L(Alt_L(q)))}",
"STP*/KHR*/THRA*/R*": "{#Shift_L(Control_L(Alt_L(r)))}",
"STP*/KHR*/THRA*/S*": "{#Shift_L(Control_L(Alt_L(s)))}",
"STP*/KHR*/THRA*/T*": "{#Shift_L(Control_L(Alt_L(t)))}",
"STP*/KHR*/THRA*/*U": "{#Shift_L(Control_L(Alt_L(u)))}",
"STP*/KHR*/THRA*/SR*": "{#Shift_L(Control_L(Alt_L(v)))}",
"STP*/KHR*/THRA*/W*": "{#Shift_L(Control_L(Alt_L(w)))}",
"STP*/KHR*/THRA*/KP*": "{#Shift_L(Control_L(Alt_L(x)))}",
"STP*/KHR*/THRA*/KWR*": "{#Shift_L(Control_L(Alt_L(y)))}",
"STP*/KHR*/THRA*/STKPW*": "{#Shift_L(Control_L(Alt_L(z)))}",
"STP*/KHR*/THRA*/0": "{#Shift_L(Control_L(Alt_L(0)))}",
"STP*/KHR*/THRA*/1": "{#Shift_L(Control_L(Alt_L(1)))}",
"STP*/KHR*/THRA*/2": "{#Shift_L(Control_L(Alt_L(2)))}",
"STP*/KHR*/THRA*/3": "{#Shift_L(Control_L(Alt_L(3)))}",
"STP*/KHR*/THRA*/4": "{#Shift_L(Control_L(Alt_L(4)))}",
"STP*/KHR*/THRA*/5": "{#Shift_L(Control_L(Alt_L(5)))}",
"STP*/KHR*/THRA*/6": "{#Shift_L(Control_L(Alt_L(6)))}",
"STP*/KHR*/THRA*/7": "{#Shift_L(Control_L(Alt_L(7)))}",
"STP*/KHR*/THRA*/8": "{#Shift_L(Control_L(Alt_L(8)))}",
"STP*/KHR*/THRA*/9": "{#Shift_L(Control_L(Alt_L(9)))}",
"STP*/KHR*/THRA*/KH-FG": "{#Shift_L(Control_L(Alt_L(grave)))}",
"STP*/KHR*/THRA*/KW-BG": "{#Shift_L(Control_L(Alt_L(comma)))}",
"STP*/KHR*/THRA*/PR*EPB": "{#Shift_L(Control_L(Alt_L(parenright)))}",
"STP*/KHR*/THRA*/PREPB": "{#Shift_L(Control_L(Alt_L(parenleft)))}",
"STP*/KHR*/THRA*/PW*FP": "{#Shift_L(Control_L(Alt_L(BackSpace)))}",
"STP*/KHR*/THRA*/PWR*BGT": "{#Shift_L(Control_L(Alt_L(bracketright)))}",
"STP*/KHR*/THRA*/PWR-BGT": "{#Shift_L(Control_L(Alt_L(bracketleft)))}",
"STP*/KHR*/THRA*/R-R": "{#Shift_L(Control_L(Alt_L(Return)))}",
"STP*/KHR*/THRA*/S-P": "{#Shift_L(Control_L(Alt_L(space)))}",
"STP*/KHR*/THRA*/SP*S": "{#Shift_L(Control_L(Alt_L()))}",
"STP*/KHR*/THRA*/SPWHRAERB": "{#Shift_L(Control_L(Alt_L(backslash)))}",
"STP*/KHR*/THRA*/STPH-G": "{#Shift_L(Control_L(Alt_L(Right)))}",
"STP*/KHR*/THRA*/STPH-B": "{#Shift_L(Control_L(Alt_L(Down)))}",
"STP*/KHR*/THRA*/STPH-P": "{#Shift_L(Control_L(Alt_L(Up)))}",
"STP*/KHR*/THRA*/STPH-R": "{#Shift_L(Control_L(Alt_L(Left)))}",
"STP*/KHR*/THRA*/TA*B": "{#Shift_L(Control_L(Alt_L(Tab)))}",
"STP*/KHR*/THRA*/TKHRAO*ET": "{#Shift_L(Control_L(Alt_L(Delete)))}",
"STP*/KHR*/KPH*/THRA*/A*": "{#Shift_L(Control_L(Super_L(Alt_L(a))))}",
"STP*/KHR*/KPH*/THRA*/PW*": "{#Shift_L(Control_L(Super_L(Alt_L(b))))}",
"STP*/KHR*/KPH*/THRA*/KR*": "{#Shift_L(Control_L(Super_L(Alt_L(c))))}",
"STP*/KHR*/KPH*/THRA*/TK*": "{#Shift_L(Control_L(Super_L(Alt_L(d))))}",
"STP*/KHR*/KPH*/THRA*/*E": "{#Shift_L(Control_L(Super_L(Alt_L(e))))}",
"STP*/KHR*/KPH*/THRA*/TP*": "{#Shift_L(Control_L(Super_L(Alt_L(f))))}",
"STP*/KHR*/KPH*/THRA*/TKPW*": "{#Shift_L(Control_L(Super_L(Alt_L(g))))}",
"STP*/KHR*/KPH*/THRA*/H*": "{#Shift_L(Control_L(Super_L(Alt_L(h))))}",
"STP*/KHR*/KPH*/THRA*/*EU": "{#Shift_L(Control_L(Super_L(Alt_L(i))))}",
"STP*/KHR*/KPH*/THRA*/SKWR*": "{#Shift_L(Control_L(Super_L(Alt_L(j))))}",
"STP*/KHR*/KPH*/THRA*/K*": "{#Shift_L(Control_L(Super_L(Alt_L(k))))}",
"STP*/KHR*/KPH*/THRA*/HR*": "{#Shift_L(Control_L(Super_L(Alt_L(l))))}",
"STP*/KHR*/KPH*/THRA*/PH*": "{#Shift_L(Control_L(Super_L(Alt_L(m))))}",
"STP*/KHR*/KPH*/THRA*/TPH*": "{#Shift_L(Control_L(Super_L(Alt_L(n))))}",
"STP*/KHR*/KPH*/THRA*/O*": "{#Shift_L(Control_L(Super_L(Alt_L(o))))}",
"STP*/KHR*/KPH*/THRA*/P*": "{#Shift_L(Control_L(Super_L(Alt_L(p))))}",
"STP*/KHR*/KPH*/THRA*/KW*": "{#Shift_L(Control_L(Super_L(Alt_L(q))))}",
"STP*/KHR*/KPH*/THRA*/R*": "{#Shift_L(Control_L(Super_L(Alt_L(r))))}",
"STP*/KHR*/KPH*/THRA*/S*": "{#Shift_L(Control_L(Super_L(Alt_L(s))))}",
"STP*/KHR*/KPH*/THRA*/T*": "{#Shift_L(Control_L(Super_L(Alt_L(t))))}",
"STP*/KHR*/KPH*/THRA*/*U": "{#Shift_L(Control_L(Super_L(Alt_L(u))))}",
"STP*/KHR*/KPH*/THRA*/SR*": "{#Shift_L(Control_L(Super_L(Alt_L(v))))}",
"STP*/KHR*/KPH*/THRA*/W*": "{#Shift_L(Control_L(Super_L(Alt_L(w))))}",
"STP*/KHR*/KPH*/THRA*/KP*": "{#Shift_L(Control_L(Super_L(Alt_L(x))))}",
"STP*/KHR*/KPH*/THRA*/KWR*": "{#Shift_L(Control_L(Super_L(Alt_L(y))))}",
"STP*/KHR*/KPH*/THRA*/STKPW*": "{#Shift_L(Control_L(Super_L(Alt_L(z))))}",
"STP*/KHR*/KPH*/THRA*/0": "{#Shift_L(Control_L(Super_L(Alt_L(0))))}",
"STP*/KHR*/KPH*/THRA*/1": "{#Shift_L(Control_L(Super_L(Alt_L(1))))}",
"STP*/KHR*/KPH*/THRA*/2": "{#Shift_L(Control_L(Super_L(Alt_L(2))))}",
"STP*/KHR*/KPH*/THRA*/3": "{#Shift_L(Control_L(Super_L(Alt_L(3))))}",
"STP*/KHR*/KPH*/THRA*/4": "{#Shift_L(Control_L(Super_L(Alt_L(4))))}",
"STP*/KHR*/KPH*/THRA*/5": "{#Shift_L(Control_L(Super_L(Alt_L(5))))}",
"STP*/KHR*/KPH*/THRA*/6": "{#Shift_L(Control_L(Super_L(Alt_L(6))))}",
"STP*/KHR*/KPH*/THRA*/7": "{#Shift_L(Control_L(Super_L(Alt_L(7))))}",
"STP*/KHR*/KPH*/THRA*/8": "{#Shift_L(Control_L(Super_L(Alt_L(8))))}",
"STP*/KHR*/KPH*/THRA*/9": "{#Shift_L(Control_L(Super_L(Alt_L(9))))}",
"STP*/KHR*/KPH*/THRA*/KH-FG": "{#Shift_L(Control_L(Super_L(Alt_L(grave))))}",
"STP*/KHR*/KPH*/THRA*/KW-BG": "{#Shift_L(Control_L(Super_L(Alt_L(comma))))}",
"STP*/KHR*/KPH*/THRA*/PR*EPB": "{#Shift_L(Control_L(Super_L(Alt_L(parenright))))}",
"STP*/KHR*/KPH*/THRA*/PREPB": "{#Shift_L(Control_L(Super_L(Alt_L(parenleft))))}",
"STP*/KHR*/KPH*/THRA*/PW*FP": "{#Shift_L(Control_L(Super_L(Alt_L(BackSpace))))}",
"STP*/KHR*/KPH*/THRA*/PWR*BGT": "{#Shift_L(Control_L(Super_L(Alt_L(bracketright))))}",
"STP*/KHR*/KPH*/THRA*/PWR-BGT": "{#Shift_L(Control_L(Super_L(Alt_L(bracketleft))))}",
"STP*/KHR*/KPH*/THRA*/R-R": "{#Shift_L(Control_L(Super_L(Alt_L(Return))))}",
"STP*/KHR*/KPH*/THRA*/S-P": "{#Shift_L(Control_L(Super_L(Alt_L(space))))}",
"STP*/KHR*/KPH*/THRA*/SP*S": "{#Shift_L(Control_L(Super_L(Alt_L())))}",
"STP*/KHR*/KPH*/THRA*/SPWHRAERB": "{#Shift_L(Control_L(Super_L(Alt_L(backslash))))}",
"STP*/KHR*/KPH*/THRA*/STPH-G": "{#Shift_L(Control_L(Super_L(Alt_L(Right))))}",
"STP*/KHR*/KPH*/THRA*/STPH-B": "{#Shift_L(Control_L(Super_L(Alt_L(Down))))}",
"STP*/KHR*/KPH*/THRA*/STPH-P": "{#Shift_L(Control_L(Super_L(Alt_L(Up))))}",
"STP*/KHR*/KPH*/THRA*/STPH-R": "{#Shift_L(Control_L(Super_L(Alt_L(Left))))}",
"STP*/KHR*/KPH*/THRA*/TA*B": "{#Shift_L(Control_L(Super_L(Alt_L(Tab))))}",
"STP*/KHR*/KPH*/THRA*/TKHRAO*ET": "{#Shift_L(Control_L(Super_L(Alt_L(Delete))))}",
"STP*/KHR*/KPH*/A*": "{#Shift_L(Control_L(Super_L(a)))}",
"STP*/KHR*/KPH*/PW*": "{#Shift_L(Control_L(Super_L(b)))}",
"STP*/KHR*/KPH*/KR*": "{#Shift_L(Control_L(Super_L(c)))}",
"STP*/KHR*/KPH*/TK*": "{#Shift_L(Control_L(Super_L(d)))}",
"STP*/KHR*/KPH*/*E": "{#Shift_L(Control_L(Super_L(e)))}",
"STP*/KHR*/KPH*/TP*": "{#Shift_L(Control_L(Super_L(f)))}",
"STP*/KHR*/KPH*/TKPW*": "{#Shift_L(Control_L(Super_L(g)))}",
"STP*/KHR*/KPH*/H*": "{#Shift_L(Control_L(Super_L(h)))}",
"STP*/KHR*/KPH*/*EU": "{#Shift_L(Control_L(Super_L(i)))}",
"STP*/KHR*/KPH*/SKWR*": "{#Shift_L(Control_L(Super_L(j)))}",
"STP*/KHR*/KPH*/K*": "{#Shift_L(Control_L(Super_L(k)))}",
"STP*/KHR*/KPH*/HR*": "{#Shift_L(Control_L(Super_L(l)))}",
"STP*/KHR*/KPH*/PH*": "{#Shift_L(Control_L(Super_L(m)))}",
"STP*/KHR*/KPH*/TPH*": "{#Shift_L(Control_L(Super_L(n)))}",
"STP*/KHR*/KPH*/O*": "{#Shift_L(Control_L(Super_L(o)))}",
"STP*/KHR*/KPH*/P*": "{#Shift_L(Control_L(Super_L(p)))}",
"STP*/KHR*/KPH*/KW*": "{#Shift_L(Control_L(Super_L(q)))}",
"STP*/KHR*/KPH*/R*": "{#Shift_L(Control_L(Super_L(r)))}",
"STP*/KHR*/KPH*/S*": "{#Shift_L(Control_L(Super_L(s)))}",
"STP*/KHR*/KPH*/T*": "{#Shift_L(Control_L(Super_L(t)))}",
"STP*/KHR*/KPH*/*U": "{#Shift_L(Control_L(Super_L(u)))}",
"STP*/KHR*/KPH*/SR*": "{#Shift_L(Control_L(Super_L(v)))}",
"STP*/KHR*/KPH*/W*": "{#Shift_L(Control_L(Super_L(w)))}",
"STP*/KHR*/KPH*/KP*": "{#Shift_L(Control_L(Super_L(x)))}",
"STP*/KHR*/KPH*/KWR*": "{#Shift_L(Control_L(Super_L(y)))}",
"STP*/KHR*/KPH*/STKPW*": "{#Shift_L(Control_L(Super_L(z)))}",
"STP*/KHR*/KPH*/0": "{#Shift_L(Control_L(Super_L(0)))}",
"STP*/KHR*/KPH*/1": "{#Shift_L(Control_L(Super_L(1)))}",
"STP*/KHR*/KPH*/2": "{#Shift_L(Control_L(Super_L(2)))}",
"STP*/KHR*/KPH*/3": "{#Shift_L(Control_L(Super_L(3)))}",
"STP*/KHR*/KPH*/4": "{#Shift_L(Control_L(Super_L(4)))}",
"STP*/KHR*/KPH*/5": "{#Shift_L(Control_L(Super_L(5)))}",
"STP*/KHR*/KPH*/6": "{#Shift_L(Control_L(Super_L(6)))}",
"STP*/KHR*/KPH*/7": "{#Shift_L(Control_L(Super_L(7)))}",
"STP*/KHR*/KPH*/8": "{#Shift_L(Control_L(Super_L(8)))}",
"STP*/KHR*/KPH*/9": "{#Shift_L(Control_L(Super_L(9)))}",
"STP*/KHR*/KPH*/KH-FG": "{#Shift_L(Control_L(Super_L(grave)))}",
"STP*/KHR*/KPH*/KW-BG": "{#Shift_L(Control_L(Super_L(comma)))}",
"STP*/KHR*/KPH*/PR*EPB": "{#Shift_L(Control_L(Super_L(parenright)))}",
"STP*/KHR*/KPH*/PREPB": "{#Shift_L(Control_L(Super_L(parenleft)))}",
"STP*/KHR*/KPH*/PW*FP": "{#Shift_L(Control_L(Super_L(BackSpace)))}",
"STP*/KHR*/KPH*/PWR*BGT": "{#Shift_L(Control_L(Super_L(bracketright)))}",
"STP*/KHR*/KPH*/PWR-BGT": "{#Shift_L(Control_L(Super_L(bracketleft)))}",
"STP*/KHR*/KPH*/R-R": "{#Shift_L(Control_L(Super_L(Return)))}",
"STP*/KHR*/KPH*/S-P": "{#Shift_L(Control_L(Super_L(space)))}",
"STP*/KHR*/KPH*/SP*S": "{#Shift_L(Control_L(Super_L()))}",
"STP*/KHR*/KPH*/SPWHRAERB": "{#Shift_L(Control_L(Super_L(backslash)))}",
"STP*/KHR*/KPH*/STPH-G": "{#Shift_L(Control_L(Super_L(Right)))}",
"STP*/KHR*/KPH*/STPH-B": "{#Shift_L(Control_L(Super_L(Down)))}",
"STP*/KHR*/KPH*/STPH-P": "{#Shift_L(Control_L(Super_L(Up)))}",
"STP*/KHR*/KPH*/STPH-R": "{#Shift_L(Control_L(Super_L(Left)))}",
"STP*/KHR*/KPH*/TA*B": "{#Shift_L(Control_L(Super_L(Tab)))}",
"STP*/KHR*/KPH*/TKHRAO*ET": "{#Shift_L(Control_L(Super_L(Delete)))}",
"STP*/KHR*/THRA*/KPH*/A*": "{#Shift_L(Control_L(Alt_L(Super_L(a))))}",
"STP*/KHR*/THRA*/KPH*/PW*": "{#Shift_L(Control_L(Alt_L(Super_L(b))))}",
"STP*/KHR*/THRA*/KPH*/KR*": "{#Shift_L(Control_L(Alt_L(Super_L(c))))}",
"STP*/KHR*/THRA*/KPH*/TK*": "{#Shift_L(Control_L(Alt_L(Super_L(d))))}",
"STP*/KHR*/THRA*/KPH*/*E": "{#Shift_L(Control_L(Alt_L(Super_L(e))))}",
"STP*/KHR*/THRA*/KPH*/TP*": "{#Shift_L(Control_L(Alt_L(Super_L(f))))}",
"STP*/KHR*/THRA*/KPH*/TKPW*": "{#Shift_L(Control_L(Alt_L(Super_L(g))))}",
"STP*/KHR*/THRA*/KPH*/H*": "{#Shift_L(Control_L(Alt_L(Super_L(h))))}",
"STP*/KHR*/THRA*/KPH*/*EU": "{#Shift_L(Control_L(Alt_L(Super_L(i))))}",
"STP*/KHR*/THRA*/KPH*/SKWR*": "{#Shift_L(Control_L(Alt_L(Super_L(j))))}",
"STP*/KHR*/THRA*/KPH*/K*": "{#Shift_L(Control_L(Alt_L(Super_L(k))))}",
"STP*/KHR*/THRA*/KPH*/HR*": "{#Shift_L(Control_L(Alt_L(Super_L(l))))}",
"STP*/KHR*/THRA*/KPH*/PH*": "{#Shift_L(Control_L(Alt_L(Super_L(m))))}",
"STP*/KHR*/THRA*/KPH*/TPH*": "{#Shift_L(Control_L(Alt_L(Super_L(n))))}",
"STP*/KHR*/THRA*/KPH*/O*": "{#Shift_L(Control_L(Alt_L(Super_L(o))))}",
"STP*/KHR*/THRA*/KPH*/P*": "{#Shift_L(Control_L(Alt_L(Super_L(p))))}",
"STP*/KHR*/THRA*/KPH*/KW*": "{#Shift_L(Control_L(Alt_L(Super_L(q))))}",
"STP*/KHR*/THRA*/KPH*/R*": "{#Shift_L(Control_L(Alt_L(Super_L(r))))}",
"STP*/KHR*/THRA*/KPH*/S*": "{#Shift_L(Control_L(Alt_L(Super_L(s))))}",
"STP*/KHR*/THRA*/KPH*/T*": "{#Shift_L(Control_L(Alt_L(Super_L(t))))}",
"STP*/KHR*/THRA*/KPH*/*U": "{#Shift_L(Control_L(Alt_L(Super_L(u))))}",
"STP*/KHR*/THRA*/KPH*/SR*": "{#Shift_L(Control_L(Alt_L(Super_L(v))))}",
"STP*/KHR*/THRA*/KPH*/W*": "{#Shift_L(Control_L(Alt_L(Super_L(w))))}",
"STP*/KHR*/THRA*/KPH*/KP*": "{#Shift_L(Control_L(Alt_L(Super_L(x))))}",
"STP*/KHR*/THRA*/KPH*/KWR*": "{#Shift_L(Control_L(Alt_L(Super_L(y))))}",
"STP*/KHR*/THRA*/KPH*/STKPW*": "{#Shift_L(Control_L(Alt_L(Super_L(z))))}",
"STP*/KHR*/THRA*/KPH*/0": "{#Shift_L(Control_L(Alt_L(Super_L(0))))}",
"STP*/KHR*/THRA*/KPH*/1": "{#Shift_L(Control_L(Alt_L(Super_L(1))))}",
"STP*/KHR*/THRA*/KPH*/2": "{#Shift_L(Control_L(Alt_L(Super_L(2))))}",
"STP*/KHR*/THRA*/KPH*/3": "{#Shift_L(Control_L(Alt_L(Super_L(3))))}",
"STP*/KHR*/THRA*/KPH*/4": "{#Shift_L(Control_L(Alt_L(Super_L(4))))}",
"STP*/KHR*/THRA*/KPH*/5": "{#Shift_L(Control_L(Alt_L(Super_L(5))))}",
"STP*/KHR*/THRA*/KPH*/6": "{#Shift_L(Control_L(Alt_L(Super_L(6))))}",
"STP*/KHR*/THRA*/KPH*/7": "{#Shift_L(Control_L(Alt_L(Super_L(7))))}",
"STP*/KHR*/THRA*/KPH*/8": "{#Shift_L(Control_L(Alt_L(Super_L(8))))}",
"STP*/KHR*/THRA*/KPH*/9": "{#Shift_L(Control_L(Alt_L(Super_L(9))))}",
"STP*/KHR*/THRA*/KPH*/KH-FG": "{#Shift_L(Control_L(Alt_L(Super_L(grave))))}",
"STP*/KHR*/THRA*/KPH*/KW-BG": "{#Shift_L(Control_L(Alt_L(Super_L(comma))))}",
"STP*/KHR*/THRA*/KPH*/PR*EPB": "{#Shift_L(Control_L(Alt_L(Super_L(parenright))))}",
"STP*/KHR*/THRA*/KPH*/PREPB": "{#Shift_L(Control_L(Alt_L(Super_L(parenleft))))}",
"STP*/KHR*/THRA*/KPH*/PW*FP": "{#Shift_L(Control_L(Alt_L(Super_L(BackSpace))))}",
"STP*/KHR*/THRA*/KPH*/PWR*BGT": "{#Shift_L(Control_L(Alt_L(Super_L(bracketright))))}",
"STP*/KHR*/THRA*/KPH*/PWR-BGT": "{#Shift_L(Control_L(Alt_L(Super_L(bracketleft))))}",
"STP*/KHR*/THRA*/KPH*/R-R": "{#Shift_L(Control_L(Alt_L(Super_L(Return))))}",
"STP*/KHR*/THRA*/KPH*/S-P": "{#Shift_L(Control_L(Alt_L(Super_L(space))))}",
"STP*/KHR*/THRA*/KPH*/SP*S": "{#Shift_L(Control_L(Alt_L(Super_L())))}",
"STP*/KHR*/THRA*/KPH*/SPWHRAERB": "{#Shift_L(Control_L(Alt_L(Super_L(backslash))))}",
"STP*/KHR*/THRA*/KPH*/STPH-G": "{#Shift_L(Control_L(Alt_L(Super_L(Right))))}",
"STP*/KHR*/THRA*/KPH*/STPH-B": "{#Shift_L(Control_L(Alt_L(Super_L(Down))))}",
"STP*/KHR*/THRA*/KPH*/STPH-P": "{#Shift_L(Control_L(Alt_L(Super_L(Up))))}",
"STP*/KHR*/THRA*/KPH*/STPH-R": "{#Shift_L(Control_L(Alt_L(Super_L(Left))))}",
"STP*/KHR*/THRA*/KPH*/TA*B": "{#Shift_L(Control_L(Alt_L(Super_L(Tab))))}",
"STP*/KHR*/THRA*/KPH*/TKHRAO*ET": "{#Shift_L(Control_L(Alt_L(Super_L(Delete))))}",
"STP*/THRA*/A*": "{#Shift_L(Alt_L(a))}",
"STP*/THRA*/PW*": "{#Shift_L(Alt_L(b))}",
"STP*/THRA*/KR*": "{#Shift_L(Alt_L(c))}",
"STP*/THRA*/TK*": "{#Shift_L(Alt_L(d))}",
"STP*/THRA*/*E": "{#Shift_L(Alt_L(e))}",
"STP*/THRA*/TP*": "{#Shift_L(Alt_L(f))}",
"STP*/THRA*/TKPW*": "{#Shift_L(Alt_L(g))}",
"STP*/THRA*/H*": "{#Shift_L(Alt_L(h))}",
"STP*/THRA*/*EU": "{#Shift_L(Alt_L(i))}",
"STP*/THRA*/SKWR*": "{#Shift_L(Alt_L(j))}",
"STP*/THRA*/K*": "{#Shift_L(Alt_L(k))}",
"STP*/THRA*/HR*": "{#Shift_L(Alt_L(l))}",
"STP*/THRA*/PH*": "{#Shift_L(Alt_L(m))}",
"STP*/THRA*/TPH*": "{#Shift_L(Alt_L(n))}",
"STP*/THRA*/O*": "{#Shift_L(Alt_L(o))}",
"STP*/THRA*/P*": "{#Shift_L(Alt_L(p))}",
"STP*/THRA*/KW*": "{#Shift_L(Alt_L(q))}",
"STP*/THRA*/R*": "{#Shift_L(Alt_L(r))}",
"STP*/THRA*/S*": "{#Shift_L(Alt_L(s))}",
"STP*/THRA*/T*": "{#Shift_L(Alt_L(t))}",
"STP*/THRA*/*U": "{#Shift_L(Alt_L(u))}",
"STP*/THRA*/SR*": "{#Shift_L(Alt_L(v))}",
"STP*/THRA*/W*": "{#Shift_L(Alt_L(w))}",
"STP*/THRA*/KP*": "{#Shift_L(Alt_L(x))}",
"STP*/THRA*/KWR*": "{#Shift_L(Alt_L(y))}",
"STP*/THRA*/STKPW*": "{#Shift_L(Alt_L(z))}",
"STP*/THRA*/0": "{#Shift_L(Alt_L(0))}",
"STP*/THRA*/1": "{#Shift_L(Alt_L(1))}",
"STP*/THRA*/2": "{#Shift_L(Alt_L(2))}",
"STP*/THRA*/3": "{#Shift_L(Alt_L(3))}",
"STP*/THRA*/4": "{#Shift_L(Alt_L(4))}",
"STP*/THRA*/5": "{#Shift_L(Alt_L(5))}",
"STP*/THRA*/6": "{#Shift_L(Alt_L(6))}",
"STP*/THRA*/7": "{#Shift_L(Alt_L(7))}",
"STP*/THRA*/8": "{#Shift_L(Alt_L(8))}",
"STP*/THRA*/9": "{#Shift_L(Alt_L(9))}",
"STP*/THRA*/KH-FG": "{#Shift_L(Alt_L(grave))}",
"STP*/THRA*/KW-BG": "{#Shift_L(Alt_L(comma))}",
"STP*/THRA*/PR*EPB": "{#Shift_L(Alt_L(parenright))}",
"STP*/THRA*/PREPB": "{#Shift_L(Alt_L(parenleft))}",
"STP*/THRA*/PW*FP": "{#Shift_L(Alt_L(BackSpace))}",
"STP*/THRA*/PWR*BGT": "{#Shift_L(Alt_L(bracketright))}",
"STP*/THRA*/PWR-BGT": "{#Shift_L(Alt_L(bracketleft))}",
"STP*/THRA*/R-R": "{#Shift_L(Alt_L(Return))}",
"STP*/THRA*/S-P": "{#Shift_L(Alt_L(space))}",
"STP*/THRA*/SP*S": "{#Shift_L(Alt_L())}",
"STP*/THRA*/SPWHRAERB": "{#Shift_L(Alt_L(backslash))}",
"STP*/THRA*/STPH-G": "{#Shift_L(Alt_L(Right))}",
"STP*/THRA*/STPH-B": "{#Shift_L(Alt_L(Down))}",
"STP*/THRA*/STPH-P": "{#Shift_L(Alt_L(Up))}",
"STP*/THRA*/STPH-R": "{#Shift_L(Alt_L(Left))}",
"STP*/THRA*/TA*B": "{#Shift_L(Alt_L(Tab))}",
"STP*/THRA*/TKHRAO*ET": "{#Shift_L(Alt_L(Delete))}",
"STP*/KHR*/THRA*/A*": "{#Shift_L(Control_L(Alt_L(a)))}",
"STP*/KHR*/THRA*/PW*": "{#Shift_L(Control_L(Alt_L(b)))}",
"STP*/KHR*/THRA*/KR*": "{#Shift_L(Control_L(Alt_L(c)))}",
"STP*/KHR*/THRA*/TK*": "{#Shift_L(Control_L(Alt_L(d)))}",
"STP*/KHR*/THRA*/*E": "{#Shift_L(Control_L(Alt_L(e)))}",
"STP*/KHR*/THRA*/TP*": "{#Shift_L(Control_L(Alt_L(f)))}",
"STP*/KHR*/THRA*/TKPW*": "{#Shift_L(Control_L(Alt_L(g)))}",
"STP*/KHR*/THRA*/H*": "{#Shift_L(Control_L(Alt_L(h)))}",
"STP*/KHR*/THRA*/*EU": "{#Shift_L(Control_L(Alt_L(i)))}",
"STP*/KHR*/THRA*/SKWR*": "{#Shift_L(Control_L(Alt_L(j)))}",
"STP*/KHR*/THRA*/K*": "{#Shift_L(Control_L(Alt_L(k)))}",
"STP*/KHR*/THRA*/HR*": "{#Shift_L(Control_L(Alt_L(l)))}",
"STP*/KHR*/THRA*/PH*": "{#Shift_L(Control_L(Alt_L(m)))}",
"STP*/KHR*/THRA*/TPH*": "{#Shift_L(Control_L(Alt_L(n)))}",
"STP*/KHR*/THRA*/O*": "{#Shift_L(Control_L(Alt_L(o)))}",
"STP*/KHR*/THRA*/P*": "{#Shift_L(Control_L(Alt_L(p)))}",
"STP*/KHR*/THRA*/KW*": "{#Shift_L(Control_L(Alt_L(q)))}",
"STP*/KHR*/THRA*/R*": "{#Shift_L(Control_L(Alt_L(r)))}",
"STP*/KHR*/THRA*/S*": "{#Shift_L(Control_L(Alt_L(s)))}",
"STP*/KHR*/THRA*/T*": "{#Shift_L(Control_L(Alt_L(t)))}",
"STP*/KHR*/THRA*/*U": "{#Shift_L(Control_L(Alt_L(u)))}",
"STP*/KHR*/THRA*/SR*": "{#Shift_L(Control_L(Alt_L(v)))}",
"STP*/KHR*/THRA*/W*": "{#Shift_L(Control_L(Alt_L(w)))}",
"STP*/KHR*/THRA*/KP*": "{#Shift_L(Control_L(Alt_L(x)))}",
"STP*/KHR*/THRA*/KWR*": "{#Shift_L(Control_L(Alt_L(y)))}",
"STP*/KHR*/THRA*/STKPW*": "{#Shift_L(Control_L(Alt_L(z)))}",
"STP*/KHR*/THRA*/0": "{#Shift_L(Control_L(Alt_L(0)))}",
"STP*/KHR*/THRA*/1": "{#Shift_L(Control_L(Alt_L(1)))}",
"STP*/KHR*/THRA*/2": "{#Shift_L(Control_L(Alt_L(2)))}",
"STP*/KHR*/THRA*/3": "{#Shift_L(Control_L(Alt_L(3)))}",
"STP*/KHR*/THRA*/4": "{#Shift_L(Control_L(Alt_L(4)))}",
"STP*/KHR*/THRA*/5": "{#Shift_L(Control_L(Alt_L(5)))}",
"STP*/KHR*/THRA*/6": "{#Shift_L(Control_L(Alt_L(6)))}",
"STP*/KHR*/THRA*/7": "{#Shift_L(Control_L(Alt_L(7)))}",
"STP*/KHR*/THRA*/8": "{#Shift_L(Control_L(Alt_L(8)))}",
"STP*/KHR*/THRA*/9": "{#Shift_L(Control_L(Alt_L(9)))}",
"STP*/KHR*/THRA*/KH-FG": "{#Shift_L(Control_L(Alt_L(grave)))}",
"STP*/KHR*/THRA*/KW-BG": "{#Shift_L(Control_L(Alt_L(comma)))}",
"STP*/KHR*/THRA*/PR*EPB": "{#Shift_L(Control_L(Alt_L(parenright)))}",
"STP*/KHR*/THRA*/PREPB": "{#Shift_L(Control_L(Alt_L(parenleft)))}",
"STP*/KHR*/THRA*/PW*FP": "{#Shift_L(Control_L(Alt_L(BackSpace)))}",
"STP*/KHR*/THRA*/PWR*BGT": "{#Shift_L(Control_L(Alt_L(bracketright)))}",
"STP*/KHR*/THRA*/PWR-BGT": "{#Shift_L(Control_L(Alt_L(bracketleft)))}",
"STP*/KHR*/THRA*/R-R": "{#Shift_L(Control_L(Alt_L(Return)))}",
"STP*/KHR*/THRA*/S-P": "{#Shift_L(Control_L(Alt_L(space)))}",
"STP*/KHR*/THRA*/SP*S": "{#Shift_L(Control_L(Alt_L()))}",
"STP*/KHR*/THRA*/SPWHRAERB": "{#Shift_L(Control_L(Alt_L(backslash)))}",
"STP*/KHR*/THRA*/STPH-G": "{#Shift_L(Control_L(Alt_L(Right)))}",
"STP*/KHR*/THRA*/STPH-B": "{#Shift_L(Control_L(Alt_L(Down)))}",
"STP*/KHR*/THRA*/STPH-P": "{#Shift_L(Control_L(Alt_L(Up)))}",
"STP*/KHR*/THRA*/STPH-R": "{#Shift_L(Control_L(Alt_L(Left)))}",
"STP*/KHR*/THRA*/TA*B": "{#Shift_L(Control_L(Alt_L(Tab)))}",
"STP*/KHR*/THRA*/TKHRAO*ET": "{#Shift_L(Control_L(Alt_L(Delete)))}",
"STP*/KHR*/A*": "{#Shift_L(Control_L(a))}",
"STP*/KHR*/PW*": "{#Shift_L(Control_L(b))}",
"STP*/KHR*/KR*": "{#Shift_L(Control_L(c))}",
"STP*/KHR*/TK*": "{#Shift_L(Control_L(d))}",
"STP*/KHR*/*E": "{#Shift_L(Control_L(e))}",
"STP*/KHR*/TP*": "{#Shift_L(Control_L(f))}",
"STP*/KHR*/TKPW*": "{#Shift_L(Control_L(g))}",
"STP*/KHR*/H*": "{#Shift_L(Control_L(h))}",
"STP*/KHR*/*EU": "{#Shift_L(Control_L(i))}",
"STP*/KHR*/SKWR*": "{#Shift_L(Control_L(j))}",
"STP*/KHR*/K*": "{#Shift_L(Control_L(k))}",
"STP*/KHR*/HR*": "{#Shift_L(Control_L(l))}",
"STP*/KHR*/PH*": "{#Shift_L(Control_L(m))}",
"STP*/KHR*/TPH*": "{#Shift_L(Control_L(n))}",
"STP*/KHR*/O*": "{#Shift_L(Control_L(o))}",
"STP*/KHR*/P*": "{#Shift_L(Control_L(p))}",
"STP*/KHR*/KW*": "{#Shift_L(Control_L(q))}",
"STP*/KHR*/R*": "{#Shift_L(Control_L(r))}",
"STP*/KHR*/S*": "{#Shift_L(Control_L(s))}",
"STP*/KHR*/T*": "{#Shift_L(Control_L(t))}",
"STP*/KHR*/*U": "{#Shift_L(Control_L(u))}",
"STP*/KHR*/SR*": "{#Shift_L(Control_L(v))}",
"STP*/KHR*/W*": "{#Shift_L(Control_L(w))}",
"STP*/KHR*/KP*": "{#Shift_L(Control_L(x))}",
"STP*/KHR*/KWR*": "{#Shift_L(Control_L(y))}",
"STP*/KHR*/STKPW*": "{#Shift_L(Control_L(z))}",
"STP*/KHR*/0": "{#Shift_L(Control_L(0))}",
"STP*/KHR*/1": "{#Shift_L(Control_L(1))}",
"STP*/KHR*/2": "{#Shift_L(Control_L(2))}",
"STP*/KHR*/3": "{#Shift_L(Control_L(3))}",
"STP*/KHR*/4": "{#Shift_L(Control_L(4))}",
"STP*/KHR*/5": "{#Shift_L(Control_L(5))}",
"STP*/KHR*/6": "{#Shift_L(Control_L(6))}",
"STP*/KHR*/7": "{#Shift_L(Control_L(7))}",
"STP*/KHR*/8": "{#Shift_L(Control_L(8))}",
"STP*/KHR*/9": "{#Shift_L(Control_L(9))}",
"STP*/KHR*/KH-FG": "{#Shift_L(Control_L(grave))}",
"STP*/KHR*/KW-BG": "{#Shift_L(Control_L(comma))}",
"STP*/KHR*/PR*EPB": "{#Shift_L(Control_L(parenright))}",
"STP*/KHR*/PREPB": "{#Shift_L(Control_L(parenleft))}",
"STP*/KHR*/PW*FP": "{#Shift_L(Control_L(BackSpace))}",
"STP*/KHR*/PWR*BGT": "{#Shift_L(Control_L(bracketright))}",
"STP*/KHR*/PWR-BGT": "{#Shift_L(Control_L(bracketleft))}",
"STP*/KHR*/R-R": "{#Shift_L(Control_L(Return))}",
"STP*/KHR*/S-P": "{#Shift_L(Control_L(space))}",
"STP*/KHR*/SP*S": "{#Shift_L(Control_L())}",
"STP*/KHR*/SPWHRAERB": "{#Shift_L(Control_L(backslash))}",
"STP*/KHR*/STPH-G": "{#Shift_L(Control_L(Right))}",
"STP*/KHR*/STPH-B": "{#Shift_L(Control_L(Down))}",
"STP*/KHR*/STPH-P": "{#Shift_L(Control_L(Up))}",
"STP*/KHR*/STPH-R": "{#Shift_L(Control_L(Left))}",
"STP*/KHR*/TA*B": "{#Shift_L(Control_L(Tab))}",
"STP*/KHR*/TKHRAO*ET": "{#Shift_L(Control_L(Delete))}",
"STP*/THRA*/KHR*/A*": "{#Shift_L(Alt_L(Control_L(a)))}",
"STP*/THRA*/KHR*/PW*": "{#Shift_L(Alt_L(Control_L(b)))}",
"STP*/THRA*/KHR*/KR*": "{#Shift_L(Alt_L(Control_L(c)))}",
"STP*/THRA*/KHR*/TK*": "{#Shift_L(Alt_L(Control_L(d)))}",
"STP*/THRA*/KHR*/*E": "{#Shift_L(Alt_L(Control_L(e)))}",
"STP*/THRA*/KHR*/TP*": "{#Shift_L(Alt_L(Control_L(f)))}",
"STP*/THRA*/KHR*/TKPW*": "{#Shift_L(Alt_L(Control_L(g)))}",
"STP*/THRA*/KHR*/H*": "{#Shift_L(Alt_L(Control_L(h)))}",
"STP*/THRA*/KHR*/*EU": "{#Shift_L(Alt_L(Control_L(i)))}",
"STP*/THRA*/KHR*/SKWR*": "{#Shift_L(Alt_L(Control_L(j)))}",
"STP*/THRA*/KHR*/K*": "{#Shift_L(Alt_L(Control_L(k)))}",
"STP*/THRA*/KHR*/HR*": "{#Shift_L(Alt_L(Control_L(l)))}",
"STP*/THRA*/KHR*/PH*": "{#Shift_L(Alt_L(Control_L(m)))}",
"STP*/THRA*/KHR*/TPH*": "{#Shift_L(Alt_L(Control_L(n)))}",
"STP*/THRA*/KHR*/O*": "{#Shift_L(Alt_L(Control_L(o)))}",
"STP*/THRA*/KHR*/P*": "{#Shift_L(Alt_L(Control_L(p)))}",
"STP*/THRA*/KHR*/KW*": "{#Shift_L(Alt_L(Control_L(q)))}",
"STP*/THRA*/KHR*/R*": "{#Shift_L(Alt_L(Control_L(r)))}",
"STP*/THRA*/KHR*/S*": "{#Shift_L(Alt_L(Control_L(s)))}",
"STP*/THRA*/KHR*/T*": "{#Shift_L(Alt_L(Control_L(t)))}",
"STP*/THRA*/KHR*/*U": "{#Shift_L(Alt_L(Control_L(u)))}",
"STP*/THRA*/KHR*/SR*": "{#Shift_L(Alt_L(Control_L(v)))}",
"STP*/THRA*/KHR*/W*": "{#Shift_L(Alt_L(Control_L(w)))}",
"STP*/THRA*/KHR*/KP*": "{#Shift_L(Alt_L(Control_L(x)))}",
"STP*/THRA*/KHR*/KWR*": "{#Shift_L(Alt_L(Control_L(y)))}",
"STP*/THRA*/KHR*/STKPW*": "{#Shift_L(Alt_L(Control_L(z)))}",
"STP*/THRA*/KHR*/0": "{#Shift_L(Alt_L(Control_L(0)))}",
"STP*/THRA*/KHR*/1": "{#Shift_L(Alt_L(Control_L(1)))}",
"STP*/THRA*/KHR*/2": "{#Shift_L(Alt_L(Control_L(2)))}",
"STP*/THRA*/KHR*/3": "{#Shift_L(Alt_L(Control_L(3)))}",
"STP*/THRA*/KHR*/4": "{#Shift_L(Alt_L(Control_L(4)))}",
"STP*/THRA*/KHR*/5": "{#Shift_L(Alt_L(Control_L(5)))}",
"STP*/THRA*/KHR*/6": "{#Shift_L(Alt_L(Control_L(6)))}",
"STP*/THRA*/KHR*/7": "{#Shift_L(Alt_L(Control_L(7)))}",
"STP*/THRA*/KHR*/8": "{#Shift_L(Alt_L(Control_L(8)))}",
"STP*/THRA*/KHR*/9": "{#Shift_L(Alt_L(Control_L(9)))}",
"STP*/THRA*/KHR*/KH-FG": "{#Shift_L(Alt_L(Control_L(grave)))}",
"STP*/THRA*/KHR*/KW-BG": "{#Shift_L(Alt_L(Control_L(comma)))}",
"STP*/THRA*/KHR*/PR*EPB": "{#Shift_L(Alt_L(Control_L(parenright)))}",
"STP*/THRA*/KHR*/PREPB": "{#Shift_L(Alt_L(Control_L(parenleft)))}",
"STP*/THRA*/KHR*/PW*FP": "{#Shift_L(Alt_L(Control_L(BackSpace)))}",
"STP*/THRA*/KHR*/PWR*BGT": "{#Shift_L(Alt_L(Control_L(bracketright)))}",
"STP*/THRA*/KHR*/PWR-BGT": "{#Shift_L(Alt_L(Control_L(bracketleft)))}",
"STP*/THRA*/KHR*/R-R": "{#Shift_L(Alt_L(Control_L(Return)))}",
"STP*/THRA*/KHR*/S-P": "{#Shift_L(Alt_L(Control_L(space)))}",
"STP*/THRA*/KHR*/SP*S": "{#Shift_L(Alt_L(Control_L()))}",
"STP*/THRA*/KHR*/SPWHRAERB": "{#Shift_L(Alt_L(Control_L(backslash)))}",
"STP*/THRA*/KHR*/STPH-G": "{#Shift_L(Alt_L(Control_L(Right)))}",
"STP*/THRA*/KHR*/STPH-B": "{#Shift_L(Alt_L(Control_L(Down)))}",
"STP*/THRA*/KHR*/STPH-P": "{#Shift_L(Alt_L(Control_L(Up)))}",
"STP*/THRA*/KHR*/STPH-R": "{#Shift_L(Alt_L(Control_L(Left)))}",
"STP*/THRA*/KHR*/TA*B": "{#Shift_L(Alt_L(Control_L(Tab)))}",
"STP*/THRA*/KHR*/TKHRAO*ET": "{#Shift_L(Alt_L(Control_L(Delete)))}",
"STP*/KPH*/THRA*/A*": "{#Shift_L(Super_L(Alt_L(a)))}",
"STP*/KPH*/THRA*/PW*": "{#Shift_L(Super_L(Alt_L(b)))}",
"STP*/KPH*/THRA*/KR*": "{#Shift_L(Super_L(Alt_L(c)))}",
"STP*/KPH*/THRA*/TK*": "{#Shift_L(Super_L(Alt_L(d)))}",
"STP*/KPH*/THRA*/*E": "{#Shift_L(Super_L(Alt_L(e)))}",
"STP*/KPH*/THRA*/TP*": "{#Shift_L(Super_L(Alt_L(f)))}",
"STP*/KPH*/THRA*/TKPW*": "{#Shift_L(Super_L(Alt_L(g)))}",
"STP*/KPH*/THRA*/H*": "{#Shift_L(Super_L(Alt_L(h)))}",
"STP*/KPH*/THRA*/*EU": "{#Shift_L(Super_L(Alt_L(i)))}",
"STP*/KPH*/THRA*/SKWR*": "{#Shift_L(Super_L(Alt_L(j)))}",
"STP*/KPH*/THRA*/K*": "{#Shift_L(Super_L(Alt_L(k)))}",
"STP*/KPH*/THRA*/HR*": "{#Shift_L(Super_L(Alt_L(l)))}",
"STP*/KPH*/THRA*/PH*": "{#Shift_L(Super_L(Alt_L(m)))}",
"STP*/KPH*/THRA*/TPH*": "{#Shift_L(Super_L(Alt_L(n)))}",
"STP*/KPH*/THRA*/O*": "{#Shift_L(Super_L(Alt_L(o)))}",
"STP*/KPH*/THRA*/P*": "{#Shift_L(Super_L(Alt_L(p)))}",
"STP*/KPH*/THRA*/KW*": "{#Shift_L(Super_L(Alt_L(q)))}",
"STP*/KPH*/THRA*/R*": "{#Shift_L(Super_L(Alt_L(r)))}",
"STP*/KPH*/THRA*/S*": "{#Shift_L(Super_L(Alt_L(s)))}",
"STP*/KPH*/THRA*/T*": "{#Shift_L(Super_L(Alt_L(t)))}",
"STP*/KPH*/THRA*/*U": "{#Shift_L(Super_L(Alt_L(u)))}",
"STP*/KPH*/THRA*/SR*": "{#Shift_L(Super_L(Alt_L(v)))}",
"STP*/KPH*/THRA*/W*": "{#Shift_L(Super_L(Alt_L(w)))}",
"STP*/KPH*/THRA*/KP*": "{#Shift_L(Super_L(Alt_L(x)))}",
"STP*/KPH*/THRA*/KWR*": "{#Shift_L(Super_L(Alt_L(y)))}",
"STP*/KPH*/THRA*/STKPW*": "{#Shift_L(Super_L(Alt_L(z)))}",
"STP*/KPH*/THRA*/0": "{#Shift_L(Super_L(Alt_L(0)))}",
"STP*/KPH*/THRA*/1": "{#Shift_L(Super_L(Alt_L(1)))}",
"STP*/KPH*/THRA*/2": "{#Shift_L(Super_L(Alt_L(2)))}",
"STP*/KPH*/THRA*/3": "{#Shift_L(Super_L(Alt_L(3)))}",
"STP*/KPH*/THRA*/4": "{#Shift_L(Super_L(Alt_L(4)))}",
"STP*/KPH*/THRA*/5": "{#Shift_L(Super_L(Alt_L(5)))}",
"STP*/KPH*/THRA*/6": "{#Shift_L(Super_L(Alt_L(6)))}",
"STP*/KPH*/THRA*/7": "{#Shift_L(Super_L(Alt_L(7)))}",
"STP*/KPH*/THRA*/8": "{#Shift_L(Super_L(Alt_L(8)))}",
"STP*/KPH*/THRA*/9": "{#Shift_L(Super_L(Alt_L(9)))}",
"STP*/KPH*/THRA*/KH-FG": "{#Shift_L(Super_L(Alt_L(grave)))}",
"STP*/KPH*/THRA*/KW-BG": "{#Shift_L(Super_L(Alt_L(comma)))}",
"STP*/KPH*/THRA*/PR*EPB": "{#Shift_L(Super_L(Alt_L(parenright)))}",
"STP*/KPH*/THRA*/PREPB": "{#Shift_L(Super_L(Alt_L(parenleft)))}",
"STP*/KPH*/THRA*/PW*FP": "{#Shift_L(Super_L(Alt_L(BackSpace)))}",
"STP*/KPH*/THRA*/PWR*BGT": "{#Shift_L(Super_L(Alt_L(bracketright)))}",
"STP*/KPH*/THRA*/PWR-BGT": "{#Shift_L(Super_L(Alt_L(bracketleft)))}",
"STP*/KPH*/THRA*/R-R": "{#Shift_L(Super_L(Alt_L(Return)))}",
"STP*/KPH*/THRA*/S-P": "{#Shift_L(Super_L(Alt_L(space)))}",
"STP*/KPH*/THRA*/SP*S": "{#Shift_L(Super_L(Alt_L()))}",
"STP*/KPH*/THRA*/SPWHRAERB": "{#Shift_L(Super_L(Alt_L(backslash)))}",
"STP*/KPH*/THRA*/STPH-G": "{#Shift_L(Super_L(Alt_L(Right)))}",
"STP*/KPH*/THRA*/STPH-B": "{#Shift_L(Super_L(Alt_L(Down)))}",
"STP*/KPH*/THRA*/STPH-P": "{#Shift_L(Super_L(Alt_L(Up)))}",
"STP*/KPH*/THRA*/STPH-R": "{#Shift_L(Super_L(Alt_L(Left)))}",
"STP*/KPH*/THRA*/TA*B": "{#Shift_L(Super_L(Alt_L(Tab)))}",
"STP*/KPH*/THRA*/TKHRAO*ET": "{#Shift_L(Super_L(Alt_L(Delete)))}",
"STP*/KPH*/KHR*/THRA*/A*": "{#Shift_L(Super_L(Control_L(Alt_L(a))))}",
"STP*/KPH*/KHR*/THRA*/PW*": "{#Shift_L(Super_L(Control_L(Alt_L(b))))}",
"STP*/KPH*/KHR*/THRA*/KR*": "{#Shift_L(Super_L(Control_L(Alt_L(c))))}",
"STP*/KPH*/KHR*/THRA*/TK*": "{#Shift_L(Super_L(Control_L(Alt_L(d))))}",
"STP*/KPH*/KHR*/THRA*/*E": "{#Shift_L(Super_L(Control_L(Alt_L(e))))}",
"STP*/KPH*/KHR*/THRA*/TP*": "{#Shift_L(Super_L(Control_L(Alt_L(f))))}",
"STP*/KPH*/KHR*/THRA*/TKPW*": "{#Shift_L(Super_L(Control_L(Alt_L(g))))}",
"STP*/KPH*/KHR*/THRA*/H*": "{#Shift_L(Super_L(Control_L(Alt_L(h))))}",
"STP*/KPH*/KHR*/THRA*/*EU": "{#Shift_L(Super_L(Control_L(Alt_L(i))))}",
"STP*/KPH*/KHR*/THRA*/SKWR*": "{#Shift_L(Super_L(Control_L(Alt_L(j))))}",
"STP*/KPH*/KHR*/THRA*/K*": "{#Shift_L(Super_L(Control_L(Alt_L(k))))}",
"STP*/KPH*/KHR*/THRA*/HR*": "{#Shift_L(Super_L(Control_L(Alt_L(l))))}",
"STP*/KPH*/KHR*/THRA*/PH*": "{#Shift_L(Super_L(Control_L(Alt_L(m))))}",
"STP*/KPH*/KHR*/THRA*/TPH*": "{#Shift_L(Super_L(Control_L(Alt_L(n))))}",
"STP*/KPH*/KHR*/THRA*/O*": "{#Shift_L(Super_L(Control_L(Alt_L(o))))}",
"STP*/KPH*/KHR*/THRA*/P*": "{#Shift_L(Super_L(Control_L(Alt_L(p))))}",
"STP*/KPH*/KHR*/THRA*/KW*": "{#Shift_L(Super_L(Control_L(Alt_L(q))))}",
"STP*/KPH*/KHR*/THRA*/R*": "{#Shift_L(Super_L(Control_L(Alt_L(r))))}",
"STP*/KPH*/KHR*/THRA*/S*": "{#Shift_L(Super_L(Control_L(Alt_L(s))))}",
"STP*/KPH*/KHR*/THRA*/T*": "{#Shift_L(Super_L(Control_L(Alt_L(t))))}",
"STP*/KPH*/KHR*/THRA*/*U": "{#Shift_L(Super_L(Control_L(Alt_L(u))))}",
"STP*/KPH*/KHR*/THRA*/SR*": "{#Shift_L(Super_L(Control_L(Alt_L(v))))}",
"STP*/KPH*/KHR*/THRA*/W*": "{#Shift_L(Super_L(Control_L(Alt_L(w))))}",
"STP*/KPH*/KHR*/THRA*/KP*": "{#Shift_L(Super_L(Control_L(Alt_L(x))))}",
"STP*/KPH*/KHR*/THRA*/KWR*": "{#Shift_L(Super_L(Control_L(Alt_L(y))))}",
"STP*/KPH*/KHR*/THRA*/STKPW*": "{#Shift_L(Super_L(Control_L(Alt_L(z))))}",
"STP*/KPH*/KHR*/THRA*/0": "{#Shift_L(Super_L(Control_L(Alt_L(0))))}",
"STP*/KPH*/KHR*/THRA*/1": "{#Shift_L(Super_L(Control_L(Alt_L(1))))}",
"STP*/KPH*/KHR*/THRA*/2": "{#Shift_L(Super_L(Control_L(Alt_L(2))))}",
"STP*/KPH*/KHR*/THRA*/3": "{#Shift_L(Super_L(Control_L(Alt_L(3))))}",
"STP*/KPH*/KHR*/THRA*/4": "{#Shift_L(Super_L(Control_L(Alt_L(4))))}",
"STP*/KPH*/KHR*/THRA*/5": "{#Shift_L(Super_L(Control_L(Alt_L(5))))}",
"STP*/KPH*/KHR*/THRA*/6": "{#Shift_L(Super_L(Control_L(Alt_L(6))))}",
"STP*/KPH*/KHR*/THRA*/7": "{#Shift_L(Super_L(Control_L(Alt_L(7))))}",
"STP*/KPH*/KHR*/THRA*/8": "{#Shift_L(Super_L(Control_L(Alt_L(8))))}",
"STP*/KPH*/KHR*/THRA*/9": "{#Shift_L(Super_L(Control_L(Alt_L(9))))}",
"STP*/KPH*/KHR*/THRA*/KH-FG": "{#Shift_L(Super_L(Control_L(Alt_L(grave))))}",
"STP*/KPH*/KHR*/THRA*/KW-BG": "{#Shift_L(Super_L(Control_L(Alt_L(comma))))}",
"STP*/KPH*/KHR*/THRA*/PR*EPB": "{#Shift_L(Super_L(Control_L(Alt_L(parenright))))}",
"STP*/KPH*/KHR*/THRA*/PREPB": "{#Shift_L(Super_L(Control_L(Alt_L(parenleft))))}",
"STP*/KPH*/KHR*/THRA*/PW*FP": "{#Shift_L(Super_L(Control_L(Alt_L(BackSpace))))}",
"STP*/KPH*/KHR*/THRA*/PWR*BGT": "{#Shift_L(Super_L(Control_L(Alt_L(bracketright))))}",
"STP*/KPH*/KHR*/THRA*/PWR-BGT": "{#Shift_L(Super_L(Control_L(Alt_L(bracketleft))))}",
"STP*/KPH*/KHR*/THRA*/R-R": "{#Shift_L(Super_L(Control_L(Alt_L(Return))))}",
"STP*/KPH*/KHR*/THRA*/S-P": "{#Shift_L(Super_L(Control_L(Alt_L(space))))}",
"STP*/KPH*/KHR*/THRA*/SP*S": "{#Shift_L(Super_L(Control_L(Alt_L())))}",
"STP*/KPH*/KHR*/THRA*/SPWHRAERB": "{#Shift_L(Super_L(Control_L(Alt_L(backslash))))}",
"STP*/KPH*/KHR*/THRA*/STPH-G": "{#Shift_L(Super_L(Control_L(Alt_L(Right))))}",
"STP*/KPH*/KHR*/THRA*/STPH-B": "{#Shift_L(Super_L(Control_L(Alt_L(Down))))}",
"STP*/KPH*/KHR*/THRA*/STPH-P": "{#Shift_L(Super_L(Control_L(Alt_L(Up))))}",
"STP*/KPH*/KHR*/THRA*/STPH-R": "{#Shift_L(Super_L(Control_L(Alt_L(Left))))}",
"STP*/KPH*/KHR*/THRA*/TA*B": "{#Shift_L(Super_L(Control_L(Alt_L(Tab))))}",
"STP*/KPH*/KHR*/THRA*/TKHRAO*ET": "{#Shift_L(Super_L(Control_L(Alt_L(Delete))))}",
"STP*/KPH*/KHR*/A*": "{#Shift_L(Super_L(Control_L(a)))}",
"STP*/KPH*/KHR*/PW*": "{#Shift_L(Super_L(Control_L(b)))}",
"STP*/KPH*/KHR*/KR*": "{#Shift_L(Super_L(Control_L(c)))}",
"STP*/KPH*/KHR*/TK*": "{#Shift_L(Super_L(Control_L(d)))}",
"STP*/KPH*/KHR*/*E": "{#Shift_L(Super_L(Control_L(e)))}",
"STP*/KPH*/KHR*/TP*": "{#Shift_L(Super_L(Control_L(f)))}",
"STP*/KPH*/KHR*/TKPW*": "{#Shift_L(Super_L(Control_L(g)))}",
"STP*/KPH*/KHR*/H*": "{#Shift_L(Super_L(Control_L(h)))}",
"STP*/KPH*/KHR*/*EU": "{#Shift_L(Super_L(Control_L(i)))}",
"STP*/KPH*/KHR*/SKWR*": "{#Shift_L(Super_L(Control_L(j)))}",
"STP*/KPH*/KHR*/K*": "{#Shift_L(Super_L(Control_L(k)))}",
"STP*/KPH*/KHR*/HR*": "{#Shift_L(Super_L(Control_L(l)))}",
"STP*/KPH*/KHR*/PH*": "{#Shift_L(Super_L(Control_L(m)))}",
"STP*/KPH*/KHR*/TPH*": "{#Shift_L(Super_L(Control_L(n)))}",
"STP*/KPH*/KHR*/O*": "{#Shift_L(Super_L(Control_L(o)))}",
"STP*/KPH*/KHR*/P*": "{#Shift_L(Super_L(Control_L(p)))}",
"STP*/KPH*/KHR*/KW*": "{#Shift_L(Super_L(Control_L(q)))}",
"STP*/KPH*/KHR*/R*": "{#Shift_L(Super_L(Control_L(r)))}",
"STP*/KPH*/KHR*/S*": "{#Shift_L(Super_L(Control_L(s)))}",
"STP*/KPH*/KHR*/T*": "{#Shift_L(Super_L(Control_L(t)))}",
"STP*/KPH*/KHR*/*U": "{#Shift_L(Super_L(Control_L(u)))}",
"STP*/KPH*/KHR*/SR*": "{#Shift_L(Super_L(Control_L(v)))}",
"STP*/KPH*/KHR*/W*": "{#Shift_L(Super_L(Control_L(w)))}",
"STP*/KPH*/KHR*/KP*": "{#Shift_L(Super_L(Control_L(x)))}",
"STP*/KPH*/KHR*/KWR*": "{#Shift_L(Super_L(Control_L(y)))}",
"STP*/KPH*/KHR*/STKPW*": "{#Shift_L(Super_L(Control_L(z)))}",
"STP*/KPH*/KHR*/0": "{#Shift_L(Super_L(Control_L(0)))}",
"STP*/KPH*/KHR*/1": "{#Shift_L(Super_L(Control_L(1)))}",
"STP*/KPH*/KHR*/2": "{#Shift_L(Super_L(Control_L(2)))}",
"STP*/KPH*/KHR*/3": "{#Shift_L(Super_L(Control_L(3)))}",
"STP*/KPH*/KHR*/4": "{#Shift_L(Super_L(Control_L(4)))}",
"STP*/KPH*/KHR*/5": "{#Shift_L(Super_L(Control_L(5)))}",
"STP*/KPH*/KHR*/6": "{#Shift_L(Super_L(Control_L(6)))}",
"STP*/KPH*/KHR*/7": "{#Shift_L(Super_L(Control_L(7)))}",
"STP*/KPH*/KHR*/8": "{#Shift_L(Super_L(Control_L(8)))}",
"STP*/KPH*/KHR*/9": "{#Shift_L(Super_L(Control_L(9)))}",
"STP*/KPH*/KHR*/KH-FG": "{#Shift_L(Super_L(Control_L(grave)))}",
"STP*/KPH*/KHR*/KW-BG": "{#Shift_L(Super_L(Control_L(comma)))}",
"STP*/KPH*/KHR*/PR*EPB": "{#Shift_L(Super_L(Control_L(parenright)))}",
"STP*/KPH*/KHR*/PREPB": "{#Shift_L(Super_L(Control_L(parenleft)))}",
"STP*/KPH*/KHR*/PW*FP": "{#Shift_L(Super_L(Control_L(BackSpace)))}",
"STP*/KPH*/KHR*/PWR*BGT": "{#Shift_L(Super_L(Control_L(bracketright)))}",
"STP*/KPH*/KHR*/PWR-BGT": "{#Shift_L(Super_L(Control_L(bracketleft)))}",
"STP*/KPH*/KHR*/R-R": "{#Shift_L(Super_L(Control_L(Return)))}",
"STP*/KPH*/KHR*/S-P": "{#Shift_L(Super_L(Control_L(space)))}",
"STP*/KPH*/KHR*/SP*S": "{#Shift_L(Super_L(Control_L()))}",
"STP*/KPH*/KHR*/SPWHRAERB": "{#Shift_L(Super_L(Control_L(backslash)))}",
"STP*/KPH*/KHR*/STPH-G": "{#Shift_L(Super_L(Control_L(Right)))}",
"STP*/KPH*/KHR*/STPH-B": "{#Shift_L(Super_L(Control_L(Down)))}",
"STP*/KPH*/KHR*/STPH-P": "{#Shift_L(Super_L(Control_L(Up)))}",
"STP*/KPH*/KHR*/STPH-R": "{#Shift_L(Super_L(Control_L(Left)))}",
"STP*/KPH*/KHR*/TA*B": "{#Shift_L(Super_L(Control_L(Tab)))}",
"STP*/KPH*/KHR*/TKHRAO*ET": "{#Shift_L(Super_L(Control_L(Delete)))}",
"STP*/KPH*/THRA*/KHR*/A*": "{#Shift_L(Super_L(Alt_L(Control_L(a))))}",
"STP*/KPH*/THRA*/KHR*/PW*": "{#Shift_L(Super_L(Alt_L(Control_L(b))))}",
"STP*/KPH*/THRA*/KHR*/KR*": "{#Shift_L(Super_L(Alt_L(Control_L(c))))}",
"STP*/KPH*/THRA*/KHR*/TK*": "{#Shift_L(Super_L(Alt_L(Control_L(d))))}",
"STP*/KPH*/THRA*/KHR*/*E": "{#Shift_L(Super_L(Alt_L(Control_L(e))))}",
"STP*/KPH*/THRA*/KHR*/TP*": "{#Shift_L(Super_L(Alt_L(Control_L(f))))}",
"STP*/KPH*/THRA*/KHR*/TKPW*": "{#Shift_L(Super_L(Alt_L(Control_L(g))))}",
"STP*/KPH*/THRA*/KHR*/H*": "{#Shift_L(Super_L(Alt_L(Control_L(h))))}",
"STP*/KPH*/THRA*/KHR*/*EU": "{#Shift_L(Super_L(Alt_L(Control_L(i))))}",
"STP*/KPH*/THRA*/KHR*/SKWR*": "{#Shift_L(Super_L(Alt_L(Control_L(j))))}",
"STP*/KPH*/THRA*/KHR*/K*": "{#Shift_L(Super_L(Alt_L(Control_L(k))))}",
"STP*/KPH*/THRA*/KHR*/HR*": "{#Shift_L(Super_L(Alt_L(Control_L(l))))}",
"STP*/KPH*/THRA*/KHR*/PH*": "{#Shift_L(Super_L(Alt_L(Control_L(m))))}",
"STP*/KPH*/THRA*/KHR*/TPH*": "{#Shift_L(Super_L(Alt_L(Control_L(n))))}",
"STP*/KPH*/THRA*/KHR*/O*": "{#Shift_L(Super_L(Alt_L(Control_L(o))))}",
"STP*/KPH*/THRA*/KHR*/P*": "{#Shift_L(Super_L(Alt_L(Control_L(p))))}",
"STP*/KPH*/THRA*/KHR*/KW*": "{#Shift_L(Super_L(Alt_L(Control_L(q))))}",
"STP*/KPH*/THRA*/KHR*/R*": "{#Shift_L(Super_L(Alt_L(Control_L(r))))}",
"STP*/KPH*/THRA*/KHR*/S*": "{#Shift_L(Super_L(Alt_L(Control_L(s))))}",
"STP*/KPH*/THRA*/KHR*/T*": "{#Shift_L(Super_L(Alt_L(Control_L(t))))}",
"STP*/KPH*/THRA*/KHR*/*U": "{#Shift_L(Super_L(Alt_L(Control_L(u))))}",
"STP*/KPH*/THRA*/KHR*/SR*": "{#Shift_L(Super_L(Alt_L(Control_L(v))))}",
"STP*/KPH*/THRA*/KHR*/W*": "{#Shift_L(Super_L(Alt_L(Control_L(w))))}",
"STP*/KPH*/THRA*/KHR*/KP*": "{#Shift_L(Super_L(Alt_L(Control_L(x))))}",
"STP*/KPH*/THRA*/KHR*/KWR*": "{#Shift_L(Super_L(Alt_L(Control_L(y))))}",
"STP*/KPH*/THRA*/KHR*/STKPW*": "{#Shift_L(Super_L(Alt_L(Control_L(z))))}",
"STP*/KPH*/THRA*/KHR*/0": "{#Shift_L(Super_L(Alt_L(Control_L(0))))}",
"STP*/KPH*/THRA*/KHR*/1": "{#Shift_L(Super_L(Alt_L(Control_L(1))))}",
"STP*/KPH*/THRA*/KHR*/2": "{#Shift_L(Super_L(Alt_L(Control_L(2))))}",
"STP*/KPH*/THRA*/KHR*/3": "{#Shift_L(Super_L(Alt_L(Control_L(3))))}",
"STP*/KPH*/THRA*/KHR*/4": "{#Shift_L(Super_L(Alt_L(Control_L(4))))}",
"STP*/KPH*/THRA*/KHR*/5": "{#Shift_L(Super_L(Alt_L(Control_L(5))))}",
"STP*/KPH*/THRA*/KHR*/6": "{#Shift_L(Super_L(Alt_L(Control_L(6))))}",
"STP*/KPH*/THRA*/KHR*/7": "{#Shift_L(Super_L(Alt_L(Control_L(7))))}",
"STP*/KPH*/THRA*/KHR*/8": "{#Shift_L(Super_L(Alt_L(Control_L(8))))}",
"STP*/KPH*/THRA*/KHR*/9": "{#Shift_L(Super_L(Alt_L(Control_L(9))))}",
"STP*/KPH*/THRA*/KHR*/KH-FG": "{#Shift_L(Super_L(Alt_L(Control_L(grave))))}",
"STP*/KPH*/THRA*/KHR*/KW-BG": "{#Shift_L(Super_L(Alt_L(Control_L(comma))))}",
"STP*/KPH*/THRA*/KHR*/PR*EPB": "{#Shift_L(Super_L(Alt_L(Control_L(parenright))))}",
"STP*/KPH*/THRA*/KHR*/PREPB": "{#Shift_L(Super_L(Alt_L(Control_L(parenleft))))}",
"STP*/KPH*/THRA*/KHR*/PW*FP": "{#Shift_L(Super_L(Alt_L(Control_L(BackSpace))))}",
"STP*/KPH*/THRA*/KHR*/PWR*BGT": "{#Shift_L(Super_L(Alt_L(Control_L(bracketright))))}",
"STP*/KPH*/THRA*/KHR*/PWR-BGT": "{#Shift_L(Super_L(Alt_L(Control_L(bracketleft))))}",
"STP*/KPH*/THRA*/KHR*/R-R": "{#Shift_L(Super_L(Alt_L(Control_L(Return))))}",
"STP*/KPH*/THRA*/KHR*/S-P": "{#Shift_L(Super_L(Alt_L(Control_L(space))))}",
"STP*/KPH*/THRA*/KHR*/SP*S": "{#Shift_L(Super_L(Alt_L(Control_L())))}",
"STP*/KPH*/THRA*/KHR*/SPWHRAERB": "{#Shift_L(Super_L(Alt_L(Control_L(backslash))))}",
"STP*/KPH*/THRA*/KHR*/STPH-G": "{#Shift_L(Super_L(Alt_L(Control_L(Right))))}",
"STP*/KPH*/THRA*/KHR*/STPH-B": "{#Shift_L(Super_L(Alt_L(Control_L(Down))))}",
"STP*/KPH*/THRA*/KHR*/STPH-P": "{#Shift_L(Super_L(Alt_L(Control_L(Up))))}",
"STP*/KPH*/THRA*/KHR*/STPH-R": "{#Shift_L(Super_L(Alt_L(Control_L(Left))))}",
"STP*/KPH*/THRA*/KHR*/TA*B": "{#Shift_L(Super_L(Alt_L(Control_L(Tab))))}",
"STP*/KPH*/THRA*/KHR*/TKHRAO*ET": "{#Shift_L(Super_L(Alt_L(Control_L(Delete))))}",
"STP*/KPH*/A*": "{#Shift_L(Super_L(a))}",
"STP*/KPH*/PW*": "{#Shift_L(Super_L(b))}",
"STP*/KPH*/KR*": "{#Shift_L(Super_L(c))}",
"STP*/KPH*/TK*": "{#Shift_L(Super_L(d))}",
"STP*/KPH*/*E": "{#Shift_L(Super_L(e))}",
"STP*/KPH*/TP*": "{#Shift_L(Super_L(f))}",
"STP*/KPH*/TKPW*": "{#Shift_L(Super_L(g))}",
"STP*/KPH*/H*": "{#Shift_L(Super_L(h))}",
"STP*/KPH*/*EU": "{#Shift_L(Super_L(i))}",
"STP*/KPH*/SKWR*": "{#Shift_L(Super_L(j))}",
"STP*/KPH*/K*": "{#Shift_L(Super_L(k))}",
"STP*/KPH*/HR*": "{#Shift_L(Super_L(l))}",
"STP*/KPH*/PH*": "{#Shift_L(Super_L(m))}",
"STP*/KPH*/TPH*": "{#Shift_L(Super_L(n))}",
"STP*/KPH*/O*": "{#Shift_L(Super_L(o))}",
"STP*/KPH*/P*": "{#Shift_L(Super_L(p))}",
"STP*/KPH*/KW*": "{#Shift_L(Super_L(q))}",
"STP*/KPH*/R*": "{#Shift_L(Super_L(r))}",
"STP*/KPH*/S*": "{#Shift_L(Super_L(s))}",
"STP*/KPH*/T*": "{#Shift_L(Super_L(t))}",
"STP*/KPH*/*U": "{#Shift_L(Super_L(u))}",
"STP*/KPH*/SR*": "{#Shift_L(Super_L(v))}",
"STP*/KPH*/W*": "{#Shift_L(Super_L(w))}",
"STP*/KPH*/KP*": "{#Shift_L(Super_L(x))}",
"STP*/KPH*/KWR*": "{#Shift_L(Super_L(y))}",
"STP*/KPH*/STKPW*": "{#Shift_L(Super_L(z))}",
"STP*/KPH*/0": "{#Shift_L(Super_L(0))}",
"STP*/KPH*/1": "{#Shift_L(Super_L(1))}",
"STP*/KPH*/2": "{#Shift_L(Super_L(2))}",
"STP*/KPH*/3": "{#Shift_L(Super_L(3))}",
"STP*/KPH*/4": "{#Shift_L(Super_L(4))}",
"STP*/KPH*/5": "{#Shift_L(Super_L(5))}",
"STP*/KPH*/6": "{#Shift_L(Super_L(6))}",
"STP*/KPH*/7": "{#Shift_L(Super_L(7))}",
"STP*/KPH*/8": "{#Shift_L(Super_L(8))}",
"STP*/KPH*/9": "{#Shift_L(Super_L(9))}",
"STP*/KPH*/KH-FG": "{#Shift_L(Super_L(grave))}",
"STP*/KPH*/KW-BG": "{#Shift_L(Super_L(comma))}",
"STP*/KPH*/PR*EPB": "{#Shift_L(Super_L(parenright))}",
"STP*/KPH*/PREPB": "{#Shift_L(Super_L(parenleft))}",
"STP*/KPH*/PW*FP": "{#Shift_L(Super_L(BackSpace))}",
"STP*/KPH*/PWR*BGT": "{#Shift_L(Super_L(bracketright))}",
"STP*/KPH*/PWR-BGT": "{#Shift_L(Super_L(bracketleft))}",
"STP*/KPH*/R-R": "{#Shift_L(Super_L(Return))}",
"STP*/KPH*/S-P": "{#Shift_L(Super_L(space))}",
"STP*/KPH*/SP*S": "{#Shift_L(Super_L())}",
"STP*/KPH*/SPWHRAERB": "{#Shift_L(Super_L(backslash))}",
"STP*/KPH*/STPH-G": "{#Shift_L(Super_L(Right))}",
"STP*/KPH*/STPH-B": "{#Shift_L(Super_L(Down))}",
"STP*/KPH*/STPH-P": "{#Shift_L(Super_L(Up))}",
"STP*/KPH*/STPH-R": "{#Shift_L(Super_L(Left))}",
"STP*/KPH*/TA*B": "{#Shift_L(Super_L(Tab))}",
"STP*/KPH*/TKHRAO*ET": "{#Shift_L(Super_L(Delete))}",
"STP*/KHR*/KPH*/A*": "{#Shift_L(Control_L(Super_L(a)))}",
"STP*/KHR*/KPH*/PW*": "{#Shift_L(Control_L(Super_L(b)))}",
"STP*/KHR*/KPH*/KR*": "{#Shift_L(Control_L(Super_L(c)))}",
"STP*/KHR*/KPH*/TK*": "{#Shift_L(Control_L(Super_L(d)))}",
"STP*/KHR*/KPH*/*E": "{#Shift_L(Control_L(Super_L(e)))}",
"STP*/KHR*/KPH*/TP*": "{#Shift_L(Control_L(Super_L(f)))}",
"STP*/KHR*/KPH*/TKPW*": "{#Shift_L(Control_L(Super_L(g)))}",
"STP*/KHR*/KPH*/H*": "{#Shift_L(Control_L(Super_L(h)))}",
"STP*/KHR*/KPH*/*EU": "{#Shift_L(Control_L(Super_L(i)))}",
"STP*/KHR*/KPH*/SKWR*": "{#Shift_L(Control_L(Super_L(j)))}",
"STP*/KHR*/KPH*/K*": "{#Shift_L(Control_L(Super_L(k)))}",
"STP*/KHR*/KPH*/HR*": "{#Shift_L(Control_L(Super_L(l)))}",
"STP*/KHR*/KPH*/PH*": "{#Shift_L(Control_L(Super_L(m)))}",
"STP*/KHR*/KPH*/TPH*": "{#Shift_L(Control_L(Super_L(n)))}",
"STP*/KHR*/KPH*/O*": "{#Shift_L(Control_L(Super_L(o)))}",
"STP*/KHR*/KPH*/P*": "{#Shift_L(Control_L(Super_L(p)))}",
"STP*/KHR*/KPH*/KW*": "{#Shift_L(Control_L(Super_L(q)))}",
"STP*/KHR*/KPH*/R*": "{#Shift_L(Control_L(Super_L(r)))}",
"STP*/KHR*/KPH*/S*": "{#Shift_L(Control_L(Super_L(s)))}",
"STP*/KHR*/KPH*/T*": "{#Shift_L(Control_L(Super_L(t)))}",
"STP*/KHR*/KPH*/*U": "{#Shift_L(Control_L(Super_L(u)))}",
"STP*/KHR*/KPH*/SR*": "{#Shift_L(Control_L(Super_L(v)))}",
"STP*/KHR*/KPH*/W*": "{#Shift_L(Control_L(Super_L(w)))}",
"STP*/KHR*/KPH*/KP*": "{#Shift_L(Control_L(Super_L(x)))}",
"STP*/KHR*/KPH*/KWR*": "{#Shift_L(Control_L(Super_L(y)))}",
"STP*/KHR*/KPH*/STKPW*": "{#Shift_L(Control_L(Super_L(z)))}",
"STP*/KHR*/KPH*/0": "{#Shift_L(Control_L(Super_L(0)))}",
"STP*/KHR*/KPH*/1": "{#Shift_L(Control_L(Super_L(1)))}",
"STP*/KHR*/KPH*/2": "{#Shift_L(Control_L(Super_L(2)))}",
"STP*/KHR*/KPH*/3": "{#Shift_L(Control_L(Super_L(3)))}",
"STP*/KHR*/KPH*/4": "{#Shift_L(Control_L(Super_L(4)))}",
"STP*/KHR*/KPH*/5": "{#Shift_L(Control_L(Super_L(5)))}",
"STP*/KHR*/KPH*/6": "{#Shift_L(Control_L(Super_L(6)))}",
"STP*/KHR*/KPH*/7": "{#Shift_L(Control_L(Super_L(7)))}",
"STP*/KHR*/KPH*/8": "{#Shift_L(Control_L(Super_L(8)))}",
"STP*/KHR*/KPH*/9": "{#Shift_L(Control_L(Super_L(9)))}",
"STP*/KHR*/KPH*/KH-FG": "{#Shift_L(Control_L(Super_L(grave)))}",
"STP*/KHR*/KPH*/KW-BG": "{#Shift_L(Control_L(Super_L(comma)))}",
"STP*/KHR*/KPH*/PR*EPB": "{#Shift_L(Control_L(Super_L(parenright)))}",
"STP*/KHR*/KPH*/PREPB": "{#Shift_L(Control_L(Super_L(parenleft)))}",
"STP*/KHR*/KPH*/PW*FP": "{#Shift_L(Control_L(Super_L(BackSpace)))}",
"STP*/KHR*/KPH*/PWR*BGT": "{#Shift_L(Control_L(Super_L(bracketright)))}",
"STP*/KHR*/KPH*/PWR-BGT": "{#Shift_L(Control_L(Super_L(bracketleft)))}",
"STP*/KHR*/KPH*/R-R": "{#Shift_L(Control_L(Super_L(Return)))}",
"STP*/KHR*/KPH*/S-P": "{#Shift_L(Control_L(Super_L(space)))}",
"STP*/KHR*/KPH*/SP*S": "{#Shift_L(Control_L(Super_L()))}",
"STP*/KHR*/KPH*/SPWHRAERB": "{#Shift_L(Control_L(Super_L(backslash)))}",
"STP*/KHR*/KPH*/STPH-G": "{#Shift_L(Control_L(Super_L(Right)))}",
"STP*/KHR*/KPH*/STPH-B": "{#Shift_L(Control_L(Super_L(Down)))}",
"STP*/KHR*/KPH*/STPH-P": "{#Shift_L(Control_L(Super_L(Up)))}",
"STP*/KHR*/KPH*/STPH-R": "{#Shift_L(Control_L(Super_L(Left)))}",
"STP*/KHR*/KPH*/TA*B": "{#Shift_L(Control_L(Super_L(Tab)))}",
"STP*/KHR*/KPH*/TKHRAO*ET": "{#Shift_L(Control_L(Super_L(Delete)))}",
"STP*/KHR*/A*": "{#Shift_L(Control_L(a))}",
"STP*/KHR*/PW*": "{#Shift_L(Control_L(b))}",
"STP*/KHR*/KR*": "{#Shift_L(Control_L(c))}",
"STP*/KHR*/TK*": "{#Shift_L(Control_L(d))}",
"STP*/KHR*/*E": "{#Shift_L(Control_L(e))}",
"STP*/KHR*/TP*": "{#Shift_L(Control_L(f))}",
"STP*/KHR*/TKPW*": "{#Shift_L(Control_L(g))}",
"STP*/KHR*/H*": "{#Shift_L(Control_L(h))}",
"STP*/KHR*/*EU": "{#Shift_L(Control_L(i))}",
"STP*/KHR*/SKWR*": "{#Shift_L(Control_L(j))}",
"STP*/KHR*/K*": "{#Shift_L(Control_L(k))}",
"STP*/KHR*/HR*": "{#Shift_L(Control_L(l))}",
"STP*/KHR*/PH*": "{#Shift_L(Control_L(m))}",
"STP*/KHR*/TPH*": "{#Shift_L(Control_L(n))}",
"STP*/KHR*/O*": "{#Shift_L(Control_L(o))}",
"STP*/KHR*/P*": "{#Shift_L(Control_L(p))}",
"STP*/KHR*/KW*": "{#Shift_L(Control_L(q))}",
"STP*/KHR*/R*": "{#Shift_L(Control_L(r))}",
"STP*/KHR*/S*": "{#Shift_L(Control_L(s))}",
"STP*/KHR*/T*": "{#Shift_L(Control_L(t))}",
"STP*/KHR*/*U": "{#Shift_L(Control_L(u))}",
"STP*/KHR*/SR*": "{#Shift_L(Control_L(v))}",
"STP*/KHR*/W*": "{#Shift_L(Control_L(w))}",
"STP*/KHR*/KP*": "{#Shift_L(Control_L(x))}",
"STP*/KHR*/KWR*": "{#Shift_L(Control_L(y))}",
"STP*/KHR*/STKPW*": "{#Shift_L(Control_L(z))}",
"STP*/KHR*/0": "{#Shift_L(Control_L(0))}",
"STP*/KHR*/1": "{#Shift_L(Control_L(1))}",
"STP*/KHR*/2": "{#Shift_L(Control_L(2))}",
"STP*/KHR*/3": "{#Shift_L(Control_L(3))}",
"STP*/KHR*/4": "{#Shift_L(Control_L(4))}",
"STP*/KHR*/5": "{#Shift_L(Control_L(5))}",
"STP*/KHR*/6": "{#Shift_L(Control_L(6))}",
"STP*/KHR*/7": "{#Shift_L(Control_L(7))}",
"STP*/KHR*/8": "{#Shift_L(Control_L(8))}",
"STP*/KHR*/9": "{#Shift_L(Control_L(9))}",
"STP*/KHR*/KH-FG": "{#Shift_L(Control_L(grave))}",
"STP*/KHR*/KW-BG": "{#Shift_L(Control_L(comma))}",
"STP*/KHR*/PR*EPB": "{#Shift_L(Control_L(parenright))}",
"STP*/KHR*/PREPB": "{#Shift_L(Control_L(parenleft))}",
"STP*/KHR*/PW*FP": "{#Shift_L(Control_L(BackSpace))}",
"STP*/KHR*/PWR*BGT": "{#Shift_L(Control_L(bracketright))}",
"STP*/KHR*/PWR-BGT": "{#Shift_L(Control_L(bracketleft))}",
"STP*/KHR*/R-R": "{#Shift_L(Control_L(Return))}",
"STP*/KHR*/S-P": "{#Shift_L(Control_L(space))}",
"STP*/KHR*/SP*S": "{#Shift_L(Control_L())}",
"STP*/KHR*/SPWHRAERB": "{#Shift_L(Control_L(backslash))}",
"STP*/KHR*/STPH-G": "{#Shift_L(Control_L(Right))}",
"STP*/KHR*/STPH-B": "{#Shift_L(Control_L(Down))}",
"STP*/KHR*/STPH-P": "{#Shift_L(Control_L(Up))}",
"STP*/KHR*/STPH-R": "{#Shift_L(Control_L(Left))}",
"STP*/KHR*/TA*B": "{#Shift_L(Control_L(Tab))}",
"STP*/KHR*/TKHRAO*ET": "{#Shift_L(Control_L(Delete))}",
"STP*/KPH*/KHR*/A*": "{#Shift_L(Super_L(Control_L(a)))}",
"STP*/KPH*/KHR*/PW*": "{#Shift_L(Super_L(Control_L(b)))}",
"STP*/KPH*/KHR*/KR*": "{#Shift_L(Super_L(Control_L(c)))}",
"STP*/KPH*/KHR*/TK*": "{#Shift_L(Super_L(Control_L(d)))}",
"STP*/KPH*/KHR*/*E": "{#Shift_L(Super_L(Control_L(e)))}",
"STP*/KPH*/KHR*/TP*": "{#Shift_L(Super_L(Control_L(f)))}",
"STP*/KPH*/KHR*/TKPW*": "{#Shift_L(Super_L(Control_L(g)))}",
"STP*/KPH*/KHR*/H*": "{#Shift_L(Super_L(Control_L(h)))}",
"STP*/KPH*/KHR*/*EU": "{#Shift_L(Super_L(Control_L(i)))}",
"STP*/KPH*/KHR*/SKWR*": "{#Shift_L(Super_L(Control_L(j)))}",
"STP*/KPH*/KHR*/K*": "{#Shift_L(Super_L(Control_L(k)))}",
"STP*/KPH*/KHR*/HR*": "{#Shift_L(Super_L(Control_L(l)))}",
"STP*/KPH*/KHR*/PH*": "{#Shift_L(Super_L(Control_L(m)))}",
"STP*/KPH*/KHR*/TPH*": "{#Shift_L(Super_L(Control_L(n)))}",
"STP*/KPH*/KHR*/O*": "{#Shift_L(Super_L(Control_L(o)))}",
"STP*/KPH*/KHR*/P*": "{#Shift_L(Super_L(Control_L(p)))}",
"STP*/KPH*/KHR*/KW*": "{#Shift_L(Super_L(Control_L(q)))}",
"STP*/KPH*/KHR*/R*": "{#Shift_L(Super_L(Control_L(r)))}",
"STP*/KPH*/KHR*/S*": "{#Shift_L(Super_L(Control_L(s)))}",
"STP*/KPH*/KHR*/T*": "{#Shift_L(Super_L(Control_L(t)))}",
"STP*/KPH*/KHR*/*U": "{#Shift_L(Super_L(Control_L(u)))}",
"STP*/KPH*/KHR*/SR*": "{#Shift_L(Super_L(Control_L(v)))}",
"STP*/KPH*/KHR*/W*": "{#Shift_L(Super_L(Control_L(w)))}",
"STP*/KPH*/KHR*/KP*": "{#Shift_L(Super_L(Control_L(x)))}",
"STP*/KPH*/KHR*/KWR*": "{#Shift_L(Super_L(Control_L(y)))}",
"STP*/KPH*/KHR*/STKPW*": "{#Shift_L(Super_L(Control_L(z)))}",
"STP*/KPH*/KHR*/0": "{#Shift_L(Super_L(Control_L(0)))}",
"STP*/KPH*/KHR*/1": "{#Shift_L(Super_L(Control_L(1)))}",
"STP*/KPH*/KHR*/2": "{#Shift_L(Super_L(Control_L(2)))}",
"STP*/KPH*/KHR*/3": "{#Shift_L(Super_L(Control_L(3)))}",
"STP*/KPH*/KHR*/4": "{#Shift_L(Super_L(Control_L(4)))}",
"STP*/KPH*/KHR*/5": "{#Shift_L(Super_L(Control_L(5)))}",
"STP*/KPH*/KHR*/6": "{#Shift_L(Super_L(Control_L(6)))}",
"STP*/KPH*/KHR*/7": "{#Shift_L(Super_L(Control_L(7)))}",
"STP*/KPH*/KHR*/8": "{#Shift_L(Super_L(Control_L(8)))}",
"STP*/KPH*/KHR*/9": "{#Shift_L(Super_L(Control_L(9)))}",
"STP*/KPH*/KHR*/KH-FG": "{#Shift_L(Super_L(Control_L(grave)))}",
"STP*/KPH*/KHR*/KW-BG": "{#Shift_L(Super_L(Control_L(comma)))}",
"STP*/KPH*/KHR*/PR*EPB": "{#Shift_L(Super_L(Control_L(parenright)))}",
"STP*/KPH*/KHR*/PREPB": "{#Shift_L(Super_L(Control_L(parenleft)))}",
"STP*/KPH*/KHR*/PW*FP": "{#Shift_L(Super_L(Control_L(BackSpace)))}",
"STP*/KPH*/KHR*/PWR*BGT": "{#Shift_L(Super_L(Control_L(bracketright)))}",
"STP*/KPH*/KHR*/PWR-BGT": "{#Shift_L(Super_L(Control_L(bracketleft)))}",
"STP*/KPH*/KHR*/R-R": "{#Shift_L(Super_L(Control_L(Return)))}",
"STP*/KPH*/KHR*/S-P": "{#Shift_L(Super_L(Control_L(space)))}",
"STP*/KPH*/KHR*/SP*S": "{#Shift_L(Super_L(Control_L()))}",
"STP*/KPH*/KHR*/SPWHRAERB": "{#Shift_L(Super_L(Control_L(backslash)))}",
"STP*/KPH*/KHR*/STPH-G": "{#Shift_L(Super_L(Control_L(Right)))}",
"STP*/KPH*/KHR*/STPH-B": "{#Shift_L(Super_L(Control_L(Down)))}",
"STP*/KPH*/KHR*/STPH-P": "{#Shift_L(Super_L(Control_L(Up)))}",
"STP*/KPH*/KHR*/STPH-R": "{#Shift_L(Super_L(Control_L(Left)))}",
"STP*/KPH*/KHR*/TA*B": "{#Shift_L(Super_L(Control_L(Tab)))}",
"STP*/KPH*/KHR*/TKHRAO*ET": "{#Shift_L(Super_L(Control_L(Delete)))}",
"STP*/THRA*/KPH*/A*": "{#Shift_L(Alt_L(Super_L(a)))}",
"STP*/THRA*/KPH*/PW*": "{#Shift_L(Alt_L(Super_L(b)))}",
"STP*/THRA*/KPH*/KR*": "{#Shift_L(Alt_L(Super_L(c)))}",
"STP*/THRA*/KPH*/TK*": "{#Shift_L(Alt_L(Super_L(d)))}",
"STP*/THRA*/KPH*/*E": "{#Shift_L(Alt_L(Super_L(e)))}",
"STP*/THRA*/KPH*/TP*": "{#Shift_L(Alt_L(Super_L(f)))}",
"STP*/THRA*/KPH*/TKPW*": "{#Shift_L(Alt_L(Super_L(g)))}",
"STP*/THRA*/KPH*/H*": "{#Shift_L(Alt_L(Super_L(h)))}",
"STP*/THRA*/KPH*/*EU": "{#Shift_L(Alt_L(Super_L(i)))}",
"STP*/THRA*/KPH*/SKWR*": "{#Shift_L(Alt_L(Super_L(j)))}",
"STP*/THRA*/KPH*/K*": "{#Shift_L(Alt_L(Super_L(k)))}",
"STP*/THRA*/KPH*/HR*": "{#Shift_L(Alt_L(Super_L(l)))}",
"STP*/THRA*/KPH*/PH*": "{#Shift_L(Alt_L(Super_L(m)))}",
"STP*/THRA*/KPH*/TPH*": "{#Shift_L(Alt_L(Super_L(n)))}",
"STP*/THRA*/KPH*/O*": "{#Shift_L(Alt_L(Super_L(o)))}",
"STP*/THRA*/KPH*/P*": "{#Shift_L(Alt_L(Super_L(p)))}",
"STP*/THRA*/KPH*/KW*": "{#Shift_L(Alt_L(Super_L(q)))}",
"STP*/THRA*/KPH*/R*": "{#Shift_L(Alt_L(Super_L(r)))}",
"STP*/THRA*/KPH*/S*": "{#Shift_L(Alt_L(Super_L(s)))}",
"STP*/THRA*/KPH*/T*": "{#Shift_L(Alt_L(Super_L(t)))}",
"STP*/THRA*/KPH*/*U": "{#Shift_L(Alt_L(Super_L(u)))}",
"STP*/THRA*/KPH*/SR*": "{#Shift_L(Alt_L(Super_L(v)))}",
"STP*/THRA*/KPH*/W*": "{#Shift_L(Alt_L(Super_L(w)))}",
"STP*/THRA*/KPH*/KP*": "{#Shift_L(Alt_L(Super_L(x)))}",
"STP*/THRA*/KPH*/KWR*": "{#Shift_L(Alt_L(Super_L(y)))}",
"STP*/THRA*/KPH*/STKPW*": "{#Shift_L(Alt_L(Super_L(z)))}",
"STP*/THRA*/KPH*/0": "{#Shift_L(Alt_L(Super_L(0)))}",
"STP*/THRA*/KPH*/1": "{#Shift_L(Alt_L(Super_L(1)))}",
"STP*/THRA*/KPH*/2": "{#Shift_L(Alt_L(Super_L(2)))}",
"STP*/THRA*/KPH*/3": "{#Shift_L(Alt_L(Super_L(3)))}",
"STP*/THRA*/KPH*/4": "{#Shift_L(Alt_L(Super_L(4)))}",
"STP*/THRA*/KPH*/5": "{#Shift_L(Alt_L(Super_L(5)))}",
"STP*/THRA*/KPH*/6": "{#Shift_L(Alt_L(Super_L(6)))}",
"STP*/THRA*/KPH*/7": "{#Shift_L(Alt_L(Super_L(7)))}",
"STP*/THRA*/KPH*/8": "{#Shift_L(Alt_L(Super_L(8)))}",
"STP*/THRA*/KPH*/9": "{#Shift_L(Alt_L(Super_L(9)))}",
"STP*/THRA*/KPH*/KH-FG": "{#Shift_L(Alt_L(Super_L(grave)))}",
"STP*/THRA*/KPH*/KW-BG": "{#Shift_L(Alt_L(Super_L(comma)))}",
"STP*/THRA*/KPH*/PR*EPB": "{#Shift_L(Alt_L(Super_L(parenright)))}",
"STP*/THRA*/KPH*/PREPB": "{#Shift_L(Alt_L(Super_L(parenleft)))}",
"STP*/THRA*/KPH*/PW*FP": "{#Shift_L(Alt_L(Super_L(BackSpace)))}",
"STP*/THRA*/KPH*/PWR*BGT": "{#Shift_L(Alt_L(Super_L(bracketright)))}",
"STP*/THRA*/KPH*/PWR-BGT": "{#Shift_L(Alt_L(Super_L(bracketleft)))}",
"STP*/THRA*/KPH*/R-R": "{#Shift_L(Alt_L(Super_L(Return)))}",
"STP*/THRA*/KPH*/S-P": "{#Shift_L(Alt_L(Super_L(space)))}",
"STP*/THRA*/KPH*/SP*S": "{#Shift_L(Alt_L(Super_L()))}",
"STP*/THRA*/KPH*/SPWHRAERB": "{#Shift_L(Alt_L(Super_L(backslash)))}",
"STP*/THRA*/KPH*/STPH-G": "{#Shift_L(Alt_L(Super_L(Right)))}",
"STP*/THRA*/KPH*/STPH-B": "{#Shift_L(Alt_L(Super_L(Down)))}",
"STP*/THRA*/KPH*/STPH-P": "{#Shift_L(Alt_L(Super_L(Up)))}",
"STP*/THRA*/KPH*/STPH-R": "{#Shift_L(Alt_L(Super_L(Left)))}",
"STP*/THRA*/KPH*/TA*B": "{#Shift_L(Alt_L(Super_L(Tab)))}",
"STP*/THRA*/KPH*/TKHRAO*ET": "{#Shift_L(Alt_L(Super_L(Delete)))}",
"STP*/THRA*/KHR*/KPH*/A*": "{#Shift_L(Alt_L(Control_L(Super_L(a))))}",
"STP*/THRA*/KHR*/KPH*/PW*": "{#Shift_L(Alt_L(Control_L(Super_L(b))))}",
"STP*/THRA*/KHR*/KPH*/KR*": "{#Shift_L(Alt_L(Control_L(Super_L(c))))}",
"STP*/THRA*/KHR*/KPH*/TK*": "{#Shift_L(Alt_L(Control_L(Super_L(d))))}",
"STP*/THRA*/KHR*/KPH*/*E": "{#Shift_L(Alt_L(Control_L(Super_L(e))))}",
"STP*/THRA*/KHR*/KPH*/TP*": "{#Shift_L(Alt_L(Control_L(Super_L(f))))}",
"STP*/THRA*/KHR*/KPH*/TKPW*": "{#Shift_L(Alt_L(Control_L(Super_L(g))))}",
"STP*/THRA*/KHR*/KPH*/H*": "{#Shift_L(Alt_L(Control_L(Super_L(h))))}",
"STP*/THRA*/KHR*/KPH*/*EU": "{#Shift_L(Alt_L(Control_L(Super_L(i))))}",
"STP*/THRA*/KHR*/KPH*/SKWR*": "{#Shift_L(Alt_L(Control_L(Super_L(j))))}",
"STP*/THRA*/KHR*/KPH*/K*": "{#Shift_L(Alt_L(Control_L(Super_L(k))))}",
"STP*/THRA*/KHR*/KPH*/HR*": "{#Shift_L(Alt_L(Control_L(Super_L(l))))}",
"STP*/THRA*/KHR*/KPH*/PH*": "{#Shift_L(Alt_L(Control_L(Super_L(m))))}",
"STP*/THRA*/KHR*/KPH*/TPH*": "{#Shift_L(Alt_L(Control_L(Super_L(n))))}",
"STP*/THRA*/KHR*/KPH*/O*": "{#Shift_L(Alt_L(Control_L(Super_L(o))))}",
"STP*/THRA*/KHR*/KPH*/P*": "{#Shift_L(Alt_L(Control_L(Super_L(p))))}",
"STP*/THRA*/KHR*/KPH*/KW*": "{#Shift_L(Alt_L(Control_L(Super_L(q))))}",
"STP*/THRA*/KHR*/KPH*/R*": "{#Shift_L(Alt_L(Control_L(Super_L(r))))}",
"STP*/THRA*/KHR*/KPH*/S*": "{#Shift_L(Alt_L(Control_L(Super_L(s))))}",
"STP*/THRA*/KHR*/KPH*/T*": "{#Shift_L(Alt_L(Control_L(Super_L(t))))}",
"STP*/THRA*/KHR*/KPH*/*U": "{#Shift_L(Alt_L(Control_L(Super_L(u))))}",
"STP*/THRA*/KHR*/KPH*/SR*": "{#Shift_L(Alt_L(Control_L(Super_L(v))))}",
"STP*/THRA*/KHR*/KPH*/W*": "{#Shift_L(Alt_L(Control_L(Super_L(w))))}",
"STP*/THRA*/KHR*/KPH*/KP*": "{#Shift_L(Alt_L(Control_L(Super_L(x))))}",
"STP*/THRA*/KHR*/KPH*/KWR*": "{#Shift_L(Alt_L(Control_L(Super_L(y))))}",
"STP*/THRA*/KHR*/KPH*/STKPW*": "{#Shift_L(Alt_L(Control_L(Super_L(z))))}",
"STP*/THRA*/KHR*/KPH*/0": "{#Shift_L(Alt_L(Control_L(Super_L(0))))}",
"STP*/THRA*/KHR*/KPH*/1": "{#Shift_L(Alt_L(Control_L(Super_L(1))))}",
"STP*/THRA*/KHR*/KPH*/2": "{#Shift_L(Alt_L(Control_L(Super_L(2))))}",
"STP*/THRA*/KHR*/KPH*/3": "{#Shift_L(Alt_L(Control_L(Super_L(3))))}",
"STP*/THRA*/KHR*/KPH*/4": "{#Shift_L(Alt_L(Control_L(Super_L(4))))}",
"STP*/THRA*/KHR*/KPH*/5": "{#Shift_L(Alt_L(Control_L(Super_L(5))))}",
"STP*/THRA*/KHR*/KPH*/6": "{#Shift_L(Alt_L(Control_L(Super_L(6))))}",
"STP*/THRA*/KHR*/KPH*/7": "{#Shift_L(Alt_L(Control_L(Super_L(7))))}",
"STP*/THRA*/KHR*/KPH*/8": "{#Shift_L(Alt_L(Control_L(Super_L(8))))}",
"STP*/THRA*/KHR*/KPH*/9": "{#Shift_L(Alt_L(Control_L(Super_L(9))))}",
"STP*/THRA*/KHR*/KPH*/KH-FG": "{#Shift_L(Alt_L(Control_L(Super_L(grave))))}",
"STP*/THRA*/KHR*/KPH*/KW-BG": "{#Shift_L(Alt_L(Control_L(Super_L(comma))))}",
"STP*/THRA*/KHR*/KPH*/PR*EPB": "{#Shift_L(Alt_L(Control_L(Super_L(parenright))))}",
"STP*/THRA*/KHR*/KPH*/PREPB": "{#Shift_L(Alt_L(Control_L(Super_L(parenleft))))}",
"STP*/THRA*/KHR*/KPH*/PW*FP": "{#Shift_L(Alt_L(Control_L(Super_L(BackSpace))))}",
"STP*/THRA*/KHR*/KPH*/PWR*BGT": "{#Shift_L(Alt_L(Control_L(Super_L(bracketright))))}",
"STP*/THRA*/KHR*/KPH*/PWR-BGT": "{#Shift_L(Alt_L(Control_L(Super_L(bracketleft))))}",
"STP*/THRA*/KHR*/KPH*/R-R": "{#Shift_L(Alt_L(Control_L(Super_L(Return))))}",
"STP*/THRA*/KHR*/KPH*/S-P": "{#Shift_L(Alt_L(Control_L(Super_L(space))))}",
"STP*/THRA*/KHR*/KPH*/SP*S": "{#Shift_L(Alt_L(Control_L(Super_L())))}",
"STP*/THRA*/KHR*/KPH*/SPWHRAERB": "{#Shift_L(Alt_L(Control_L(Super_L(backslash))))}",
"STP*/THRA*/KHR*/KPH*/STPH-G": "{#Shift_L(Alt_L(Control_L(Super_L(Right))))}",
"STP*/THRA*/KHR*/KPH*/STPH-B": "{#Shift_L(Alt_L(Control_L(Super_L(Down))))}",
"STP*/THRA*/KHR*/KPH*/STPH-P": "{#Shift_L(Alt_L(Control_L(Super_L(Up))))}",
"STP*/THRA*/KHR*/KPH*/STPH-R": "{#Shift_L(Alt_L(Control_L(Super_L(Left))))}",
"STP*/THRA*/KHR*/KPH*/TA*B": "{#Shift_L(Alt_L(Control_L(Super_L(Tab))))}",
"STP*/THRA*/KHR*/KPH*/TKHRAO*ET": "{#Shift_L(Alt_L(Control_L(Super_L(Delete))))}",
"STP*/THRA*/KHR*/A*": "{#Shift_L(Alt_L(Control_L(a)))}",
"STP*/THRA*/KHR*/PW*": "{#Shift_L(Alt_L(Control_L(b)))}",
"STP*/THRA*/KHR*/KR*": "{#Shift_L(Alt_L(Control_L(c)))}",
"STP*/THRA*/KHR*/TK*": "{#Shift_L(Alt_L(Control_L(d)))}",
"STP*/THRA*/KHR*/*E": "{#Shift_L(Alt_L(Control_L(e)))}",
"STP*/THRA*/KHR*/TP*": "{#Shift_L(Alt_L(Control_L(f)))}",
"STP*/THRA*/KHR*/TKPW*": "{#Shift_L(Alt_L(Control_L(g)))}",
"STP*/THRA*/KHR*/H*": "{#Shift_L(Alt_L(Control_L(h)))}",
"STP*/THRA*/KHR*/*EU": "{#Shift_L(Alt_L(Control_L(i)))}",
"STP*/THRA*/KHR*/SKWR*": "{#Shift_L(Alt_L(Control_L(j)))}",
"STP*/THRA*/KHR*/K*": "{#Shift_L(Alt_L(Control_L(k)))}",
"STP*/THRA*/KHR*/HR*": "{#Shift_L(Alt_L(Control_L(l)))}",
"STP*/THRA*/KHR*/PH*": "{#Shift_L(Alt_L(Control_L(m)))}",
"STP*/THRA*/KHR*/TPH*": "{#Shift_L(Alt_L(Control_L(n)))}",
"STP*/THRA*/KHR*/O*": "{#Shift_L(Alt_L(Control_L(o)))}",
"STP*/THRA*/KHR*/P*": "{#Shift_L(Alt_L(Control_L(p)))}",
"STP*/THRA*/KHR*/KW*": "{#Shift_L(Alt_L(Control_L(q)))}",
"STP*/THRA*/KHR*/R*": "{#Shift_L(Alt_L(Control_L(r)))}",
"STP*/THRA*/KHR*/S*": "{#Shift_L(Alt_L(Control_L(s)))}",
"STP*/THRA*/KHR*/T*": "{#Shift_L(Alt_L(Control_L(t)))}",
"STP*/THRA*/KHR*/*U": "{#Shift_L(Alt_L(Control_L(u)))}",
"STP*/THRA*/KHR*/SR*": "{#Shift_L(Alt_L(Control_L(v)))}",
"STP*/THRA*/KHR*/W*": "{#Shift_L(Alt_L(Control_L(w)))}",
"STP*/THRA*/KHR*/KP*": "{#Shift_L(Alt_L(Control_L(x)))}",
"STP*/THRA*/KHR*/KWR*": "{#Shift_L(Alt_L(Control_L(y)))}",
"STP*/THRA*/KHR*/STKPW*": "{#Shift_L(Alt_L(Control_L(z)))}",
"STP*/THRA*/KHR*/0": "{#Shift_L(Alt_L(Control_L(0)))}",
"STP*/THRA*/KHR*/1": "{#Shift_L(Alt_L(Control_L(1)))}",
"STP*/THRA*/KHR*/2": "{#Shift_L(Alt_L(Control_L(2)))}",
"STP*/THRA*/KHR*/3": "{#Shift_L(Alt_L(Control_L(3)))}",
"STP*/THRA*/KHR*/4": "{#Shift_L(Alt_L(Control_L(4)))}",
"STP*/THRA*/KHR*/5": "{#Shift_L(Alt_L(Control_L(5)))}",
"STP*/THRA*/KHR*/6": "{#Shift_L(Alt_L(Control_L(6)))}",
"STP*/THRA*/KHR*/7": "{#Shift_L(Alt_L(Control_L(7)))}",
"STP*/THRA*/KHR*/8": "{#Shift_L(Alt_L(Control_L(8)))}",
"STP*/THRA*/KHR*/9": "{#Shift_L(Alt_L(Control_L(9)))}",
"STP*/THRA*/KHR*/KH-FG": "{#Shift_L(Alt_L(Control_L(grave)))}",
"STP*/THRA*/KHR*/KW-BG": "{#Shift_L(Alt_L(Control_L(comma)))}",
"STP*/THRA*/KHR*/PR*EPB": "{#Shift_L(Alt_L(Control_L(parenright)))}",
"STP*/THRA*/KHR*/PREPB": "{#Shift_L(Alt_L(Control_L(parenleft)))}",
"STP*/THRA*/KHR*/PW*FP": "{#Shift_L(Alt_L(Control_L(BackSpace)))}",
"STP*/THRA*/KHR*/PWR*BGT": "{#Shift_L(Alt_L(Control_L(bracketright)))}",
"STP*/THRA*/KHR*/PWR-BGT": "{#Shift_L(Alt_L(Control_L(bracketleft)))}",
"STP*/THRA*/KHR*/R-R": "{#Shift_L(Alt_L(Control_L(Return)))}",
"STP*/THRA*/KHR*/S-P": "{#Shift_L(Alt_L(Control_L(space)))}",
"STP*/THRA*/KHR*/SP*S": "{#Shift_L(Alt_L(Control_L()))}",
"STP*/THRA*/KHR*/SPWHRAERB": "{#Shift_L(Alt_L(Control_L(backslash)))}",
"STP*/THRA*/KHR*/STPH-G": "{#Shift_L(Alt_L(Control_L(Right)))}",
"STP*/THRA*/KHR*/STPH-B": "{#Shift_L(Alt_L(Control_L(Down)))}",
"STP*/THRA*/KHR*/STPH-P": "{#Shift_L(Alt_L(Control_L(Up)))}",
"STP*/THRA*/KHR*/STPH-R": "{#Shift_L(Alt_L(Control_L(Left)))}",
"STP*/THRA*/KHR*/TA*B": "{#Shift_L(Alt_L(Control_L(Tab)))}",
"STP*/THRA*/KHR*/TKHRAO*ET": "{#Shift_L(Alt_L(Control_L(Delete)))}",
"STP*/THRA*/KPH*/KHR*/A*": "{#Shift_L(Alt_L(Super_L(Control_L(a))))}",
"STP*/THRA*/KPH*/KHR*/PW*": "{#Shift_L(Alt_L(Super_L(Control_L(b))))}",
"STP*/THRA*/KPH*/KHR*/KR*": "{#Shift_L(Alt_L(Super_L(Control_L(c))))}",
"STP*/THRA*/KPH*/KHR*/TK*": "{#Shift_L(Alt_L(Super_L(Control_L(d))))}",
"STP*/THRA*/KPH*/KHR*/*E": "{#Shift_L(Alt_L(Super_L(Control_L(e))))}",
"STP*/THRA*/KPH*/KHR*/TP*": "{#Shift_L(Alt_L(Super_L(Control_L(f))))}",
"STP*/THRA*/KPH*/KHR*/TKPW*": "{#Shift_L(Alt_L(Super_L(Control_L(g))))}",
"STP*/THRA*/KPH*/KHR*/H*": "{#Shift_L(Alt_L(Super_L(Control_L(h))))}",
"STP*/THRA*/KPH*/KHR*/*EU": "{#Shift_L(Alt_L(Super_L(Control_L(i))))}",
"STP*/THRA*/KPH*/KHR*/SKWR*": "{#Shift_L(Alt_L(Super_L(Control_L(j))))}",
"STP*/THRA*/KPH*/KHR*/K*": "{#Shift_L(Alt_L(Super_L(Control_L(k))))}",
"STP*/THRA*/KPH*/KHR*/HR*": "{#Shift_L(Alt_L(Super_L(Control_L(l))))}",
"STP*/THRA*/KPH*/KHR*/PH*": "{#Shift_L(Alt_L(Super_L(Control_L(m))))}",
"STP*/THRA*/KPH*/KHR*/TPH*": "{#Shift_L(Alt_L(Super_L(Control_L(n))))}",
"STP*/THRA*/KPH*/KHR*/O*": "{#Shift_L(Alt_L(Super_L(Control_L(o))))}",
"STP*/THRA*/KPH*/KHR*/P*": "{#Shift_L(Alt_L(Super_L(Control_L(p))))}",
"STP*/THRA*/KPH*/KHR*/KW*": "{#Shift_L(Alt_L(Super_L(Control_L(q))))}",
"STP*/THRA*/KPH*/KHR*/R*": "{#Shift_L(Alt_L(Super_L(Control_L(r))))}",
"STP*/THRA*/KPH*/KHR*/S*": "{#Shift_L(Alt_L(Super_L(Control_L(s))))}",
"STP*/THRA*/KPH*/KHR*/T*": "{#Shift_L(Alt_L(Super_L(Control_L(t))))}",
"STP*/THRA*/KPH*/KHR*/*U": "{#Shift_L(Alt_L(Super_L(Control_L(u))))}",
"STP*/THRA*/KPH*/KHR*/SR*": "{#Shift_L(Alt_L(Super_L(Control_L(v))))}",
"STP*/THRA*/KPH*/KHR*/W*": "{#Shift_L(Alt_L(Super_L(Control_L(w))))}",
"STP*/THRA*/KPH*/KHR*/KP*": "{#Shift_L(Alt_L(Super_L(Control_L(x))))}",
"STP*/THRA*/KPH*/KHR*/KWR*": "{#Shift_L(Alt_L(Super_L(Control_L(y))))}",
"STP*/THRA*/KPH*/KHR*/STKPW*": "{#Shift_L(Alt_L(Super_L(Control_L(z))))}",
"STP*/THRA*/KPH*/KHR*/0": "{#Shift_L(Alt_L(Super_L(Control_L(0))))}",
"STP*/THRA*/KPH*/KHR*/1": "{#Shift_L(Alt_L(Super_L(Control_L(1))))}",
"STP*/THRA*/KPH*/KHR*/2": "{#Shift_L(Alt_L(Super_L(Control_L(2))))}",
"STP*/THRA*/KPH*/KHR*/3": "{#Shift_L(Alt_L(Super_L(Control_L(3))))}",
"STP*/THRA*/KPH*/KHR*/4": "{#Shift_L(Alt_L(Super_L(Control_L(4))))}",
"STP*/THRA*/KPH*/KHR*/5": "{#Shift_L(Alt_L(Super_L(Control_L(5))))}",
"STP*/THRA*/KPH*/KHR*/6": "{#Shift_L(Alt_L(Super_L(Control_L(6))))}",
"STP*/THRA*/KPH*/KHR*/7": "{#Shift_L(Alt_L(Super_L(Control_L(7))))}",
"STP*/THRA*/KPH*/KHR*/8": "{#Shift_L(Alt_L(Super_L(Control_L(8))))}",
"STP*/THRA*/KPH*/KHR*/9": "{#Shift_L(Alt_L(Super_L(Control_L(9))))}",
"STP*/THRA*/KPH*/KHR*/KH-FG": "{#Shift_L(Alt_L(Super_L(Control_L(grave))))}",
"STP*/THRA*/KPH*/KHR*/KW-BG": "{#Shift_L(Alt_L(Super_L(Control_L(comma))))}",
"STP*/THRA*/KPH*/KHR*/PR*EPB": "{#Shift_L(Alt_L(Super_L(Control_L(parenright))))}",
"STP*/THRA*/KPH*/KHR*/PREPB": "{#Shift_L(Alt_L(Super_L(Control_L(parenleft))))}",
"STP*/THRA*/KPH*/KHR*/PW*FP": "{#Shift_L(Alt_L(Super_L(Control_L(BackSpace))))}",
"STP*/THRA*/KPH*/KHR*/PWR*BGT": "{#Shift_L(Alt_L(Super_L(Control_L(bracketright))))}",
"STP*/THRA*/KPH*/KHR*/PWR-BGT": "{#Shift_L(Alt_L(Super_L(Control_L(bracketleft))))}",
"STP*/THRA*/KPH*/KHR*/R-R": "{#Shift_L(Alt_L(Super_L(Control_L(Return))))}",
"STP*/THRA*/KPH*/KHR*/S-P": "{#Shift_L(Alt_L(Super_L(Control_L(space))))}",
"STP*/THRA*/KPH*/KHR*/SP*S": "{#Shift_L(Alt_L(Super_L(Control_L())))}",
"STP*/THRA*/KPH*/KHR*/SPWHRAERB": "{#Shift_L(Alt_L(Super_L(Control_L(backslash))))}",
"STP*/THRA*/KPH*/KHR*/STPH-G": "{#Shift_L(Alt_L(Super_L(Control_L(Right))))}",
"STP*/THRA*/KPH*/KHR*/STPH-B": "{#Shift_L(Alt_L(Super_L(Control_L(Down))))}",
"STP*/THRA*/KPH*/KHR*/STPH-P": "{#Shift_L(Alt_L(Super_L(Control_L(Up))))}",
"STP*/THRA*/KPH*/KHR*/STPH-R": "{#Shift_L(Alt_L(Super_L(Control_L(Left))))}",
"STP*/THRA*/KPH*/KHR*/TA*B": "{#Shift_L(Alt_L(Super_L(Control_L(Tab))))}",
"STP*/THRA*/KPH*/KHR*/TKHRAO*ET": "{#Shift_L(Alt_L(Super_L(Control_L(Delete))))}",
"KHR*": "{}",
"KPH*": "{}",
"THRA*": "{}",
"STP*": "{}",
"TKHRAO*ET": "{#Delete}",
"S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S/S": "This entry allows the Plover buffer to increase to 100."
}
