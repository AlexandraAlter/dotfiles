# ~/.tmux.conf

### unbind all keys

unbind -a

### aesthetics

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

### prefixes

set -g prefix C-b
bind C-b send-prefix
set -g prefix2 C-a
bind C-a send-prefix -2

### options

set -g default-terminal "screen-256color"

set -sg escape-time 50 # escape fast

set -g mouse on

set -g status-keys vi
set -g mode-keys vi

#set -s editor vim (not in this version yet)

set -g allow-rename off # no automatic window name

set -g remain-on-exit on # no automatic pane close

### management

bind -N 'Command prompt' : command-prompt

bind -N 'Clear history' -n C-S-k clear-history

bind -N 'Reload configuration' R source ~/.tmux.conf

bind -N 'List keys'        ?   list-keys -N
bind -N 'List all keys'    M-? list-keys
bind -N 'Describe key'     @   command-prompt -k -p key 'list-keys -1N "%%%"'
bind -N 'Describe any key' M-@ command-prompt -k -p key 'list-keys -1N "%%%"'

### copy-mode

#unbind -n MouseDrag1Pane (don't think we need this unbind)
unbind -T copy-mode MouseDrag1Pane
#bind -n MouseDrag1Pane if-shell -Ft= '#{mouse_any_flag}' 'if -Ft= "#{pane_in_mode}" "copy-mode -M" "send-keys -M"' 'copy-mode -M'


bind -N 'Copy mode' y     copy-mode
bind -N 'Copy mode' PPage copy-mode -u

bind -n WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' \
  'if-shell -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -et="'

### navigation

bind -N 'Navigate sessions' s choose-tree -Zs
bind -N 'Navigate windows'  w choose-tree -Zw

### information

bind -N 'Display info'  i  display-message
bind -N 'Show messages' \~ show-messages
bind -N 'Clock mode'    t  clock-mode

### sessions

#bind -N '' \$ command-prompt -I "#S" "rename-session -- '%%'"

### clients

bind -N 'Previous client' -n M-Up   switch-client -p
bind -N 'Next client'     -n M-Down switch-client -n
bind -N 'Last client'        L      switch-client -l

bind -N 'Refresh client' r refresh-client

bind -N 'Reset visible portion'     -r DC      refresh-client -c
bind -N 'Set visible portion up'    -r S-Up    refresh-client -U 10
bind -N 'Set visible portion down'  -r S-Down  refresh-client -D 10
bind -N 'Set visible portion left'  -r S-Left  refresh-client -L 10
bind -N 'Set visible portion right' -r S-Right refresh-client -R 10

bind -N 'Detach client'          d   detach-client
bind -N 'Detach selected client' D   choose-client -Z
bind -N 'Suspend client'         C-z suspend-client

### windows

bind -N 'Next window'     n  next-window
bind -N 'Previous window' p  previous-window
bind -N 'Last window'     l  last-window

bind -N 'Next window'     M-n  next-window -a
bind -N 'Previous window' M-p  previous-window -a

bind -N 'Next alerted window'     -n M-Right next-window
bind -N 'Previous alerted window' -n M-Left  previous-window

bind -N 'Next window'     -n WheelUpStatus   next-window
bind -N 'Previous window' -n WheelDownStatus previous-window

bind -N '0th window'  $  select-window -t:0
bind -N '1st window'  &  select-window -t:1
bind -N '2nd window'  [  select-window -t:2
bind -N '3rd window'  \{ select-window -t:3
bind -N '4th window'  \} select-window -t:4
bind -N '5th window'  (  select-window -t:5
bind -N '6th window'  =  select-window -t:6
bind -N '7th window'  *  select-window -t:7
bind -N '8th window'  )  select-window -t:8
bind -N '9th window'  +  select-window -t:9
bind -N '10th window' ]  select-window -t:10
bind -N '11th window' !  select-window -t:11

bind -N 'Select window'    \' command-prompt -p index "select-window -t ':%%'"
bind -N 'Select window' -n MouseDown1Status select-window -t =

bind -N 'Find window' f command-prompt "find-window -Z -- '%%'"

bind -N 'Rename window' , command-prompt -I "#W" "rename-window -- '%%'"
bind -N 'Kill window'   k confirm-before -p "kill-window #W? (y/n)" kill-window

bind -N 'Move window' . command-prompt "move-window -t '%%'"

bind -N 'Rotate window upwards'   C-o rotate-window
bind -N 'Rotate window downwards' M-o rotate-window -D

bind -N 'New window'     c new-window
bind -N 'Respawn window' r respawn-window

### buffers

bind b display-menu -T 'Buffers' -x 0 -y S \
  'List' l 'list-buffers' \
  'Delete' d 'delete-buffer' \
  'Choose' c 'choose-buffer -Z' \
  'Paste' p 'paste-buffer'

### panes

bind -N 'Display panes' q display-panes

bind -N 'Select pane up'    -n S-Up    display-panes \; select-pane -U
bind -N 'Select pane down'  -n S-Down  display-panes \; select-pane -D
bind -N 'Select pane left'  -n S-Left  display-panes \; select-pane -L
bind -N 'Select pane right' -n S-Right display-panes \; select-pane -R

bind -N 'Last pane'         \; last-pane
bind -N 'Set marked pane'   m  select-pane -m
bind -N 'Unset marked pane' M  select-pane -M
bind -N 'Select next pane'  o  select-pane -t :.+

bind -N 'Select pane' -n MouseDown1Pane select-pane -t = \; send-keys -M

#bind \{ swap-pane -U
#bind \} swap-pane -D

bind -N 'Split window'            \" split-window
bind -N 'Split window horizontal' /  split-window -h
bind -N 'Split window vertical'   -  split-window -v

bind -N 'Break pane' !  break-pane

bind -N 'Resize pane up'    -n M-S-Up    resize-pane -U
bind -N 'Resize pane down'  -n M-S-Down  resize-pane -D
bind -N 'Resize pane left'  -n M-S-Left  resize-pane -L
bind -N 'Resize pane right' -n M-S-Right resize-pane -R

bind -N 'Resize pane up by 5'    -n M-C-S-Up    resize-pane -U 5
bind -N 'Resize pane down by 5'  -n M-C-S-Down  resize-pane -D 5
bind -N 'Resize pane left by 5'  -n M-C-S-Left  resize-pane -L 5
bind -N 'Resize pane right by 5' -n M-C-S-Right resize-pane -R 5

bind -N 'Resize pane' z resize-pane -Z
bind -N 'Resize pane' -n MouseDrag1Border resize-pane -M

bind -N 'Kill pane' x confirm-before -p "kill-pane #P? (y/n)" kill-pane

### layouts

bind -N 'Next layout'   Space next-layout
bind -N 'Layout menu' C-Space \
  display-menu -T 'Layouts' -x 0 -y S \
    'next'      n 'next-layout' \
    'even'      e 'select-layout -E' \
    'even-hori' h 'select-layout even-horizontal' \
    'even-vert' v 'select-layout even-vertical' \
    'main-hori' H 'select-layout main-horizontal' \
    'main-vert' V 'select-layout main-vertical' \
    'tiled'     t 'select-layout tiled'

### function keys

bind -n F2     new-window -c "#{pane_current_path}"
bind -n C-F2   display-panes \; split-window -h -c "#{pane_current_path}"
bind -n S-F2   display-panes \; split-window -v -c "#{pane_current_path}"
bind -n C-S-F2 new-session
bind -n F3     previous-window
bind -n S-F3   display-panes \; select-pane -t :.-
bind -n C-F3   display-panes \; swap-pane -s :. -t :.- \; select-pane -t :.-
bind -n C-S-F3 swap-window -t :-1
bind -n F4     next-window
bind -n S-F4   display-panes \; select-pane -t :.+
bind -n C-F4   display-panes \; swap-pane -s :. -t :.+ \; select-pane -t :.+
bind -n C-S-F4 swap-window -t :+1
bind -n F6     detach
bind -n C-F6   kill-pane
bind -n F7     copy-mode
bind -n F8     command-prompt -p "(rename-window) " "rename-window '%%'"
bind -n C-F8   command-prompt -p "(rename-session) " "rename-session '%%'"
bind -n S-F8   next-layout
bind -n M-F9   display-panes \; setw synchronize-panes
bind -n M-F11  break-pane
bind -n C-F11  join-pane -h -s :. -t :-1
bind -n S-F11  resize-pane -Z

bind -n M-NPage copy-mode \; send-keys NPage
bind -n M-PPage copy-mode \; send-keys PPage

bind -n M-IC paste-buffer

#bind -n S-F7 capture-pane -S -32768 \; save-buffer "$BYOBU_RUN_DIR/printscreen" \; delete-buffer \; new-window -n "PRINTSCREEN" "$EDITOR $BYOBU_RUN_DIR/printscreen"
#bind -n M-S-F8 new-window -k "byobu-layout restore; clear; $SHELL"
#bind -n S-F12 source $BYOBU_PREFIX/share/byobu/keybindings/f-keys.tmux.disable \; display-message "Byobu F-keys: DISABLED"
#bind -n C-S-F12 new-window $BYOBU_PREFIX/lib/byobu/include/mondrian
#bind -n M-F12 source $BYOBU_PREFIX/share/byobu/keybindings/mouse.tmux.enable

### menus

# bind ??? display-menu -T '#[align=centre]#{window_index}:#{window_name}' -x W -y S \
#   'Swap Left' l 'swap-window -t:-1' \
#   'Swap Right' r 'swap-window -t:+1' \
#   '#{?pane_marked_set,,-}Swap Marked' s 'swap-window' \
#   'Kill' X 'kill-window' \
#   'Respawn' R 'respawn-window -k' \
#   '#{?pane_marked,Unmark,Mark}' m 'select-pane -m' \
#   'Rename' n 'command-prompt -I \"#W\" \"rename-window -- '%%'\"' \
#   'New After' w 'new-window -a' \
#   'New At End' W 'new-window'

bind < display-menu -T "#[align=centre]#{window_index}:#{window_name}" -x W -y S \
  "Swap Left" l "swap-window -t:-1" \
  "Swap Right" r "swap-window -t:+1" \
  "#{?pane_marked_set,,-}Swap Marked" s swap-window \
  'Kill' X kill-window \
  'Respawn' R "respawn-window -k" \
  "#{?pane_marked,Unmark,Mark}" m "select-pane -m" \
  'Rename' n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" \
  "New After" w "new-window -a" \
  "New At End" W new-window

bind > display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P \
  "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r "copy-mode -t=; send -Xt= search-backward \"#{q:mouse_word}\"" \
  "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y "send-keys -l -- \"#{q:mouse_word}\"" \
  "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c "set-buffer -- \"#{q:mouse_word}\"" \
  "#{?mouse_line,Copy Line,}" l "set-buffer -- \"#{q:mouse_line}\"" \
  "Horizontal Split" h "split-window -h" \
  "Vertical Split" v "split-window -v" \
  "Swap Up" u "swap-pane -U" \
  "Swap Down" d "swap-pane -D" \
  "#{?pane_marked_set,,-}Swap Marked" s swap-pane \
  'Kill' X kill-pane \
  'Respawn' R "respawn-pane -k" \
  "#{?pane_marked,Unmark,Mark}" m "select-pane -m" \
  "#{?window_zoomed_flag,Unzoom,Zoom}" z "resize-pane -Z"

bind -n MouseDown3Pane if-shell -Ft= "#{||:#{mouse_any_flag},#{pane_in_mode}}" \
  "select-pane -t=; send-keys -M" \
  "display-menu -t= -xM -yM -T \"#[align=centre]#{pane_index} (#{pane_id})\" \
    '#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}' 'C-r' {copy-mode -t=; send -Xt= search-backward \"#{q:mouse_word}\"} \
    '#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}' 'C-y' {send-keys -l -- \"#{q:mouse_word}\"} \
    '#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}' 'c' {set-buffer -- \"#{q:mouse_word}\"} \
    '#{?mouse_line,Copy Line,}' 'l' {set-buffer -- \"#{q:mouse_line}\"} '' \
    'Horizontal Split' 'h' {split-window -h} \
    'Vertical Split' 'v' {split-window -v} '' \
    'Swap Up' 'u' {swap-pane -U} \
    'Swap Down' 'd' {swap-pane -D} \
    '#{?pane_marked_set,,-}Swap Marked' 's' {swap-pane} '' \
    'Kill' 'X' {kill-pane} \
    'Respawn' 'R' {respawn-pane -k} \
    '#{?pane_marked,Unmark,Mark}' 'm' {select-pane -m} \
    '#{?window_zoomed_flag,Unzoom,Zoom}' 'z' {resize-pane -Z}"

bind -n MouseDown3Status display-menu -t= -T '#[align=centre]#{window_index}:#{window_name}' -x W -y S \
  'Swap Left' l 'swap-window -t:-1' \
  'Swap Right' r 'swap-window -t:+1' \
  '#{?pane_marked_set,,-}Swap Marked' s 'swap-window' \
  'Kill' X 'kill-window' \
  'Respawn' R 'respawn-window -k' \
  '#{?pane_marked,Unmark,Mark}' m "select-pane -m" \
  'Rename' n 'command-prompt -I "#W" "rename-window -- \"%%\""' \
  'New After' w 'new-window -a' \
  'New At End' W 'new-window'

bind -n MouseDown3StatusLeft display-menu -t= -T '#[align=centre]#{session_name}' -x M -y S \
  'Next' n 'switch-client -n' \
  'Previous' p 'switch-client -p' \
  'Renumber' N 'move-window -r' \
  'Rename' n 'command-prompt -I "#S" "rename-session -- \"%%\""' \
  'New Session' s new-session \
  'New Window' w new-window

bind -n M-MouseDown3Pane display-menu -t= -T '#[align=centre]#{pane_index} (#{pane_id})' -x M -y M \
  '#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}' C-r 'copy-mode -t=; send -Xt= search-backward "#{q:mouse_word}"' \
  '#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}' C-y 'send-keys -l -- "#{q:mouse_word}"' \
  '#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}' c 'set-buffer -- "#{q:mouse_word}"' \
  '#{?mouse_line,Copy Line,}' l 'set-buffer -- "#{q:mouse_line}"' \
  'Horizontal Split' h 'split-window -h' \
  'Vertical Split' v 'split-window -v' \
  'Swap Up' u 'swap-pane -U' \
  'Swap Down' d 'swap-pane -D' \
  '#{?pane_marked_set,,-}Swap Marked' s swap-pane \
  'Kill' X kill-pane \
  'Respawn' R 'respawn-pane -k' \
  '#{?pane_marked,Unmark,Mark}' m 'select-pane -m' \
  '#{?window_zoomed_flag,Unzoom,Zoom}' z 'resize-pane -Z'
